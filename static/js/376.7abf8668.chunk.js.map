{"version":3,"file":"static/js/376.7abf8668.chunk.js","mappings":"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","sources":["components/tool/task/sprintManage/DetailComponent.tsx"],"sourcesContent":["import { Col, Drawer, Form, Row } from \"antd\";\nimport moment from \"moment\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { Fn } from \"../../../../helper/function\";\nimport { TaskSprintManageService } from \"../../../../services/taskService\";\nimport { MyFormItem } from \"../../../core/Input\";\nimport { MyButton } from \"../../../core/MyButton\";\nimport { ProjectStatusComponent } from \"../ProjectStatusComponent\";\n\nexport default function ModifyComponent(props: any) {\n    const [name, setName] = useState('');\n    const [dateFrom, setDateFrom] = useState(moment());\n    const [dateTo, setDateTo] = useState(moment());\n    const [status, setStatus] = useState();\n    const { setIsLoading } = props;\n\n    let loadData = useCallback(() => {\n        if (props.keyData !== undefined) {\n            setIsLoading(true);\n            TaskSprintManageService.GetDetail(props.projectKey, props.keyData, (data: any) => {\n                let row = data.data.data;                \n                setName(row.name);\n                setDateFrom(moment(row.dateFrom));\n                setDateTo(moment(row.dateTo));\n                setStatus(row.status.id);\n            }, undefined, () => {\n                setIsLoading(false);\n            })\n        }\n    }, [props.projectKey, props.keyData, setIsLoading])\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n    function HandleOnClose() {\n        props.setVisible(false);\n        setName('');\n        setDateFrom(moment());\n        setDateTo(moment());\n\n        if (props.setKeyData !== undefined) {\n            props.setKeyData(undefined);\n        }\n    }\n\n    function HandleSubmitForm() {\n        let body = {\n            name: name,\n            dateFrom: dateFrom.format(\"yyyy-MM-DD\"),\n            dateTo: dateTo.format(\"yyyy-MM-DD\"),\n            status: status\n        };\n\n        setIsLoading(true);\n\n        if (props.keyData !== undefined) {\n            Edit(body);\n        } else {\n            Add(body);\n        }\n    }\n\n    function Add(body: any) {\n        TaskSprintManageService.Add(props.projectKey, body, (data: any) => {\n            Fn.PrintMsgSuccess(data);\n            HandleOnClose();\n            props.loadData();\n        }, () => {\n            props.setIsLoading(false)\n        });\n    }\n\n    function Edit(body: any) {\n        TaskSprintManageService.GetDetail(props.projectKey, props.keyData, (data: any) => {\n            body = Fn.GetTimestamp(data, body);\n            TaskSprintManageService.Edit(props.projectKey, props.keyData, body, (data: any) => {\n                Fn.PrintMsgSuccess(data);\n                HandleOnClose();\n                props.loadData();\n            }, () => {\n                props.setIsLoading(false)\n            });\n        }, () => {\n            props.setIsLoading(false)\n        });\n    }\n\n    function handleDeleteSprint() {\n        Swal.fire({\n            title: \"Xác nhận xóa\",\n            text: \"Bạn có muốn xóa sprint này không?\",\n            showDenyButton: true,\n            confirmButtonText: \"Có\",\n            denyButtonText: \"Không\",\n        }).then((result: any) => {\n            if (result.isConfirmed) {\n                doDeleteSprint()\n            }\n        })\n    }\n\n    function doDeleteSprint() {\n        props.setIsLoading(true);\n        TaskSprintManageService.GetDetail(props.projectKey, props.keyData, (data: any) => {\n            TaskSprintManageService.Delete(props.projectKey, props.keyData, Fn.GetTimestamp(data), (data: any) => {\n                Fn.PrintMsgSuccess(data);\n                HandleOnClose();\n                props.loadData();\n            }, () => {\n                props.setIsLoading(false);\n            });\n        }, () => {\n            props.setIsLoading(false);\n        })\n    }\n\n    return (\n        <Drawer\n            title=\"Chi tiết\"\n            open={props.visible}\n            onClose={HandleOnClose}>\n\n            <Form layout=\"vertical\" onSubmitCapture={HandleSubmitForm}>\n                <MyFormItem.Input\n                    label=\"Tên giai đoạn\"\n                    value={name}\n                    setValue={setName} />\n\n                <MyFormItem.DatePicker\n                    label=\"Ngày bắt đầu\"\n                    value={dateFrom}\n                    setValue={setDateFrom} />\n\n                <MyFormItem.DatePicker\n                    label=\"Ngày kết thúc\"\n                    value={dateTo}\n                    setValue={setDateTo} />\n\n                <ProjectStatusComponent\n                    label=\"Trạng thái\"\n                    projectKey={props.projectKey}\n                    type={2}\n                    value={status}\n                    setValue={setStatus} />\n\n                <Row gutter={24}>\n                    <Col span=\"12\">\n                        <MyButton\n                            isLoading={props.isLoading}\n                            htmlType=\"submit\"\n                            type=\"success\"\n                            value={props.keyData !== undefined ? \"Chỉnh sửa\" : \"Thêm mới\"} />\n                    </Col>\n                    <Col>\n                        <MyButton\n                            isLoading={props.isLoading}\n                            type=\"danger\"\n                            disabled={props.keyData === undefined}\n                            onClick={handleDeleteSprint}\n                            value=\"Xóa sprint\" />\n                    </Col>\n                </Row>\n            </Form>\n        </Drawer>\n    );\n}"],"names":["ModifyComponent","props","useState","name","setName","moment","dateFrom","setDateFrom","dateTo","setDateTo","status","setStatus","setIsLoading","loadData","useCallback","undefined","keyData","TaskSprintManageService","projectKey","data","row","id","HandleOnClose","setVisible","setKeyData","useEffect","title","open","visible","onClose","layout","onSubmitCapture","body","format","Fn","Edit","Add","label","value","setValue","type","gutter","span","isLoading","htmlType","disabled","onClick","Swal","text","showDenyButton","confirmButtonText","denyButtonText","then","result","isConfirmed"],"sourceRoot":""}
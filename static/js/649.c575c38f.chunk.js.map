{"version":3,"file":"static/js/649.c575c38f.chunk.js","mappings":"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","sources":["components/core/Text.tsx","components/core/UI_FormatComponent.tsx","components/tool/task/report/ProjectReportComponent.tsx","components/tool/task/report/TaskReportComponent.tsx","components/tool/task/report/ToDoListReportComponent.tsx","components/tool/task/report/WorkflowReportComponent.tsx","components/tool/task/TaskIndexComponent.tsx","services/taskService.ts"],"sourcesContent":["export function Text(props: any) {\n    const { children } = props;\n    return <p>{children}</p>\n}\n\nexport function TextStrong(props: any) {\n    const { value } = props;\n    return <strong>{value}</strong>\n}\n\nexport function TextWrap(props: any) {\n    const { children } = props;\n    return <span style={{\"wordBreak\": \"break-all\"}}>{children}</span>\n}","import moment from \"moment\";\n\nexport function UIFormatDateVNComponent(props: any) {\n    const { value } = props;\n    let dateStr = value !== undefined && value !== '' && value !== null ?\n        moment(value).format(\"DD/MM/YYYY\") : \"\";\n    return <span>{dateStr}</span>\n}\n\nexport function UIFormatDateTimeVNComponent(props: any) {\n    const { value } = props;\n    let dateStr = value !== undefined && value !== '' && value !== null ?\n        moment(value).format(\"DD/MM/YYYY HH:mm:ss\") : \"\";\n    return <span>{dateStr}</span>\n}","import { Col, Row } from \"antd\"\nimport { Link } from \"react-router-dom\";\nimport { Box } from \"../../../core/MyBox\";\nimport { MyButton } from \"../../../core/MyButton\";\nimport { Text, TextStrong } from \"../../../core/Text\";\n\nexport default function ProjectReportComponent(props: any) {\n    const { projectNew, projectOpen, projectClosed } = props;\n\n    function RenderItem(data: any, index: number) {\n        return (\n            <Box key={index}>\n                <TextStrong value={data.name} />\n                <br />\n                <Text>Trạng thái: {data.status.value}</Text>\n                <Link to={`/tools/tasks/projects/${data.key}`}><MyButton type=\"secondary\" value=\"Chi tiết\" /></Link>\n            </Box>\n        );\n    }\n\n    function RenderProjectNew() {\n        return projectNew.map((data: any, index: number) => RenderItem(data, index))\n    };\n\n\n    function RenderProjectOpen() {\n        return projectOpen.map((data: any, index: number) => RenderItem(data, index));\n    }\n\n    function RenderProjectClosed() {\n        return projectClosed.map((data: any, index: number) => RenderItem(data, index));\n    }\n\n    return (\n        <Row gutter={12}>\n            <Col span={16}>\n                <h3><TextStrong value=\"Quản lý dự án\" /></h3>\n            </Col>\n            <Col span={8} style={{ textAlign: \"right\" }}>\n                <Link to=\"/tools/tasks/projects\">\n                    <MyButton value=\"Quản lý dự án\" type=\"success\" />\n                </Link>\n            </Col>\n            <Col span={8}>\n                <h4>Dự án mới</h4>\n                {RenderProjectNew()}\n            </Col>\n            <Col span={8}>\n                <h4>Dự án đang mở</h4>\n                {RenderProjectOpen()}\n            </Col>\n            <Col span={8}>\n                <h4>Dự án đã đóng</h4>\n                {RenderProjectClosed()}\n            </Col>\n        </Row>\n    );\n}","import { Col, Row } from \"antd\"\nimport { MyButton } from \"../../../core/MyButton\";\n\nexport default function TaskReportComponent() {\n    return (\n        <div>\n            <Row>\n                <Col span={16}>\n                    <h4>Thống kê task (2 vùng Vùng 1: Các task sắp hết hạn, các task quán hạn; Vùng 2: Các task đang mở, các task đã đóng)</h4>\n                </Col>\n                <Col span={8} style={{ textAlign: \"right\" }}>\n                    <MyButton value=\"Quản lý công việc\" />\n                </Col>\n            </Row>\n\n            123456789\n        </div>\n    );\n}","import { Col, Row } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { Box } from \"../../../core/MyBox\";\nimport { MyButton } from \"../../../core/MyButton\";\nimport { Text, TextStrong } from \"../../../core/Text\";\nimport { UIFormatDateTimeVNComponent } from \"../../../core/UI_FormatComponent\";\n\nexport default function ToDoListReportComponent(props: any) {\n    const { data } = props;\n\n    function RenderToDoListDontWork() {\n        return data.map((data: any, index: number) => {\n            return (\n                <Box key={index}>\n                    <Text>{data.content}</Text>\n                    <TextStrong value=\"Ngày tạo: \" />\n                    <UIFormatDateTimeVNComponent value={data.createdAt} />\n                    <br />\n                    <Link to={`/tools/tasks/projects/${data.sprint.project.key}/sprint/${data.sprint.key}/toDoList`}>\n                        <MyButton\n                            value=\"Chi tiết\"\n                            type=\"secondary\" />\n                    </Link>\n                </Box>\n            );\n        })\n    }\n    return (\n        <Row>\n            <Col span={24}>\n                <h3>\n                    <TextStrong value=\"Thống kê công việc\" />\n                </h3>\n            </Col>\n            <Col span={12}>\n                <h3>Công việc chưa làm</h3>\n                {RenderToDoListDontWork()}\n            </Col>\n        </Row>\n    )\n}","import { Col, Row } from \"antd\";\nimport { MyButton } from \"../../../core/MyButton\";\nimport { TextStrong } from \"../../../core/Text\";\n\nexport default function WorkflowReportComponent() {\n    return (\n        <Row>\n            <Col span={12}>\n                <h3><TextStrong value=\"Quản lý workflow\"/></h3>\n            </Col>\n            <Col span={12} style={{textAlign: \"right\"}}>\n                <MyButton type=\"success\" value=\"Quản lý workflow\"/>\n            </Col>\n        </Row>\n    );\n}","import { useEffect, useState } from \"react\";\nimport { TaskProjectManageService } from \"../../../services/taskService\";\nimport { Box, MyBox } from \"../../core/MyBox\";\nimport ProjectReportComponent from \"./report/ProjectReportComponent\";\nimport TaskReportComponent from \"./report/TaskReportComponent\";\nimport ToDoListReportComponent from \"./report/ToDoListReportComponent\";\nimport WorkflowReportComponent from \"./report/WorkflowReportComponent\";\n\nexport default function TaskIndexComponent() {\n    const [projectClosed, setProjectClosed] = useState([]);\n    const [projectNew, setProjectNew] = useState([]);\n    const [projectOpen, setProjectOpen] = useState([]);\n    const [toDoListDontWorks, setToDoListDontWorks] = useState([]);\n\n    useEffect(() => {\n        TaskProjectManageService.GetStatistic()\n            .then((rs: any) => {\n                if (rs.isSuccess) {\n                    setProjectNew(rs.data.projectNew);\n                    setProjectOpen(rs.data.projectOpen);\n                    setProjectClosed(rs.data.projectClosed);\n                    setToDoListDontWorks(rs.data.toDoListDontWorks);\n                }\n            })\n    }, [])\n\n    return (\n        <MyBox title=\"Tool quản lý công việc\">\n            <Box>\n                <TaskReportComponent />\n            </Box>\n\n            <Box>\n                <ProjectReportComponent\n                    projectClosed={projectClosed}\n                    projectNew={projectNew}\n                    projectOpen={projectOpen} />\n            </Box>\n\n            <Box>\n                <ToDoListReportComponent\n                    data={toDoListDontWorks} />\n            </Box>\n            <Box>\n                <WorkflowReportComponent \n                    />\n            </Box>\n\n            <Box>\n                <h3>Danh sách các thông báo task</h3>\n            </Box>\n        </MyBox>\n    );\n}","import { MyAxiosV2 } from \"../helper/myaxios\";\nimport { PaginationRequest } from \"../models/baseModel\";\n\nclass TaskProjectManageService {\n    static GetQrCode(key: string) {\n        return `${MyAxiosV2.BaseURL}/user/qrCode?data=taskManage_projectManage_${key}`;\n    }\n\n    static GetStatistic() {\n        var url = `v2/tools/taskManages/projects/statistic`;\n        return MyAxiosV2.SendReq(url, \"Get\");\n    }\n\n    static GetLog(projectKey: string | undefined, paginationRequest: PaginationRequest) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/logs?${paginationRequest.generateQueryString()}`;\n        return MyAxiosV2.SendReq(url, \"Get\");\n    }\n\n    static GetClone(projectKey: string | undefined) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/duplicate`;\n        return MyAxiosV2.SendReq(url, \"Get\");\n    }\n\n    static ProcessClone(projectKey: string | undefined, body: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/duplicate`;\n        return MyAxiosV2.SendReq(url, \"Post\", body);\n    }\n\n    static GetList(paginationRequest: PaginationRequest) {\n        var url = `v2/tools/taskManages/projects?${paginationRequest.generateQueryString()}`;\n        return MyAxiosV2.SendReq(url, \"GET\");\n    }\n\n    static GetDetail(key: string | undefined) {\n        var url = `v2/tools/taskManages/projects/${key}`;\n        return MyAxiosV2.SendReq(url, \"Get\");\n    }\n\n    static Search(q: string) {\n        var url = `v2/tools/taskManages/projects/query?query=${q}`;\n        return MyAxiosV2.SendReq(url, \"Get\");\n    }\n\n    static Add(body: any) {\n        var url = `v2/tools/taskManages/projects`;\n        return MyAxiosV2.SendReq(url, \"Post\", body);\n    }\n\n    static Edit(key: string | undefined, body: any) {\n        var url = `v2/tools/taskManages/projects/${key}`;\n        return MyAxiosV2.SendReq(url, \"Put\", body);\n    }\n\n    static Delete(key: string | undefined, timestamp: string) {\n        var url = `v2/tools/taskManages/projects/${key}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxiosV2.SendReq(url, \"Delete\");\n    }\n}\n\nclass TaskSprintManageService {\n    static GetList(projectKey: string | undefined, paginationRequest: PaginationRequest) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints${paginationRequest === undefined ? \"\" : \"?\" + paginationRequest.generateQueryString()}`;\n        return MyAxiosV2.SendReq(url, \"Get\");\n    }\n\n    static GetDetail(projectKey: string | undefined, sprintKey: string | undefined) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}`;\n        return MyAxiosV2.SendReq(url, \"Get\");\n    }\n\n    static Add(projectKey: string | undefined, body: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints`;\n        return MyAxiosV2.SendReq(url, \"Post\", body);\n    }\n\n    static Edit(projectKey: string | undefined, sprintKey: string | undefined, body: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}`;\n        return MyAxiosV2.SendReq(url, \"Put\", body);\n    }\n\n    static Delete(projectKey: string | undefined, sprintKey: string | undefined, timestamp: string) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxiosV2.SendReq(url, \"Delete\");\n    }\n}\n\nclass TaskToDoListService {\n    static GetList(projectKey: string | undefined, sprintKey: string | undefined, paginationRequest: PaginationRequest | undefined) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}/toDoLists?${paginationRequest?.generateQueryString()}`;\n        return MyAxiosV2.SendReq(url, \"Get\");\n    }\n\n    static GetDetail(projectKey: string | undefined, sprintKey: string | undefined, key: string | undefined) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}/toDoLists/${key}`;\n        return MyAxiosV2.SendReq(url, \"Get\");\n    }\n\n    static Add(projectKey: string | undefined, sprintKey: string | undefined, body: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}/toDoLists`;\n        return MyAxiosV2.SendReq(url, \"Post\", body);\n    }\n\n    static Edit(projectKey: string | undefined, sprintKey: string | undefined, key: string | undefined, body: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}/toDoLists/${key}`;\n        return MyAxiosV2.SendReq(url, \"Put\", body);\n    }\n\n    static Delete(projectKey: string | undefined, sprintKey: string | undefined, key: string | undefined, timestamp: string) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}/toDoLists/${key}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxiosV2.SendReq(url, \"Delete\");\n    }\n}\n\nclass SettingService {\n    static GetListSettingStatus(projectKey: string | undefined, type: string | undefined) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings?type=${type}`;\n        return MyAxiosV2.SendReq(url, \"Get\");\n    }\n\n    static GetDetailSettingStatus(projectKey: string | undefined, settingKey: string | undefined) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/${settingKey}`;\n        return MyAxiosV2.SendReq(url, \"Get\");\n    }\n\n    static AddSettingStatus(projectKey: string | undefined, body: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings`;\n        return MyAxiosV2.SendReq(url, \"Post\", body);\n    }\n\n    static EditSettingStatus(projectKey: string | undefined, settingKey: string | undefined, body: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/${settingKey}`;\n        return MyAxiosV2.SendReq(url, \"Put\", body);\n    }\n\n    static DeleteSettingStatus(projectKey: string | undefined, settingKey: string | undefined, timestamp: string) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/${settingKey}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxiosV2.SendReq(url, \"Delete\");\n    }\n\n    static SearchByType(projectKey: string | undefined, type: number) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/query?type=${type}`;\n        return MyAxiosV2.SendReq(url, \"Get\");\n    }\n\n    static Import(projectKey: string | undefined, formData: FormData) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/import`;\n        return MyAxiosV2.SendReq(url, \"Post\", formData, true);\n    }\n\n    static Export(projectKey: string | undefined) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/export`;\n        return MyAxiosV2.SendReq(url, \"Get\", undefined, true);\n    }\n}\n\nclass VariableService {\n    static GetList(projectKey: string | undefined, paginationRequest: PaginationRequest) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/variables?${paginationRequest.generateQueryString()}`;\n        return MyAxiosV2.SendReq(url, \"Get\");\n    }\n\n    static GetDetail(projectKey: string | undefined, key: string | undefined) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/variables/${key}`;\n        return MyAxiosV2.SendReq(url, \"Get\");\n    }\n\n    static Add(projectKey: string | undefined, body: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/variables`;\n        return MyAxiosV2.SendReq(url, \"Post\", body);\n    }\n\n    static Edit(projectKey: string | undefined, key: string | undefined, body: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/variables/${key}`;\n        return MyAxiosV2.SendReq(url, \"Put\", body);\n    }\n\n    static Delete(projectKey: string | undefined, key: string | undefined, timestamp: string) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/variables/${key}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxiosV2.SendReq(url, \"Delete\");\n    }\n\n    static GetHistory(projectKey: string | undefined, key: string | undefined) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/variables/${key}/histories`;\n        return MyAxiosV2.SendReq(url, \"Get\");\n    }\n}\n\nclass DocumentService {\n    static GetList(projectKey: string | undefined, paginationRequest: PaginationRequest) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders?${paginationRequest.generateQueryString()}`;\n        return MyAxiosV2.SendReq(url, \"Get\");\n    }\n\n    static GetDetail(projectKey: string | undefined, key: string | undefined) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${key}`;\n        return MyAxiosV2.SendReq(url, \"Get\");\n    }\n\n    static Add(projectKey: string | undefined, body: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders`;\n        return MyAxiosV2.SendReq(url, \"Post\", body);\n    }\n\n    static Edit(projectKey: string | undefined, key: string | undefined, body: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${key}`;\n        return MyAxiosV2.SendReq(url, \"Put\", body);\n    }\n\n    static Delete(projectKey: string | undefined, key: string | undefined, timestamp: string) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${key}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxiosV2.SendReq(url, \"Delete\");\n    }\n}\n\nclass ApiDocService {\n    static GetList(projectKey: string | undefined, folderKey: string | undefined) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis`;\n        return MyAxiosV2.SendReq(url, \"Get\");\n    }\n\n    static GetDetail(projectKey: string | undefined, folderKey: string | undefined, key: string | undefined) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${key}`;\n        return MyAxiosV2.SendReq(url, \"Get\");\n    }\n\n    static Add(projectKey: string | undefined, folderKey: string | undefined, body: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis`;\n        return MyAxiosV2.SendReq(url, \"Post\", body);\n    }\n\n    static Edit(projectKey: string | undefined, folderKey: string | undefined, key: string | undefined, body: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${key}`;\n        return MyAxiosV2.SendReq(url, \"Put\", body);\n    }\n\n    static Delete(projectKey: string | undefined, folderKey: string | undefined, key: string | undefined, timestamp: string) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${key}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxiosV2.SendReq(url, \"Delete\");\n    }\n\n    static ExecApi(projectKey: string | undefined, folderKey: string | undefined, apiDocKey: string | undefined) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${apiDocKey}/exec`;\n        return MyAxiosV2.SendReq(url, \"Get\");\n    }\n}\n\nclass ApiDocResponseService {\n    static Getlist(projectKey: string | undefined, folderKey: string | undefined, apiDocKey: string | undefined) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${apiDocKey}/responses`;\n        return MyAxiosV2.SendReq(url, \"Get\");\n    }\n\n    static GetDetail(projectKey: string | undefined, folderKey: string | undefined, apiDocKey: string | undefined, key: string | undefined) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${apiDocKey}/responses/${key}`;\n        return MyAxiosV2.SendReq(url, \"Get\");\n    }\n\n    static SaveResponse(projectKey: string | undefined, folderKey: string | undefined, apiDocKey: string | undefined, body: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${apiDocKey}/responses`;\n        return MyAxiosV2.SendReq(url, \"Post\", body);\n    }\n\n    static Delete(projectKey: string | undefined, folderKey: string | undefined, apiDocKey: string | undefined, key: string | undefined, timestamp: string) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${apiDocKey}/responses/${key}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxiosV2.SendReq(url, \"Delete\");\n    }\n}\n\nexport {\n    TaskProjectManageService,\n    TaskSprintManageService,\n    TaskToDoListService,\n    SettingService,\n    VariableService,\n    DocumentService,\n    ApiDocService,\n    ApiDocResponseService\n}"],"names":["Text","props","children","TextStrong","value","TextWrap","style","UIFormatDateVNComponent","dateStr","undefined","moment","format","UIFormatDateTimeVNComponent","ProjectReportComponent","projectNew","projectOpen","projectClosed","RenderItem","data","index","name","status","to","key","MyButton","type","gutter","span","textAlign","map","TaskReportComponent","ToDoListReportComponent","content","createdAt","sprint","project","WorkflowReportComponent","TaskIndexComponent","useState","setProjectClosed","setProjectNew","setProjectOpen","toDoListDontWorks","setToDoListDontWorks","useEffect","TaskProjectManageService","then","rs","isSuccess","MyBox","title","MyAxiosV2","projectKey","paginationRequest","url","generateQueryString","body","q","timestamp","encodeURIComponent","TaskSprintManageService","sprintKey","TaskToDoListService","SettingService","settingKey","formData","VariableService","DocumentService","ApiDocService","folderKey","apiDocKey","ApiDocResponseService"],"sourceRoot":""}
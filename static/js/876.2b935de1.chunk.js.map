{"version":3,"file":"static/js/876.2b935de1.chunk.js","mappings":"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","sources":["components/core/Input.tsx","components/tool/task/settings/ImportFileComponent.tsx","components/tool/task/settings/ModifyOtherSettingComponent.tsx","components/tool/task/settings/OtherComponent.tsx","components/tool/task/settings/ModifyStatusSettingComponent.tsx","components/tool/task/settings/StatusComponent.tsx","components/tool/task/settings/SettingComponent.tsx","services/taskService.ts"],"sourcesContent":["import { Input, Form, DatePicker, InputNumber, Row, Col, Select, Switch } from \"antd\";\nimport moment from \"moment\";\n\nexport class MyInput {\n    // ************************* Input ****************************\n    static Input(props: any) {\n        function handleChangeInput(value: any) {\n            if (props.onChange !== undefined) {\n                props.onChange(value.target.value);\n            }\n\n            if (props.setValue !== undefined) {\n                props.setValue(value.target.value);\n            }            \n        }\n\n        return (\n            <Input\n                onClick={props.onClick}\n                value={props.value}\n                onChange={handleChangeInput}\n                required={props.required}\n                readOnly={props.readOnly} />\n        );\n    }\n}\n\nexport class MyFormItem {\n    static Input(props: any) {\n        return (\n            <Form.Item label={props.label}>\n                <MyInput.Input\n                    onClick={props.onClick}\n                    onChange={props.onChange}\n                    value={props.value}\n                    setValue={props.setValue}\n                    required={props.required}\n                    readOnly={props.readOnly} />\n            </Form.Item>\n        );\n    }\n\n    // *************************** Datepicker **************************\n    static DatePicker(props: any) {\n        function handleChangeOption(value: any) {\n            if (props.setValue !== undefined) {\n                props.setValue(value);\n            }\n        }\n\n        function customeFormat(value: any) {\n            return moment(value).format(\"DD/MM/YYYY\");\n        }\n\n        return (\n            <Form.Item label={props.label}>\n                <DatePicker\n                    value={props.value}\n                    onChange={handleChangeOption}\n                    format={customeFormat}\n                    inputReadOnly={props.readOnly} />\n            </Form.Item>\n        );\n    }\n\n    // *************************** Datetimepicker **************************\n    static DateTimePicker(props: any) {\n        function handleChangeOption(value: any) {\n            if (props.setValue !== undefined) {\n                props.setValue(value);\n            }\n        }\n\n        function customeFormat(value: any) {\n            return moment(value).format(\"DD/MM/YYYY HH:mm:ss\");\n        }\n\n        return (\n            <Form.Item label={props.label}>\n                <DatePicker\n                    showTime\n                    value={props.value}\n                    onChange={handleChangeOption}\n                    format={customeFormat}\n                    disabled={props.readOnly} />\n            </Form.Item>\n        );\n    }\n\n    // *************************** Number **************************\n    static Number(props: any) {\n        function handleChangeInput(value: any) {\n            if (props.setValue !== undefined) {\n                props.setValue(value);\n            }\n        }\n\n        return (\n            <InputNumber\n                min={props.min}\n                max={props.max}\n                value={props.value}\n                onChange={handleChangeInput} />\n        );\n    }\n\n    static NumberColSpan(props: any) {        \n        return (\n            <div>\n                <Row className={props.className}>\n                    <Col span={props.colSpan1}>\n                        <span>{props.label}</span>\n                    </Col>\n                    <Col span={props.colSpan2}>\n                        <MyFormItem.Number\n                            min={props.min}\n                            max={props.max}\n                            value={props.value}\n                            setValue={props.setValue} />\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n\n    // *************************** Select **************************\n    static Select(props: any) {\n        function handleChangeOption(value: any) {\n            if (props.setValue !== undefined) {\n                props.setValue(value);\n            }\n\n            if (props.onChange !== undefined) {\n                props.onChange(value);\n            }\n        }\n\n        return (\n            <Form.Item label={props.label}>\n                <Select\n                    options={props.options}\n                    value={props.value}\n                    onChange={handleChangeOption} />\n            </Form.Item>\n        );\n    }\n\n\n    // *************************** TextArea **************************\n    static TextArea(props: any) {\n        function handleChangeOption(value: any) {\n            if (props.setValue !== undefined) {\n                props.setValue(value.target.value);\n            }\n        }\n\n        const { TextArea } = Input;\n        return (\n            <Form.Item label={props.label}>\n                <TextArea\n                    value={props.value}\n                    onChange={handleChangeOption} />\n            </Form.Item>\n        );\n    }\n\n    // *************************** Password **************************\n    static Password(props: any) {\n        function handleChangeOption(value: any) {\n            if (props.onChange !== undefined) {\n                props.onChange(value.target.value);\n            }\n\n            if (props.setValue !== undefined) {\n                props.setValue(value.target.value);\n            }\n        }\n\n        const { Password } = Input;\n        return (\n            <Form.Item label={props.label}>\n                <Password\n                    value={props.value}\n                    onChange={handleChangeOption} />\n            </Form.Item>\n        );\n    }\n\n    // *************************** Search **************************\n    static Search(props: any) {\n        function handleChangeSearch(value: any) {\n            if (props.setValue !== undefined) {\n                props.setValue(value.target.value);\n            }\n        }\n\n        const { Search } = Input;\n        return (\n            <Form.Item label={props.label}>\n                <Search\n                    loading={props.loading}\n                    onSearch={props.onSearch}\n                    value={props.value}\n                    onChange={handleChangeSearch} />\n            </Form.Item>\n        );\n    }\n\n    // *************************** Swith **************************\n    static Switch(props: any) {\n        function handleChangeSearch(value: any) {\n            if (props.setValue !== undefined) {\n                props.setValue(value);\n            }\n            \n            if(props.onChange !== undefined) {\n                props.onChange(value);\n            }\n        }\n\n        return (\n            <Form.Item label={props.label}>\n                <Switch\n                    loading={props.loading}\n                    checked={props.value}\n                    onChange={handleChangeSearch} />\n            </Form.Item>\n        );\n    }\n\n     // *************************** Swith **************************\n     static File(props: any) {\n        function handleChange(value: any) {\n            if (props.setValue !== undefined) {\n                props.setValue(value.target.files[0]);\n            }\n        }\n\n        return (\n            <Form.Item label={props.label}>\n                <Input\n                    type=\"file\"\n                    // value={props.value}\n                    onChange={handleChange}/>\n            </Form.Item>\n        );\n    }\n}","import { Box } from \"../../../core/MyBox\";\nimport { MyFormItem } from \"../../../core/Input\";\nimport { useState } from \"react\";\nimport { MyButton } from \"../../../core/MyButton\";\nimport { SettingService } from \"../../../../services/taskService\";\nimport { useParams } from \"react-router-dom\";\nimport { Fn } from \"../../../../helper/function\";\n\nexport default function ImportFileComponent(props: any) {\n    const [file, setFile] = useState<string | Blob>();\n    const projectKey = useParams().key;\n    function handleOnClick() {\n        doUpload();\n    }\n\n    function doUpload() {\n        props.setIsLoading(true);\n        const formData = new FormData();\n        if (file) {\n            formData.append(\"file\", file);\n        }\n\n        SettingService.Import(projectKey, formData)\n            .then((rs: any) => {\n                if (rs.isSuccess) {\n                    Fn.PrintMsgSuccess(rs);\n                }\n            })\n            .finally(() => props.setIsLoading(false));\n    }\n\n    function handleOnClickExport() {\n        // props.setIsLoading(true);\n        SettingService.Export(projectKey)\n            .then((rs: any) => {\n                console.log(rs);\n\n                if (rs.isSuccess) {\n                    var blob = new Blob([rs.data], { type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" });\n                    var url = URL.createObjectURL(blob);\n                    window.open(url);\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n            .finally(() => {\n\n                console.log(111);\n\n            })\n    }\n\n    return (\n        <Box>\n            <MyButton\n                type=\"primary\"\n                onClick={handleOnClickExport}\n                value=\"Export file\" />\n\n            <MyButton\n                type=\"success\"\n                onClick={handleOnClick}\n                value=\"Import file\"\n                disabled={file === undefined} />\n\n            <MyFormItem.File\n                value={file}\n                setValue={setFile} />\n        </Box>\n    )\n}","import { Drawer, Form } from \"antd\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { Fn } from \"../../../../helper/function\";\nimport { SettingService } from \"../../../../services/taskService\";\nimport { MyFormItem } from \"../../../core/Input\";\nimport { MyButton } from \"../../../core/MyButton\";\n\nexport default function ModifyOtherSettingComponent(props: any) {\n    const [value, setValue] = useState('');\n\n    const { setIsLoading } = props;\n\n    const loadData = useCallback(() => {\n        if (props.keyData !== undefined) {\n            setIsLoading(true);\n            SettingService.GetDetailSettingStatus(props.projectKey, props.keyData)\n                .then((rs: any) => {\n                    if (rs.isSuccess) {\n                        setValue(rs.data.value);\n                    }\n                })\n                .finally(() => setIsLoading(false));\n        }\n    }, [props.projectKey, props.keyData, setIsLoading]);\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n    function onClose() {\n        props.setVisible(false);\n    }\n\n    function handleSubmitForm() {\n        var body = {\n            value: value,\n            type: props.type\n        };\n\n        setIsLoading(true);\n        if (props.keyData !== undefined) {\n            Edit(body);\n        } else {\n            Add(body);\n        }\n    }\n\n    function Add(body: any) {\n        SettingService.AddSettingStatus(props.projectKey, body)\n            .then((rs: any) => {\n                if (rs.isSuccess) {\n                    Fn.PrintMsgSuccessV2(rs);\n                    props.loadData();\n                }\n            })\n            .finally(() => setIsLoading(false));\n    }\n\n    function Edit(body: any) {\n        SettingService.GetDetailSettingStatus(props.projectKey, props.keyData)\n            .then((rs: any) => {\n                if (rs.isSuccess) {\n                    body = Fn.GetTimestampV2(rs, body);\n                    SettingService.EditSettingStatus(props.projectKey, props.keyData, body)\n                        .then((rs: any) => {\n                            if (rs.isSuccess) {\n                                Fn.PrintMsgSuccessV2(rs);\n                                props.loadData();\n                            }\n                        })\n                        .finally(() => setIsLoading(false));\n                } else setIsLoading(false);\n            })\n    }\n\n    function handleClickDelete() {\n        Swal.fire({\n            title: \"Xác nhận xóa\",\n            text: 'Bạn có muốn xóa không?',\n        }).then((confirm) => {\n            if (confirm.isConfirmed) {\n                Delete();\n            }\n        })\n    }\n\n    function Delete() {\n        setIsLoading(true);\n        SettingService.GetDetailSettingStatus(props.projectKey, props.keyData)\n            .then((rs: any) => {\n                if (rs.isSuccess) {\n                    SettingService.DeleteSettingStatus(props.projectKey, props.keyData, Fn.GetTimestampV2(rs))\n                        .then((rs: any) => {\n                            if (rs.isSuccess) {\n                                Fn.PrintMsgSuccessV2(rs);\n                                onClose();\n                                props.loadData();\n                            }\n                        })\n                        .finally(() => setIsLoading(false))\n                } else setIsLoading(false);\n            })\n    }\n\n    return (\n        <Drawer\n            open={props.visible}\n            onClose={onClose}\n            title={props.keyData !== undefined ? \"Chỉnh sửa\" : \"Thêm mới\"}>\n            <Form\n                layout=\"vertical\"\n                onSubmitCapture={handleSubmitForm}>\n                <MyFormItem.Input\n                    label=\"Giá trị\"\n                    value={value}\n                    setValue={setValue} />\n                <MyButton\n                    htmlType=\"submit\"\n                    isLoading={props.isLoading}\n                    type=\"success\"\n                    value={props.keyData !== undefined ? \"Chỉnh sửa\" : \"Thêm mới\"} />\n                <MyButton\n                    type=\"danger\"\n                    isLoading={props.isLoading}\n                    onClick={handleClickDelete}\n                    value=\"Xóa\" />\n            </Form>\n        </Drawer>\n    );\n}","import { Col, Row } from \"antd\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { SettingService } from \"../../../../services/taskService\";\nimport { Box } from \"../../../core/MyBox\";\nimport { MyButton } from \"../../../core/MyButton\";\nimport ModifyOtherSettingComponent from \"./ModifyOtherSettingComponent\";\n\nexport default function OtherComponent(props: any) {\n    let type = props.type;\n    const projectKey = useParams().key;\n    const [dataSource, setDataSource] = useState([]);\n    const [visible, setVisible] = useState(false);\n    const [visibleEdit, setVisibleEdit] = useState(false);\n    const [keyEdit, setKeyEidt] = useState<string | undefined>(undefined);\n\n    const { setIsLoading } = props;\n\n    let loadData = useCallback(() => {\n        setIsLoading(true);\n        SettingService.GetListSettingStatus(projectKey, type)\n            .then((rs: any) => {\n                if (rs.isSuccess) {\n                    setDataSource(rs.data);\n                }\n            })\n            .finally(() => setIsLoading(false));\n    }, [projectKey, type, setIsLoading]);\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n    function handleClickAdd() {\n        setVisible(true);\n    }\n\n    function handleClickEdit(key: string | undefined) {\n        setVisibleEdit(true);\n        setKeyEidt(key);\n    }\n\n    function RenderData() {\n        return dataSource.map((data: any, index: number) => {\n            return (\n                <Box key={index}>\n                    <Row gutter={12}>\n                        <Col span={12}>\n                            {data.value}\n                        </Col>\n                        <Col span={12} style={{ textAlign: \"right\" }}>\n                            <MyButton onClick={() => {\n                                handleClickEdit(data.key)\n                            }} value=\"Chỉnh sửa\" />\n                        </Col>\n                    </Row>\n                </Box>\n            )\n        })\n    }\n\n    return (\n        <Box>\n            <MyButton\n                type=\"primary\"\n                value=\"Thêm mới\"\n                onClick={handleClickAdd} />\n            {RenderData()}\n\n            <ModifyOtherSettingComponent\n                projectKey={projectKey}\n                type={type}\n                visible={visible}\n                setVisible={setVisible}\n                isLoading={props.isLoading}\n                setIsLoading={props.setIsLoading}\n                loadData={loadData} />\n\n            <ModifyOtherSettingComponent\n                projectKey={projectKey}\n                type={type}\n                visible={visibleEdit}\n                setVisible={setVisibleEdit}\n                isLoading={props.isLoading}\n                setIsLoading={props.setIsLoading}\n                keyData={keyEdit}\n                loadData={loadData} />\n        </Box>\n    );\n}","import { Drawer, Form } from \"antd\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { Fn } from \"../../../../helper/function\";\nimport { SettingService } from \"../../../../services/taskService\";\nimport { MyFormItem } from \"../../../core/Input\";\nimport { MyButton } from \"../../../core/MyButton\";\n\nexport default function ModifyStatusSettingComponent(props: any) {\n    const keyData = props.keyData;\n    const projectKey = props.projectKey;\n\n    const [value, setValue] = useState('');\n    const [type, setType] = useState('');\n    const [isNew, setIsNew] = useState(false);\n    const [isClosed, setIsClosed] = useState(false);\n\n    const { setIsLoading } = props;\n\n    const options = [\n        {\n            key: \"1\",\n            label: \"Trạng thái dự án\",\n            value: 1\n        },\n        {\n            key: \"2\",\n            label: \"Trạng thái sprint\",\n            value: 2\n        },\n        {\n            key: \"3\",\n            label: \"Trạng thái công việc\",\n            value: 3\n        },\n        {\n            key: \"4\",\n            label: \"Trạng thái vấn đề\",\n            value: 4\n        }\n    ]\n\n    let loadData = useCallback(() => {\n        if (keyData !== undefined) {\n            setIsLoading(true);\n            SettingService.GetDetailSettingStatus(projectKey, keyData)\n                .then((rs: any) => {\n                    if (rs.isSuccess) {\n                        const row = rs.data;\n                        setValue(row.value);\n                        setType(row.type);\n                        setIsNew(row.isNew);\n                        setIsClosed(row.isClosed);\n                    }\n                })\n                .finally(() => setIsLoading(false));\n        }\n    }, [keyData, projectKey, setIsLoading]);\n\n    useEffect(() => {\n        loadData();\n    }, [loadData])\n\n    function HandleCloseDrawer() {\n        props.setVisible(false);\n    }\n\n    function handleSubmitForm() {\n        let body = {\n            value: value,\n            type: type,\n            isNew: isNew,\n            isClosed: isClosed\n        };\n\n        props.setIsLoading(true);\n        if (props.keyData === undefined) {\n            Add(body);\n        } else {\n            Edit(body);\n        }\n    }\n\n    function Add(body: any) {\n        SettingService.AddSettingStatus(projectKey, body)\n            .then((rs: any) => {\n                if (rs.isSuccess) {\n                    Fn.PrintMsgSuccessV2(rs);\n                    props.loadData();\n                    HandleCloseDrawer();\n                }\n            })\n            .finally(() => { setIsLoading(false) });\n    }\n\n    function Edit(body: any) {\n        SettingService.GetDetailSettingStatus(projectKey, keyData)\n            .then((rs: any) => {\n                if (rs.isSuccess) {\n                    body = Fn.GetTimestampV2(rs, body);\n                    SettingService.EditSettingStatus(projectKey, keyData, body)\n                        .then((rs: any) => {\n                            if (rs.isSuccess) {\n                                Fn.PrintMsgSuccessV2(rs);\n                                props.loadData();\n                            }\n                        })\n                        .finally(() => setIsLoading(false));\n                } else setIsLoading(false);\n            })\n    }\n\n    function HandleClickDelete() {\n        Swal.fire({\n            title: \"Bạn có muốn xóa không\",\n            text: \"Bạn có muốn xóa không\",\n            showConfirmButton: true,\n            showDenyButton: true,\n        }).then((result: any) => {\n            if (result.isConfirmed) {\n                Delete();\n            }\n        })\n    }\n\n    function Delete() {\n        props.setIsLoading(true);\n        SettingService.GetDetailSettingStatus(projectKey, keyData)\n            .then((rs: any) => {\n                if (rs.isSuccess) {\n                    SettingService.DeleteSettingStatus(projectKey, keyData, Fn.GetTimestampV2(rs))\n                        .then((rs: any) => {\n                            if (rs.isSuccess) {\n                                Fn.PrintMsgSuccessV2(rs);\n                                props.loadData();\n                                HandleCloseDrawer();\n                            }\n                        })\n                }\n            })\n    }\n\n    return (\n        <Drawer\n            title={props.title}\n            open={props.visible}\n            onClose={HandleCloseDrawer}>\n            <Form\n                layout=\"vertical\"\n                onSubmitCapture={handleSubmitForm}>\n                <MyFormItem.Input\n                    label=\"Giá trị\"\n                    value={value}\n                    setValue={setValue} />\n\n                <MyFormItem.Select\n                    label=\"Loại trạng thái\"\n                    options={options}\n                    value={type}\n                    setValue={setType} />\n\n                <MyFormItem.Switch\n                    label=\"Trạng thái mới\"\n                    value={isNew}\n                    setValue={setIsNew} />\n\n                <MyFormItem.Switch\n                    label=\"Trạng thái đóng\"\n                    value={isClosed}\n                    setValue={setIsClosed} />\n\n                <MyButton\n                    type=\"success\"\n                    htmlType=\"submit\"\n                    isLoading={props.isLoading}\n                    value={props.keyData !== undefined ? \"Sửa\" : \"Thêm\"} />\n\n                <MyButton\n                    type=\"danger\"\n                    value=\"Xóa\"\n                    isLoading={props.isLoading}\n                    onClick={HandleClickDelete} />\n            </Form>\n        </Drawer>\n    );\n}","import { Badge, Col, Row } from \"antd\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { SettingService } from \"../../../../services/taskService\";\nimport { Box } from \"../../../core/MyBox\";\nimport { CheckCircleTwoTone } from '@ant-design/icons';\nimport { MyButton } from \"../../../core/MyButton\";\nimport ModifyStatusSettingComponent from \"./ModifyStatusSettingComponent\";\n\nexport default function StatusComponent(props: any) {\n    const projectKey = useParams().key;\n    const [dataSource, setDataSource] = useState([]);\n    const [visible, setVisible] = useState(false);\n    const [keyEdit, setKeyEdit] = useState<string | undefined>();\n    const [visibleEdit, setVisibleEdit] = useState(false);\n\n    const { setIsLoading } = props;\n    const loadData = useCallback(() => {\n        setIsLoading(true);\n        SettingService.GetListSettingStatus(projectKey, \"1,2,3,4\")\n        .then((rs:any) => {\n            if(rs.isSuccess) {\n                setDataSource(rs.data);\n            }\n        })\n        .finally(() => setIsLoading(false));\n    }, [projectKey, setIsLoading]);\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n    function handleClickAdd() {\n        setVisible(true);\n    }\n\n    function handleClickDetail(key: string | undefined) {\n        setKeyEdit(key);\n        setVisibleEdit(true);\n    }\n\n    function RenderType(type: number) {\n        let valueType = \"\";\n        let colorType = \"\";\n        switch (type) {\n            case 1:\n                valueType = \"Trạng thái dự án\";\n                colorType = \"blue\"\n                break;\n            case 2:\n                valueType = \"Trạng thái sprint\";\n                colorType = \"red\"\n                break;\n            case 3:\n                valueType = \"Trạng thái công việc\";\n                colorType = \"yellow\"\n                break;\n            case 4:\n                valueType = \"Trạng thái vấn đề\";\n                colorType = \"green\"\n                break;\n\n            default:\n                break;\n        }\n\n        return (\n            <Badge color={colorType} text={valueType} />\n        );\n    }\n    function RenderData() {\n        return dataSource.map((data: any, index: number) => {\n            return (\n                <Col span={4} key={index} onClick={() => {\n                    handleClickDetail(data.key);\n                }}>\n                    <Box>\n                        <p>Value: {data.value}</p>\n                        <p>Loại: {RenderType(data.type)}</p>\n                        <p>Trạng thái mới: {data.isNew ? <CheckCircleTwoTone twoToneColor=\"#52c41a\" /> : \"\"} </p>\n                        <p>Trạng thái đóng: {data.isClosed ? <CheckCircleTwoTone twoToneColor=\"#52c41a\" /> : \"\"}</p>\n                    </Box>\n                </Col>\n            );\n        });\n    }\n    return (\n        <Box title=\"Quản lý trạng thái\">\n            <MyButton type=\"primary\" value=\"Thêm trạng thái\" onClick={handleClickAdd} />\n            <Row gutter={12}>\n                {RenderData()}\n            </Row>\n            <ModifyStatusSettingComponent\n                title=\"Thêm mới trạng thái\"\n                projectKey={projectKey}\n                visible={visible}\n                setVisible={setVisible}\n                loadData={loadData}\n                isLoading={props.isLoading}\n                setIsLoading={props.setIsLoading} />\n\n            <ModifyStatusSettingComponent\n                title=\"Sửa đổi trạng thái\"\n                keyData={keyEdit}\n                projectKey={projectKey}\n                visible={visibleEdit}\n                setVisible={setVisibleEdit}\n                loadData={loadData}\n                isLoading={props.isLoading}\n                setIsLoading={props.setIsLoading} />\n        </Box>\n    )\n}","import { Tabs } from \"antd\";\nimport { useState } from \"react\";\nimport { MyBox } from \"../../../core/MyBox\";\nimport ImportFileComponent from \"./ImportFileComponent\";\nimport OtherComponent from \"./OtherComponent\";\nimport StatusComponent from \"./StatusComponent\";\n\nexport default function SettingComponent() {\n    const [isLoading, setIsLoading] = useState(false);\n\n    const items: any = [\n        {\n            label: \"Trạng thái\",\n            key: \"item_1\",\n            children: (\n                <StatusComponent\n                    isLoading={isLoading}\n                    setIsLoading={setIsLoading} />\n            )\n        },\n        {\n            label: \"Độ ưu tiên\",\n            key: \"item_2\",\n            children: (\n                <OtherComponent\n                    isLoading={isLoading}\n                    setIsLoading={setIsLoading}\n                    type={5} />\n            )\n        },\n        {\n            label: \"Mức độ ảnh hưởng\",\n            key: \"item_3\",\n            children: (\n                <OtherComponent\n                    isLoading={isLoading}\n                    setIsLoading={setIsLoading}\n                    type={6} />\n            )\n        },\n        {\n            label: \"Quản lý tag\",\n            key: \"item_4\",\n            children: (\n                <OtherComponent\n                    isLoading={isLoading}\n                    setIsLoading={setIsLoading}\n                    type={7} />\n            )\n        },\n        {\n            label: \"Loại vấn đề\",\n            key: \"item_5\",\n            children: (\n                <OtherComponent\n                    isLoading={isLoading}\n                    setIsLoading={setIsLoading}\n                    type={8} />\n            )\n        },\n        {\n            label: \"Xuất file\",\n            key: \"item_6\",\n            children: (\n                <ImportFileComponent\n                    isLoading={isLoading}\n                    setIsLoading={setIsLoading} />\n            )\n        }\n    ];\n\n    return (\n        <MyBox\n            title=\"Cài đặt dự án\"\n            isLoading={isLoading}>\n            <Tabs defaultActiveKey=\"item_6\" centered items={items} />\n        </MyBox>\n    )\n}","import { MyAxios, MyAxiosV2 } from \"../helper/myaxios\";\nimport { PaginationRequest } from \"../models/baseModel\";\n\nclass TaskProjectManageService {\n    static GetQrCode(key: string) {\n        return `${MyAxiosV2.BaseURL}/user/qrCode?data=taskManage_projectManage_${key}`;\n    }\n\n    static GetLog(projectKey: string | undefined, paginationRequest: PaginationRequest) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/logs?${paginationRequest.generateQueryString()}`;\n        return MyAxiosV2.SendReq(url, \"Get\");\n    }\n\n    static GetClone(projectKey: string | undefined) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/duplicate`;\n        return MyAxiosV2.SendReq(url, \"Get\");\n    }\n\n    static ProcessClone(projectKey: string | undefined, body: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/duplicate`;\n        return MyAxiosV2.SendReq(url, \"Post\", body);\n    }\n\n    static GetList(paginationRequest: PaginationRequest) {\n        var url = `v2/tools/taskManages/projects?${paginationRequest.generateQueryString()}`;\n        return MyAxiosV2.SendReq(url, \"GET\");\n    }\n\n    static GetDetail(key: string | undefined) {\n        var url = `v2/tools/taskManages/projects/${key}`;\n        return MyAxiosV2.SendReq(url, \"Get\");\n    }\n\n    static Search(q: string) {\n        var url = `v2/tools/taskManages/projects/query?query=${q}`;\n        return MyAxiosV2.SendReq(url, \"Get\");\n    }\n\n    static Add(body: any) {\n        var url = `v2/tools/taskManages/projects`;\n        return MyAxiosV2.SendReq(url, \"Post\", body);\n    }\n\n    static Edit(key: string | undefined, body: any) {\n        var url = `v2/tools/taskManages/projects/${key}`;\n        return MyAxiosV2.SendReq(url, \"Put\", body);\n    }\n\n    static Delete(key: string | undefined, timestamp: string) {\n        var url = `v2/tools/taskManages/projects/${key}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxiosV2.SendReq(url, \"Delete\");\n    }\n}\n\nclass TaskSprintManageService {\n    static GetList(projectKey: string | undefined, paginationRequest: PaginationRequest) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints${paginationRequest === undefined ? \"\" : \"?\" + paginationRequest.generateQueryString()}`;\n        return MyAxiosV2.SendReq(url, \"Get\");\n    }\n\n    static GetDetail(projectKey: string | undefined, sprintKey: string | undefined) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}`;\n        return MyAxiosV2.SendReq(url, \"Get\");\n    }\n\n    static Add(projectKey: string | undefined, body: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints`;\n        return MyAxiosV2.SendReq(url, \"Post\", body);\n    }\n\n    static Edit(projectKey: string | undefined, sprintKey: string | undefined, body: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}`;\n        return MyAxiosV2.SendReq(url, \"Put\", body);\n    }\n\n    static Delete(projectKey: string | undefined, sprintKey: string | undefined, timestamp: string) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxiosV2.SendReq(url, \"Delete\");\n    }\n}\n\nclass TaskToDoListService {\n    static GetList(projectKey: string | undefined, sprintKey: string | undefined, paginationRequest: PaginationRequest | undefined) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}/toDoLists?${paginationRequest?.generateQueryString()}`;\n        return MyAxiosV2.SendReq(url, \"Get\");\n    }\n\n    static GetDetail(projectKey: string | undefined, sprintKey: string | undefined, key: string | undefined) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}/toDoLists/${key}`;\n        return MyAxiosV2.SendReq(url, \"Get\");\n    }\n\n    static Add(projectKey: string | undefined, sprintKey: string | undefined, body: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}/toDoLists`;\n        return MyAxiosV2.SendReq(url, \"Post\", body);\n    }\n\n    static Edit(projectKey: string | undefined, sprintKey: string | undefined, key: string | undefined, body: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}/toDoLists/${key}`;\n        return MyAxiosV2.SendReq(url, \"Put\", body);\n    }\n\n    static Delete(projectKey: string | undefined, sprintKey: string | undefined, key: string | undefined, timestamp: string) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}/toDoLists/${key}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxiosV2.SendReq(url, \"Delete\");\n    }\n}\n\nclass SettingService {\n    static GetListSettingStatus(projectKey: string | undefined, type: string | undefined) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings?type=${type}`;\n        return MyAxiosV2.SendReq(url, \"Get\");\n    }\n\n    static GetDetailSettingStatus(projectKey: string | undefined, settingKey: string | undefined) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/${settingKey}`;\n        return MyAxiosV2.SendReq(url, \"Get\");\n    }\n\n    static AddSettingStatus(projectKey: string | undefined, body: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings`;\n        return MyAxiosV2.SendReq(url, \"Post\", body);\n    }\n\n    static EditSettingStatus(projectKey: string | undefined, settingKey: string | undefined, body: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/${settingKey}`;\n        return MyAxiosV2.SendReq(url, \"Put\", body);\n    }\n\n    static DeleteSettingStatus(projectKey: string | undefined, settingKey: string | undefined, timestamp: string) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/${settingKey}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxiosV2.SendReq(url, \"Delete\");\n    }\n    \n    static SearchByType(projectKey: string | undefined, type: number) {\n        var url = `tools/tasks/projects/${projectKey}/settings/query?type=${type}`;\n        return MyAxiosV2.SendReq(url, \"Get\");\n    }\n\n    static Import(projectKey: string | undefined, formData: FormData) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/import`;\n        return MyAxiosV2.SendReq(url, \"Post\", formData, true);\n    }\n\n    static Export(projectKey: string | undefined) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/export`;\n        return MyAxiosV2.SendReq(url, \"Get\", undefined, true);\n    }\n}\n\nclass VariableService {\n    static GetList(projectKey: string | undefined, paginationRequest: PaginationRequest, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/workflow/variables?${paginationRequest.generateQueryString()}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static GetDetail(projectKey: string | undefined, key: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/workflow/variables/${key}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static Add(projectKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/workflow/variables`;\n        return MyAxios.Post(url, body, then, exp, final);\n    }\n\n    static Edit(projectKey: string | undefined, key: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/workflow/variables/${key}`;\n        return MyAxios.Put(url, body, then, exp, final);\n    }\n\n    static Delete(projectKey: string | undefined, key: string | undefined, timestamp: string, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/workflow/variables/${key}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxios.Delete(url, then, exp, final);\n    }\n}\n\nclass DocumentService {\n    static GetList(projectKey: string | undefined, paginationRequest: PaginationRequest, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/documents/folders?${paginationRequest.generateQueryString()}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static GetDetail(projectKey: string | undefined, key: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/documents/folders/${key}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static Add(projectKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/documents/folders`;\n        return MyAxios.Post(url, body, then, exp, final);\n    }\n\n    static Edit(projectKey: string | undefined, key: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/documents/folders/${key}`;\n        return MyAxios.Put(url, body, then, exp, final);\n    }\n\n    static Delete(projectKey: string | undefined, key: string | undefined, timestamp: string, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/documents/folders/${key}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxios.Delete(url, then, exp, final);\n    }\n}\n\nclass ApiDocService {\n    static GetList(projectKey: string | undefined, folderKey: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/documents/folders/${folderKey}/apiDocs`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static GetDetail(projectKey: string | undefined, folderKey: string | undefined, key: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/documents/folders/${folderKey}/apiDocs/${key}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static Add(projectKey: string | undefined, folderKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/documents/folders/${folderKey}/apiDocs`;\n        return MyAxios.Post(url, body, then, exp, final);\n    }\n\n    static Edit(projectKey: string | undefined, folderKey: string | undefined, key: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/documents/folders/${folderKey}/apiDocs/${key}`;\n        return MyAxios.Put(url, body, then, exp, final);\n    }\n\n    static Delete(projectKey: string | undefined, folderKey: string | undefined, key: string | undefined, timestamp: string, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/documents/folders/${folderKey}/apiDocs/${key}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxios.Delete(url, then, exp, final);\n    }\n\n    static RunApi(projectKey: string | undefined, folderKey: string | undefined, key: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/documents/folders/${folderKey}/apiDocs/${key}/runApi`;\n        return MyAxios.Post(url, {}, then, exp, final);\n    }\n\n    static SaveResponse(projectKey: string | undefined, folderKey: string | undefined, apiDocKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/documents/folders/${folderKey}/apiDocs/${apiDocKey}/responses`;\n        return MyAxios.Post(url, body, then, exp, final);\n    }\n}\n\nexport {\n    TaskProjectManageService,\n    TaskSprintManageService,\n    TaskToDoListService,\n    SettingService,\n    VariableService,\n    DocumentService,\n    ApiDocService\n}"],"names":["MyInput","props","onClick","value","onChange","undefined","target","setValue","required","readOnly","MyFormItem","label","Input","format","moment","inputReadOnly","showTime","disabled","min","max","className","span","colSpan1","colSpan2","Number","options","TextArea","Password","Search","loading","onSearch","checked","type","files","ImportFileComponent","useState","file","setFile","projectKey","useParams","key","MyButton","SettingService","then","rs","console","log","isSuccess","blob","Blob","data","url","URL","createObjectURL","window","open","catch","err","finally","setIsLoading","formData","FormData","append","Fn","doUpload","ModifyOtherSettingComponent","loadData","useCallback","keyData","onClose","setVisible","useEffect","visible","title","layout","onSubmitCapture","body","Edit","Add","htmlType","isLoading","Swal","text","confirm","isConfirmed","OtherComponent","dataSource","setDataSource","visibleEdit","setVisibleEdit","keyEdit","setKeyEidt","map","index","gutter","style","textAlign","ModifyStatusSettingComponent","setType","isNew","setIsNew","isClosed","setIsClosed","row","HandleCloseDrawer","showConfirmButton","showDenyButton","result","StatusComponent","setKeyEdit","RenderType","valueType","colorType","color","CheckCircleTwoTone","twoToneColor","SettingComponent","items","children","MyBox","defaultActiveKey","centered","TaskProjectManageService","MyAxiosV2","paginationRequest","generateQueryString","q","timestamp","encodeURIComponent","TaskSprintManageService","sprintKey","TaskToDoListService","settingKey","VariableService","exp","final","MyAxios","DocumentService","ApiDocService","folderKey","apiDocKey"],"sourceRoot":""}
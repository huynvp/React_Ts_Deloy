{"version":3,"file":"static/js/213.e0b8e1da.chunk.js","mappings":"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","sources":["components/core/UI_FormatComponent.tsx","components/tool/task/projectManage/CloneComponent.tsx","helper/function.ts","services/taskService.ts"],"sourcesContent":["import moment from \"moment\";\r\n\r\nexport function UIFormatDateVNComponent(props: any) {\r\n    const { value } = props;\r\n    let dateStr = value !== undefined && value !== '' && value !== null ?\r\n        moment(value.timeLocal).format(\"DD/MM/YYYY\") : \"\";\r\n    return <span>{dateStr}</span>\r\n}\r\n\r\nexport function UIFormatDateTimeVNComponent(props: any) {\r\n    const { value } = props;\r\n    let dateStr = value !== undefined && value !== '' && value !== null ?\r\n        moment(value.timeLocal).format(\"DD/MM/YYYY HH:mm:ss\") : \"\";\r\n    return <span>{dateStr}</span>\r\n}","import { Col, Row } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Fn } from \"../../../../helper/function\";\r\nimport { TaskProjectManageService } from \"../../../../services/taskService\";\r\nimport { MyFormItem } from \"../../../core/Input\";\r\nimport { Box, MyBox } from \"../../../core/MyBox\";\r\nimport { MyButton } from \"../../../core/MyButton\";\r\nimport { UIFormatDateVNComponent } from \"../../../core/UI_FormatComponent\";\r\n\r\nexport default function CloneComponent() {\r\n    let projectKey = useParams().key;\r\n\r\n    const navigate = useNavigate();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [otp, setOtp] = useState('');\r\n    const [projectName, setProjectName] = useState('');\r\n    const [projectContent, setProjectContent] = useState('');\r\n    const [projectTag, setProjectTag] = useState('');\r\n    const [projectParent, setProjectParent] = useState('');\r\n    const [projectStatus, setProjectStatus] = useState(0);\r\n    const [sprints, setSprints] = useState([]);\r\n\r\n    const [settingType1, setSettingType1] = useState([]);\r\n    const [settingType2, setSettingType2] = useState([]);\r\n    const [settingType3, setSettingType3] = useState([]);\r\n    const [settingType4, setSettingType4] = useState([]);\r\n    const [settingType5, setSettingType5] = useState([]);\r\n    const [settingType6, setSettingType6] = useState([]);\r\n    const [settingType7, setSettingType7] = useState([]);\r\n    const [settingType8, setSettingType8] = useState([]);\r\n\r\n    function handleClickGetClone() {\r\n        setIsLoading(true);\r\n        TaskProjectManageService.GetClone(projectKey)\r\n            .then((res: any) => {\r\n                if (res.isSuccess) {\r\n                    let projectDetail = res.data.project;\r\n                    setProjectName(projectDetail.name);\r\n                    setProjectContent(projectDetail.content);\r\n                    setProjectTag(projectDetail.tag.toString(\",\"));\r\n                    setProjectParent(projectDetail.parentProject?.name);\r\n                    setProjectStatus(projectDetail.status.value);\r\n                    setSprints(res.data.sprints);\r\n\r\n                    for (let index = 0; index < res.data.statusSettings.length; index++) {\r\n                        const element = res.data.statusSettings[index];\r\n                        if (element.type === 1) {\r\n                            setSettingType1(element.datas);\r\n                        }\r\n\r\n                        if (element.type === 2) {\r\n                            setSettingType2(element.datas);\r\n                        }\r\n\r\n                        if (element.type === 3) {\r\n                            setSettingType3(element.datas);\r\n                        }\r\n\r\n                        if (element.type === 4) {\r\n                            setSettingType4(element.datas);\r\n                        }\r\n\r\n                        if (element.type === 5) {\r\n                            setSettingType5(element.datas);\r\n                        }\r\n\r\n                        if (element.type === 6) {\r\n                            setSettingType6(element.datas);\r\n                        }\r\n\r\n                        if (element.type === 7) {\r\n                            setSettingType7(element.datas);\r\n                        }\r\n\r\n                        if (element.type === 8) {\r\n                            setSettingType8(element.datas);\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            .finally(() => setIsLoading(false));\r\n    }\r\n\r\n    function handleConfirmClone() {\r\n        let body = {\r\n            otp: otp\r\n        };\r\n        setIsLoading(true);\r\n        TaskProjectManageService.ProcessClone(projectKey, body)\r\n            .then((rs: any) => {\r\n                if (rs.isSuccess) {\r\n                    Fn.PrintMsgSuccess(rs);\r\n                    navigate(`/tools/tasks/projects/${rs.data.projectKeyNew}`);\r\n                }\r\n            })\r\n            .finally(() => setIsLoading(false));\r\n    }\r\n\r\n    function RenderSprints() {\r\n        return sprints.map((data: any, index: number) =>\r\n            <Box key={index}>\r\n                <p>\r\n                    <strong>Giai đoạn {index + 1}: </strong> {data.name}\r\n                </p>\r\n                <p>\r\n                    <strong>Trạng thái: </strong> {data.status.value}\r\n                </p>\r\n                <p>\r\n                    <strong>Thời gian: </strong>\r\n                    <UIFormatDateVNComponent value={data.dateFrom} /> -\r\n                    <UIFormatDateVNComponent value={data.dateTo} />\r\n                </p>\r\n            </Box>\r\n        )\r\n    }\r\n\r\n    function RenderList(datas: any) {\r\n        return datas.map((data: any, index: number) => {\r\n            if (data.isNew !== null) {\r\n                return <li key={index}>\r\n                    {data.value}\r\n                    - Trạng thái mới: <strong>{data.isNew ? \"True\" : \"False\"}</strong>\r\n                    - Trạng thái đóng: <strong>{data.isClosed ? \"True\" : \"False\"}</strong>\r\n                </li>;\r\n            } else {\r\n                return <li key={index}>{data.value}</li>;\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <MyBox\r\n            isLoading={isLoading}\r\n            title=\"Clone dự án\">\r\n            <Box showBox={false}>\r\n                <MyButton\r\n                    type=\"primary\"\r\n                    isLoading={isLoading}\r\n                    onClick={handleClickGetClone}\r\n                    value=\"Get data clone\" />\r\n            </Box>\r\n            <Box showBox={false}>\r\n                <Row gutter={24}>\r\n                    <Col span={12}>\r\n                        <MyFormItem.Input\r\n                            label=\"Nhập OTP\"\r\n                            value={otp}\r\n                            setValue={setOtp} />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <MyButton\r\n                            type=\"primary\"\r\n                            isLoading={isLoading}\r\n                            onClick={handleConfirmClone}\r\n                            value=\"Xác nhận clone dự án\" />\r\n                    </Col>\r\n                </Row>\r\n            </Box>\r\n            <Box>\r\n                <h2>Chi tiết dự án</h2>\r\n                <Row gutter={12}>\r\n                    <Col span={12}>\r\n                        <strong>Tên dự án: </strong>{projectName}\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                        <strong>Tag: </strong> {projectTag}\r\n                    </Col>\r\n\r\n                    <Col span={24}>\r\n                        <strong>Nội dung: </strong>{projectContent}\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                        <strong>Dự án cha: </strong> {projectParent}\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                        <strong>Trạng thái: </strong> {projectStatus}\r\n                    </Col>\r\n                </Row>\r\n            </Box>\r\n\r\n            <Box>\r\n                <h2>Danh sách các giai đoạn dự án</h2>\r\n                {RenderSprints()}\r\n            </Box>\r\n\r\n            <Box>\r\n                <h2>Danh sách cài đặt dự án</h2>\r\n                <Row gutter={12}>\r\n                    <Col span={24}>\r\n                        <h3>Danh sách trạng thái dự án</h3>\r\n                        <ul>\r\n                            {RenderList(settingType1)}\r\n                        </ul>\r\n                    </Col>\r\n\r\n                    <Col span={24}>\r\n                        <h3>Danh sách trạng thái giai đoạn</h3>\r\n                        <ul>\r\n                            {RenderList(settingType2)}\r\n                        </ul>\r\n                    </Col>\r\n\r\n                    <Col span={24}>\r\n                        <h3>Danh sách trạng thái công việc</h3>\r\n                        <ul>\r\n                            {RenderList(settingType3)}\r\n                        </ul>\r\n                    </Col>\r\n\r\n                    <Col span={24}>\r\n                        <h3>Danh sách trạng thái vấn đề</h3>\r\n                        <ul>\r\n                            {RenderList(settingType4)}\r\n                        </ul>\r\n                    </Col>\r\n\r\n                    <Col span={24}>\r\n                        <h3>Danh sách độ ưu tiên</h3>\r\n                        <ul>\r\n                            {RenderList(settingType5)}\r\n                        </ul>\r\n                    </Col>\r\n\r\n                    <Col span={24}>\r\n                        <h3>Danh sách mức độ ảnh hưởng</h3>\r\n                        <ul>\r\n                            {RenderList(settingType6)}\r\n                        </ul>\r\n                    </Col>\r\n\r\n                    <Col span={24}>\r\n                        <h3>Danh sách Tag</h3>\r\n                        <ul>\r\n                            {RenderList(settingType7)}\r\n                        </ul>\r\n                    </Col>\r\n\r\n                    <Col span={24}>\r\n                        <h3>Danh sách loại vấn đề</h3>\r\n                        <ul>\r\n                            {RenderList(settingType8)}\r\n                        </ul>\r\n                    </Col>\r\n                </Row>\r\n            </Box>\r\n        </MyBox >\r\n    )\r\n}","import { message } from \"antd\";\r\nimport { PageInfoModel } from \"../components/core/TableModel\";\r\n\r\nexport class Fn {\r\n    static PrintMsg(err: any | null) {\r\n        if (err.response === undefined) {\r\n            return err.response;\r\n        }\r\n        return err.response.data.message;\r\n    };\r\n\r\n    static PrintMsgErr(err: any | null) {\r\n        message.error(this.PrintMsg(err));\r\n    };\r\n\r\n    static PrintMsgSuccess(data: any) {\r\n        message.success(data.message);\r\n    };\r\n\r\n    static FormatInputMoney(data: string | null) {\r\n        return `${data}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    }\r\n\r\n    static ParseInputMoney(data: string) {\r\n        return data.replace(/\\s?|(,*)/g, '');\r\n    }\r\n\r\n    static FormatMoney(money: number) {\r\n        return new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(money);\r\n    }\r\n\r\n    static FormatNumber(money: number) {\r\n        return new Intl.NumberFormat('vi-VN').format(money);\r\n    }\r\n\r\n    static GetIndexInArray = (datas: any, keySearch: string, value: string) => { // -1 khong tim thay\r\n        var result = -1;\r\n        for (var i = 0; i < datas.length; i++) {\r\n            if (datas[i][keySearch] === value) {\r\n                result = i;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static GetIndexInArrayStr = (datas: any, value: string) => { // -1 khong tim thay\r\n        var result = -1;\r\n        for (var i = 0; i < datas.length; i++) {\r\n            if (datas[i].trim() === value.trim()) {\r\n                result = i;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static SetPageInfo = (data: any, setTotal: any, setPageNumber: any, setPageSize: any) => {\r\n        var pageInfo = data.data.data.pageInfo;\r\n        setTotal(pageInfo.totalCount);\r\n        setPageNumber(pageInfo.currentPage);\r\n        setPageSize(pageInfo.pageSize);\r\n    }\r\n\r\n    static GetTimestamp = (data?: any, body?: any) => {\r\n        try {\r\n            if (body === null || body === undefined) {\r\n                return data.data.timestamp;\r\n            }\r\n            body.timestamp = data.data.timestamp;\r\n            return body;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    static RenderSTT(_data: any, _row: any, index: number, pageInfo: PageInfoModel) {\r\n        return ((pageInfo.pageNumber - 1) * pageInfo.pageSize) + index + 1;\r\n    }\r\n\r\n\r\n\r\n    // no use\r\n    static PrintMsgSuccess_no_use(data: any) {\r\n        message.success(data.data.message);\r\n    };\r\n    static GetTimestamp_no_use = (data?: any, body?: any) => {\r\n        try {\r\n            if (body === null || body === undefined) {\r\n                return data.data.data.timestamp;\r\n            }\r\n            body.timestamp = data.data.data.timestamp;\r\n            return body;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}","import { MethodHttp, MyHttp } from \"../helper/myaxios\";\r\nimport { PaginationRequest } from \"../models/baseModel\";\r\n\r\nclass TaskProjectManageService {\r\n    static GetQrCode(key: string) {\r\n        return `${MyHttp.BaseURL}/user/qrCode?data=taskManage_projectManage_${key}`;\r\n    }\r\n\r\n    static GetStatistic() {\r\n        var url = `v2/tools/taskManages/projects/statistic`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetLog(projectKey: string | undefined, paginationRequest: PaginationRequest) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/logs?${paginationRequest.generateQueryString()}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetClone(projectKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/duplicate`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static ProcessClone(projectKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/duplicate`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static GetList(paginationRequest: PaginationRequest) {\r\n        var url = `v2/tools/taskManages/projects?${paginationRequest.generateQueryString()}`;\r\n        return MyHttp.SendReq(url, \"GET\");\r\n    }\r\n\r\n    static GetDetail(key: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Search(q: string) {\r\n        var url = `v2/tools/taskManages/projects/query?query=${q}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Add(body: any) {\r\n        var url = `v2/tools/taskManages/projects`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Edit(key: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static Delete(key: string | undefined, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n}\r\n\r\nclass TaskSprintManageService {\r\n    static GetList(projectKey: string | undefined, paginationRequest: PaginationRequest) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints${paginationRequest === undefined ? \"\" : \"?\" + paginationRequest.generateQueryString()}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(projectKey: string | undefined, sprintKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Add(projectKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Edit(projectKey: string | undefined, sprintKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static Delete(projectKey: string | undefined, sprintKey: string | undefined, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n}\r\n\r\nclass TaskToDoListService {\r\n    static GetList(projectKey: string | undefined, sprintKey: string | undefined, paginationRequest: PaginationRequest | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}/toDoLists?${paginationRequest?.generateQueryString()}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(projectKey: string | undefined, sprintKey: string | undefined, key: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}/toDoLists/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Add(projectKey: string | undefined, sprintKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}/toDoLists`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Edit(projectKey: string | undefined, sprintKey: string | undefined, key: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}/toDoLists/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static Delete(projectKey: string | undefined, sprintKey: string | undefined, key: string | undefined, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}/toDoLists/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n}\r\n\r\nclass SettingService {\r\n    static GetListSettingStatus(projectKey: string | undefined, type: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings?type=${type}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetailSettingStatus(projectKey: string | undefined, settingKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/${settingKey}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static AddSettingStatus(projectKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static EditSettingStatus(projectKey: string | undefined, settingKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/${settingKey}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static DeleteSettingStatus(projectKey: string | undefined, settingKey: string | undefined, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/${settingKey}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n\r\n    static SearchByType(projectKey: string | undefined, type: number) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/query?type=${type}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Import(projectKey: string | undefined, formData: FormData) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/import`;\r\n        return MyHttp.SendReq(url, \"Post\", formData, true);\r\n    }\r\n\r\n    static Export(projectKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/export`;\r\n        return MyHttp.SendReq(url, \"Get\", undefined, true);\r\n    }\r\n}\r\n\r\nclass VariableService {\r\n    static GetList(projectKey: string | undefined, paginationRequest: PaginationRequest) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/variables?${paginationRequest.generateQueryString()}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(projectKey: string | undefined, key: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/variables/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Add(projectKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/variables`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Edit(projectKey: string | undefined, key: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/variables/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static Delete(projectKey: string | undefined, key: string | undefined, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/variables/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n\r\n    static GetHistory(projectKey: string | undefined, key: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/variables/${key}/histories`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n}\r\n\r\nclass DocumentService {\r\n    static GetList(projectKey: string | undefined, paginationRequest: PaginationRequest) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders?${paginationRequest.generateQueryString()}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(projectKey: string | undefined, key: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Add(projectKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Edit(projectKey: string | undefined, key: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static Delete(projectKey: string | undefined, key: string | undefined, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n}\r\n\r\nclass ApiDocService {\r\n    static GetList(projectKey: string | undefined, folderKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(projectKey: string | undefined, folderKey: string | undefined, key: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Add(projectKey: string | undefined, folderKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Edit(projectKey: string | undefined, folderKey: string | undefined, key: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static Delete(projectKey: string | undefined, folderKey: string | undefined, key: string | undefined, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n\r\n    static ExecApi(projectKey: string | undefined, folderKey: string | undefined, apiDocKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${apiDocKey}/exec`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Query(projectKey: string | undefined, q: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/apis/query?q=${q}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n}\r\n\r\nclass ApiDocResponseService {\r\n    static Getlist(projectKey: string | undefined, folderKey: string | undefined, apiDocKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${apiDocKey}/responses`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(projectKey: string | undefined, folderKey: string | undefined, apiDocKey: string | undefined, key: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${apiDocKey}/responses/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static SaveResponse(projectKey: string | undefined, folderKey: string | undefined, apiDocKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${apiDocKey}/responses`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Delete(projectKey: string | undefined, folderKey: string | undefined, apiDocKey: string | undefined, key: string | undefined, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${apiDocKey}/responses/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n}\r\n\r\nclass WorkflowService {\r\n    static GetList(paginationRequest: PaginationRequest) {\r\n        var url = `v2/tools/taskManages/workflows?${paginationRequest.generateQueryString()}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(projectKey: string, key: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Add(projectKey: string, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Edit(projectKey: string, key: string, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static Delete(projectKey: string, key: string, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n}\r\n\r\nclass WorkflowDetailService {\r\n    static GetList(paginationRequest: PaginationRequest, projectKey: string | undefined, workflowKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/details?${paginationRequest.generateQueryString()}&orders=true`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(projectKey: string, workflowKey: string, key: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/details/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Add(projectKey: string, workflowKey: string, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/details`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Edit(projectKey: string, workflowKey: string, key: string, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/details/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static Delete(projectKey: string, workflowKey: string, key: string, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/details/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n\r\n    static SwapOrder(key: string, projectKey: string | undefined, workflowKey: string | undefined, isNext: boolean) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/details/${key}/swapOrders?isNext=${isNext}`;\r\n        return MyHttp.SendReq(url, \"Post\");\r\n    }\r\n}\r\n\r\nclass WorkflowRunService {\r\n    static GetList(paginationRequest: PaginationRequest, projectKey: string | undefined, workflowKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/histories?${paginationRequest.generateQueryString()}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(key: string | undefined, projectKey: string | undefined, workflowKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/histories/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Add(body: any, projectKey: string | undefined, workflowKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/histories`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Edit(key: string | undefined, body: any, projectKey: string | undefined, workflowKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/histories/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static Delete(key: string | undefined, timestamp: string, projectKey: string | undefined, workflowKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/histories/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n\r\n    static ExecApi(key: string | undefined, projectKey: string | undefined, workflowKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/histories/${key}/exec`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n}\r\n\r\nclass ApiPublicService {\r\n    static GetList(paginationRequest: PaginationRequest, projectKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/documentApi/public?${paginationRequest.generateQueryString()}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n    static GetDetail(projectKey: string | undefined, key: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/documentApi/public/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n    static Add(projectKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/documentApi/public`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n    static Edit(projectKey: string | undefined, key: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/documentApi/public/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n    static Delete(projectKey: string | undefined, key: string | undefined, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/documentApi/public/${key}?timestamp=${encodeURIComponent((timestamp))}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n\r\n    static GetListDetail(projectKey: string | undefined, key: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/documentApi/public/${key}/details`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static UpdateDetail(projectKey: string | undefined, key: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/documentApi/public/${key}/details`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static GetListPublicDocument(key: string | undefined, replaceVar: boolean) {\r\n        return MyHttp.SendReqV2({\r\n            url: `v2/tools/taskManages/publicDocuments/${key}?replaceVar=${replaceVar}`,\r\n            method: MethodHttp.Get,\r\n            isNoAuth: true\r\n        });\r\n    }\r\n}\r\n\r\nexport {\r\n    TaskProjectManageService,\r\n    TaskSprintManageService,\r\n    TaskToDoListService,\r\n    SettingService,\r\n    VariableService,\r\n    DocumentService,\r\n    ApiDocService,\r\n    ApiDocResponseService,\r\n    WorkflowService,\r\n    WorkflowDetailService,\r\n    WorkflowRunService,\r\n    ApiPublicService\r\n}"],"names":["UIFormatDateVNComponent","props","value","dateStr","undefined","moment","timeLocal","format","UIFormatDateTimeVNComponent","CloneComponent","projectKey","useParams","key","navigate","useNavigate","useState","isLoading","setIsLoading","otp","setOtp","projectName","setProjectName","projectContent","setProjectContent","projectTag","setProjectTag","projectParent","setProjectParent","projectStatus","setProjectStatus","sprints","setSprints","settingType1","setSettingType1","settingType2","setSettingType2","settingType3","setSettingType3","settingType4","setSettingType4","settingType5","setSettingType5","settingType6","setSettingType6","settingType7","setSettingType7","settingType8","setSettingType8","RenderList","datas","map","data","index","isNew","isClosed","title","showBox","type","onClick","TaskProjectManageService","then","res","isSuccess","projectDetail","project","name","content","tag","toString","parentProject","status","statusSettings","length","element","finally","gutter","span","label","setValue","body","rs","Fn","projectKeyNew","dateFrom","dateTo","err","response","message","this","PrintMsg","replace","money","Intl","NumberFormat","style","currency","_data","_row","pageInfo","pageNumber","pageSize","GetIndexInArray","keySearch","result","i","GetIndexInArrayStr","trim","SetPageInfo","setTotal","setPageNumber","setPageSize","totalCount","currentPage","GetTimestamp","timestamp","error","console","log","GetTimestamp_no_use","MyHttp","paginationRequest","url","generateQueryString","q","encodeURIComponent","TaskSprintManageService","sprintKey","TaskToDoListService","SettingService","settingKey","formData","VariableService","DocumentService","ApiDocService","folderKey","apiDocKey","ApiDocResponseService","WorkflowService","WorkflowDetailService","workflowKey","isNext","WorkflowRunService","ApiPublicService","replaceVar","method","MethodHttp","isNoAuth"],"sourceRoot":""}
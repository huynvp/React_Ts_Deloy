{"version":3,"file":"static/js/8589.0a56aa4f.chunk.js","mappings":"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","sources":["components/core/Input.tsx","components/tool/task/workflow/document/public/AssignApiComponent.tsx","components/tool/task/workflow/document/public/DetailComponent.tsx","helper/function.ts","services/taskService.ts"],"sourcesContent":["import { Input, Form, DatePicker, InputNumber, Row, Col, Select, Switch, Checkbox } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nexport class MyInput {\r\n    // ************************* Input ****************************\r\n    static Input(props: any) {\r\n        function handleChangeInput(value: any) {\r\n            if (props.onChange !== undefined) {\r\n                props.onChange(value.target.value);\r\n            }\r\n\r\n            if (props.setValue !== undefined) {\r\n                props.setValue(value.target.value);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Input\r\n                onClick={props.onClick}\r\n                value={props.value}\r\n                onChange={handleChangeInput}\r\n                required={props.required}\r\n                readOnly={props.readOnly} />\r\n        );\r\n    }\r\n}\r\n\r\nexport class MyFormItem {\r\n    static Input(props: any) {\r\n        return (\r\n            <Form.Item label={props.label}>\r\n                <MyInput.Input\r\n                    onClick={props.onClick}\r\n                    onChange={props.onChange}\r\n                    value={props.value}\r\n                    setValue={props.setValue}\r\n                    required={props.required}\r\n                    readOnly={props.readOnly} />\r\n            </Form.Item>\r\n        );\r\n    }\r\n\r\n    // *************************** Datepicker **************************\r\n    static DatePicker(props: any) {\r\n        function handleChangeOption(value: any) {\r\n            if (props.setValue !== undefined) {\r\n                props.setValue(value);\r\n            }\r\n        }\r\n\r\n        function customeFormat(value: any) {\r\n            return moment(value).format(\"DD/MM/YYYY\");\r\n        }\r\n        \r\n        return (\r\n            <Form.Item label={props.label}>\r\n                <DatePicker\r\n                    value={moment(props.value)}\r\n                    onChange={handleChangeOption}\r\n                    format={customeFormat}\r\n                    inputReadOnly={props.readOnly} />\r\n            </Form.Item>\r\n        );\r\n    }\r\n\r\n    // *************************** Datetimepicker **************************\r\n    static DateTimePicker(props: any) {\r\n        function handleChangeOption(value: any) {\r\n            if (props.setValue !== undefined) {\r\n                props.setValue(value);\r\n            }\r\n        }\r\n\r\n        function customeFormat(value: any) {\r\n            return moment(value).format(\"DD/MM/YYYY HH:mm:ss\");\r\n        }\r\n\r\n        return (\r\n            <Form.Item label={props.label}>\r\n                <DatePicker\r\n                    showTime\r\n                    value={moment(props.value)}\r\n                    onChange={handleChangeOption}\r\n                    format={customeFormat}\r\n                    disabled={props.readOnly} />\r\n            </Form.Item>\r\n        );\r\n    }\r\n\r\n    // *************************** Number **************************\r\n    static Number(props: any) {\r\n        function handleChangeInput(value: any) {\r\n            if (props.setValue !== undefined) {\r\n                props.setValue(value);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Form.Item label={props.label}>\r\n                <InputNumber\r\n                    min={props.min}\r\n                    max={props.max}\r\n                    value={props.value}\r\n                    onChange={handleChangeInput} />\r\n            </Form.Item>\r\n        );\r\n    }\r\n\r\n    static NumberColSpan(props: any) {\r\n        return (\r\n            <div>\r\n                <Row className={props.className}>\r\n                    <Col span={props.colSpan1}>\r\n                        <span>{props.label}</span>\r\n                    </Col>\r\n                    <Col span={props.colSpan2}>\r\n                        <MyFormItem.Number\r\n                            min={props.min}\r\n                            max={props.max}\r\n                            value={props.value}\r\n                            setValue={props.setValue} />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // *************************** Select **************************\r\n    static Select(props: any) {\r\n        function handleChangeOption(value: any) {\r\n            if (props.setValue !== undefined) {\r\n                props.setValue(value);\r\n            }\r\n\r\n            if (props.onChange !== undefined) {\r\n                props.onChange(value);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Form.Item label={props.label}>\r\n                <Select\r\n                    options={props.options}\r\n                    value={props.value}\r\n                    onChange={handleChangeOption} />\r\n            </Form.Item>\r\n        );\r\n    }\r\n\r\n\r\n    // *************************** TextArea **************************\r\n    static TextArea(props: any) {\r\n        function handleChangeOption(value: any) {\r\n            if (props.setValue !== undefined) {\r\n                props.setValue(value.target.value);\r\n            }\r\n        }\r\n\r\n        const { TextArea } = Input;\r\n        return (\r\n            <Form.Item label={props.label}>\r\n                <TextArea\r\n                    value={props.value}\r\n                    onChange={handleChangeOption} />\r\n            </Form.Item>\r\n        );\r\n    }\r\n\r\n    // *************************** Password **************************\r\n    static Password(props: any) {\r\n        function handleChangeOption(value: any) {\r\n            if (props.onChange !== undefined) {\r\n                props.onChange(value.target.value);\r\n            }\r\n\r\n            if (props.setValue !== undefined) {\r\n                props.setValue(value.target.value);\r\n            }\r\n        }\r\n\r\n        const { Password } = Input;\r\n        return (\r\n            <Form.Item label={props.label}>\r\n                <Password\r\n                    value={props.value}\r\n                    onChange={handleChangeOption} />\r\n            </Form.Item>\r\n        );\r\n    }\r\n\r\n    // *************************** Search **************************\r\n    static Search(props: any) {\r\n        function handleChangeSearch(value: any) {\r\n            if (props.setValue !== undefined) {\r\n                props.setValue(value.target.value);\r\n            }\r\n        }\r\n\r\n        const { Search } = Input;\r\n        return (\r\n            <Form.Item label={props.label}>\r\n                <Search\r\n                    loading={props.loading}\r\n                    onSearch={props.onSearch}\r\n                    value={props.value}\r\n                    onChange={handleChangeSearch} />\r\n            </Form.Item>\r\n        );\r\n    }\r\n\r\n    // *************************** Swith **************************\r\n    static Switch(props: any) {\r\n        function handleChangeSearch(value: any) {\r\n            if (props.setValue !== undefined) {\r\n                if (props.readOnly !== true) {\r\n                    props.setValue(value);\r\n                }\r\n            }\r\n                \r\n            if (props.onChange !== undefined) {\r\n                props.onChange(value);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Form.Item label={props.label}>\r\n                <Switch\r\n                    loading={props.loading}\r\n                    checked={props.value}\r\n                    onChange={handleChangeSearch} />\r\n            </Form.Item>\r\n        );\r\n    }\r\n\r\n    // *************************** Swith **************************\r\n    static Checkbox(props: any) {\r\n        function handleChangeSearch(value: any) {\r\n            if (props.setValue !== undefined) {\r\n                if (props.readOnly !== true) {\r\n                    props.setValue(value.target.checked);\r\n                }\r\n            }\r\n\r\n            if (props.onChange !== undefined) {\r\n                props.onChange(value.target.checked);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Checkbox\r\n                checked={props.value}\r\n                onChange={handleChangeSearch}>{props.label}</Checkbox>\r\n        );\r\n    }\r\n\r\n    // *************************** Swith **************************\r\n    static File(props: any) {\r\n        function handleChange(value: any) {\r\n            if (props.setValue !== undefined) {\r\n                props.setValue(value.target.files[0]);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Form.Item label={props.label}>\r\n                <Input\r\n                    type=\"file\"\r\n                    // value={props.value}\r\n                    onChange={handleChange} />\r\n            </Form.Item>\r\n        );\r\n    }\r\n}","import { Col, Row } from \"antd\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Fn } from \"../../../../../../helper/function\";\r\nimport { DocumentApiPublicService } from \"../../../../../../services/taskService\";\r\nimport { MyFormItem } from \"../../../../../core/Input\";\r\nimport { Box } from \"../../../../../core/MyBox\";\r\nimport { MyButton } from \"../../../../../core/MyButton\";\r\n\r\nexport default function AssignApiComponent(props: any) {\r\n    const { projectKey, keyEdit } = props;\r\n    const [data, setData] = useState<any[]>([]);\r\n    const [checkAll, setCheckAll] = useState();\r\n\r\n    const loadData = useCallback(() => {\r\n        DocumentApiPublicService.GetListDetail(projectKey, keyEdit)\r\n            .then((rs: any) => {\r\n                if (rs.isSuccess) {\r\n                    setData(rs.data)\r\n                }\r\n            })\r\n    }, [projectKey, keyEdit])\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n    }, [loadData])\r\n\r\n    function handleChangeSwitch(val: boolean | undefined, index: any) {\r\n        data[index].check = val;\r\n        setData([...data]);\r\n    }\r\n\r\n    function onChangeCheckAll(val: boolean) {\r\n        data.map((_data: any, index: number) => {\r\n            data[index].check = val;\r\n            setData([...data]);\r\n            return 1;\r\n        })\r\n    }\r\n\r\n    function handleClickSave() {\r\n        var body = {\r\n            details: data\r\n        };\r\n        DocumentApiPublicService.UpdateDetail(projectKey, keyEdit, body)\r\n            .then((rs: any) => {\r\n                if (rs.isSuccess) {\r\n                    Fn.PrintMsgSuccess(rs);\r\n                }\r\n            })\r\n    }\r\n\r\n    function renderData() {\r\n        return data.map((data: any, index: number) => {\r\n            return (\r\n                <Box key={index}>\r\n                    <Row>\r\n                        <Col span={12}>\r\n                            <Link to={`/tools/tasks/projects/${projectKey}/codeManage/document/${data.folderKey}/apis/${data.apiKey}`}>{data.name}</Link>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <MyFormItem.Switch value={data.check} setValue={(val: boolean) => handleChangeSwitch(val, index)} />\r\n                        </Col>\r\n                    </Row>\r\n                </Box>\r\n            )\r\n        })\r\n    }\r\n    return (\r\n        <Box>\r\n            <Row gutter={12}>\r\n                <Col span={24}>\r\n                    <MyFormItem.Checkbox\r\n                        label=\"Check all\"\r\n                        value={checkAll}\r\n                        setValue={setCheckAll}\r\n                        onChange={onChangeCheckAll} />\r\n                </Col>\r\n                <Col span={24}>\r\n                    {renderData()}\r\n                </Col>\r\n                <Col span={24}>\r\n                    <MyButton\r\n                        type=\"success\"\r\n                        value=\"Lưu danh sách public API\"\r\n                        onClick={handleClickSave} />\r\n                </Col>\r\n            </Row>\r\n        </Box>\r\n    )\r\n}","import { Form, message } from \"antd\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Fn } from \"../../../../../../helper/function\";\r\nimport { DocumentApiPublicService } from \"../../../../../../services/taskService\";\r\nimport { MyFormItem } from \"../../../../../core/Input\";\r\nimport { MyBox } from \"../../../../../core/MyBox\";\r\nimport { MyButton } from \"../../../../../core/MyButton\";\r\nimport AssignApiComponent from \"./AssignApiComponent\";\r\n\r\nexport default function DetailComponent(props: any) {\r\n    const keyEdit = useParams().key;\r\n    const projectKey: string | undefined = useParams().projectKey;\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const nav = useNavigate();\r\n\r\n    const [name, setName] = useState('');\r\n    const [_public, setPublic] = useState(false);\r\n\r\n    const loadDataDetail = useCallback(() => {\r\n        if (keyEdit !== undefined) {\r\n            setIsLoading(true);\r\n            DocumentApiPublicService.GetDetail(projectKey, keyEdit)\r\n                .then((rs: any) => {\r\n                    if (rs.isSuccess) {\r\n                        setName(rs.data.name)\r\n                        setPublic(rs.data.status);\r\n                    }\r\n                })\r\n                .finally(() => setIsLoading(false))\r\n        }\r\n    }, [setIsLoading, projectKey, keyEdit])\r\n\r\n    useEffect(() => {\r\n        loadDataDetail();\r\n    }, [loadDataDetail])\r\n\r\n    function handleSubmitForm() {\r\n        var body = {\r\n            name: name,\r\n            status: _public ? 1 : 0\r\n        };\r\n\r\n        setIsLoading(true);\r\n        if (keyEdit !== undefined) {\r\n            edit(body);\r\n        } else {\r\n            add(body);\r\n        }\r\n    }\r\n\r\n    function add(body: any) {\r\n        DocumentApiPublicService.Add(projectKey, body)\r\n            .then((rs: any) => {\r\n                if (rs.isSuccess) {\r\n                    Fn.PrintMsgSuccess(rs);\r\n                    nav(`/tools/tasks/projects/${projectKey}/codeManage/document/publish/edit/${rs.data.key}`);\r\n                } else setIsLoading(false);\r\n            })\r\n    }\r\n\r\n    function edit(body: any) {\r\n        DocumentApiPublicService.GetDetail(projectKey, keyEdit)\r\n            .then((rs: any) => {\r\n                if (rs.isSuccess) {\r\n                    body = Fn.GetTimestamp(rs, body);\r\n                    DocumentApiPublicService.Edit(projectKey, keyEdit, body)\r\n                        .then((rs: any) => {\r\n                            if (rs.isSuccess) {\r\n                                Fn.PrintMsgSuccess(rs);\r\n                            }\r\n                        })\r\n                        .finally(() => setIsLoading(false))\r\n                } else setIsLoading(false);\r\n            })\r\n    }\r\n\r\n    function handleDelete() {\r\n        Swal.fire({\r\n            title: \"Xác nhận xóa\",\r\n            text: \"Bạn có muốn xóa data này không?\"\r\n        })\r\n            .then((rs) => {\r\n                if (rs.isConfirmed) {\r\n                    doDelete();\r\n                }\r\n            })\r\n    }\r\n\r\n    function doDelete() {\r\n        DocumentApiPublicService.GetDetail(projectKey, keyEdit)\r\n            .then((rs: any) => {\r\n                if (rs.isSuccess) {\r\n                    DocumentApiPublicService.Delete(projectKey, keyEdit, Fn.GetTimestamp(rs))\r\n                        .then((rs: any) => {\r\n                            if (rs.isSuccess) {\r\n                                Fn.PrintMsgSuccess(rs);\r\n                                nav(`/tools/tasks/projects/${projectKey}/codeManage/document/publish`);\r\n                            } else setIsLoading(false);\r\n                        })\r\n                } else setIsLoading(false);\r\n            })\r\n    }\r\n\r\n    function handleGetLink(type: number) {\r\n        const link: string = `${window.location.origin}/docApis/${keyEdit}`;\r\n\r\n        if (type === 0) {\r\n            navigator.clipboard.writeText(link);\r\n            message.success(\"Save link to clipboard\");\r\n        } else {\r\n            nav(`/docApis/${keyEdit}`);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <MyBox\r\n            title=\"Chỉnh sửa\"\r\n            isLoading={isLoading}>\r\n            <Form\r\n                layout=\"vertical\"\r\n                onSubmitCapture={handleSubmitForm}>\r\n                <MyFormItem.Input\r\n                    label=\"Tên\"\r\n                    value={name}\r\n                    setValue={setName} />\r\n\r\n                <MyFormItem.Switch\r\n                    label=\"Public\"\r\n                    value={_public}\r\n                    setValue={setPublic}\r\n                    readOnly={keyEdit === undefined} />\r\n\r\n                <MyButton\r\n                    htmlType=\"submit\"\r\n                    type=\"success\"\r\n                    isLoading={isLoading}\r\n                    value={keyEdit !== undefined ? \"Chỉnh sửa\" : \"Thêm\"} />\r\n\r\n                <MyButton\r\n                    type=\"danger\"\r\n                    value=\"Xóa\"\r\n                    onClick={handleDelete} />\r\n\r\n                <MyButton\r\n                    value=\"Get link\"\r\n                    type=\"secondary\"\r\n                    onClick={() => { handleGetLink(0) }} />\r\n\r\n                <MyButton\r\n                    value=\"Go to public page\"\r\n                    type=\"warning\"\r\n                    onClick={() => { handleGetLink(1) }} />\r\n\r\n                <AssignApiComponent\r\n                    projectKey={projectKey}\r\n                    keyEdit={keyEdit} />\r\n            </Form>\r\n        </MyBox>\r\n    )\r\n}","import { message } from \"antd\";\r\nimport { PageInfoModel } from \"../components/core/TableModel\";\r\n\r\nexport class Fn {\r\n    static PrintMsg(err: any | null) {\r\n        if (err.response === undefined) {\r\n            return err.response;\r\n        }\r\n        return err.response.data.message;\r\n    };\r\n\r\n    static PrintMsgErr(err: any | null) {\r\n        message.error(this.PrintMsg(err));\r\n    };\r\n\r\n    static PrintMsgSuccess(data: any) {\r\n        message.success(data.message);\r\n    };\r\n\r\n    static FormatInputMoney(data: string | null) {\r\n        return `${data}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    }\r\n\r\n    static ParseInputMoney(data: string) {\r\n        return data.replace(/\\s?|(,*)/g, '');\r\n    }\r\n\r\n    static FormatMoney(money: number) {\r\n        return new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(money);\r\n    }\r\n\r\n    static FormatNumber(money: number) {\r\n        return new Intl.NumberFormat('vi-VN').format(money);\r\n    }\r\n\r\n    static GetIndexInArray = (datas: any, keySearch: string, value: string) => { // -1 khong tim thay\r\n        var result = -1;\r\n        for (var i = 0; i < datas.length; i++) {\r\n            if (datas[i][keySearch] === value) {\r\n                result = i;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static GetIndexInArrayStr = (datas: any, value: string) => { // -1 khong tim thay\r\n        var result = -1;\r\n        for (var i = 0; i < datas.length; i++) {\r\n            if (datas[i].trim() === value.trim()) {\r\n                result = i;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static SetPageInfo = (data: any, setTotal: any, setPageNumber: any, setPageSize: any) => {\r\n        var pageInfo = data.data.data.pageInfo;\r\n        setTotal(pageInfo.totalCount);\r\n        setPageNumber(pageInfo.currentPage);\r\n        setPageSize(pageInfo.pageSize);\r\n    }\r\n\r\n    static GetTimestamp = (data?: any, body?: any) => {\r\n        try {\r\n            if (body === null || body === undefined) {\r\n                return data.data.timestamp;\r\n            }\r\n            body.timestamp = data.data.timestamp;\r\n            return body;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    static RenderSTT(_data: any, _row: any, index: number, pageInfo: PageInfoModel) {\r\n        return ((pageInfo.pageNumber - 1) * pageInfo.pageSize) + index + 1;\r\n    }\r\n\r\n\r\n\r\n    // no use\r\n    static PrintMsgSuccess_no_use(data: any) {\r\n        message.success(data.data.message);\r\n    };\r\n    static GetTimestamp_no_use = (data?: any, body?: any) => {\r\n        try {\r\n            if (body === null || body === undefined) {\r\n                return data.data.data.timestamp;\r\n            }\r\n            body.timestamp = data.data.data.timestamp;\r\n            return body;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}","import { MethodHttp, MyHttp } from \"../helper/myaxios\";\r\nimport { PaginationRequest } from \"../models/baseModel\";\r\n\r\nclass TaskProjectManageService {\r\n    static GetQrCode(key: string) {\r\n        return `${MyHttp.BaseURL}/user/qrCode?data=taskManage_projectManage_${key}`;\r\n    }\r\n\r\n    static GetStatistic() {\r\n        var url = `v2/tools/taskManages/projects/statistic`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetLog(projectKey: string | undefined, paginationRequest: PaginationRequest) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/logs?${paginationRequest.generateQueryString()}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetClone(projectKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/duplicate`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static ProcessClone(projectKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/duplicate`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static GetList(paginationRequest: PaginationRequest, showClosedProject: boolean) {\r\n        var url = `v2/tools/taskManages/projects?${paginationRequest.generateQueryString()}&showIsClosed=${showClosedProject}`;\r\n        return MyHttp.SendReq(url, \"GET\");\r\n    }\r\n\r\n    static GetDetail(key: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Search(q: string) {\r\n        var url = `v2/tools/taskManages/projects/query?query=${q}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Add(body: any) {\r\n        var url = `v2/tools/taskManages/projects`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Edit(key: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static Delete(key: string | undefined, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n}\r\n\r\nclass TaskSprintManageService {\r\n    static GetList(projectKey: string | undefined, paginationRequest: PaginationRequest) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints${paginationRequest === undefined ? \"\" : \"?\" + paginationRequest.generateQueryString()}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(projectKey: string | undefined, sprintKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Add(projectKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Edit(projectKey: string | undefined, sprintKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static Delete(projectKey: string | undefined, sprintKey: string | undefined, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n}\r\n\r\nclass TaskToDoListService {\r\n    static GetList(projectKey: string | undefined, sprintKey: string | undefined, paginationRequest: PaginationRequest | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}/toDoLists?${paginationRequest?.generateQueryString()}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(projectKey: string | undefined, sprintKey: string | undefined, key: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}/toDoLists/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Add(projectKey: string | undefined, sprintKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}/toDoLists`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Edit(projectKey: string | undefined, sprintKey: string | undefined, key: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}/toDoLists/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static Delete(projectKey: string | undefined, sprintKey: string | undefined, key: string | undefined, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}/toDoLists/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n}\r\n\r\nclass SettingService {\r\n    static GetListSettingStatus(projectKey: string | undefined, type: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings?type=${type}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetailSettingStatus(projectKey: string | undefined, settingKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/${settingKey}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static AddSettingStatus(projectKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static EditSettingStatus(projectKey: string | undefined, settingKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/${settingKey}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static DeleteSettingStatus(projectKey: string | undefined, settingKey: string | undefined, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/${settingKey}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n\r\n    static SearchByType(projectKey: string | undefined, type: number) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/query?type=${type}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Import(projectKey: string | undefined, formData: FormData) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/import`;\r\n        return MyHttp.SendReq(url, \"Post\", formData, true);\r\n    }\r\n\r\n    static Export(projectKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/export`;\r\n        return MyHttp.SendReq(url, \"Get\", undefined, true);\r\n    }\r\n}\r\n\r\nclass VariableService {\r\n    static GetList(projectKey: string | undefined, paginationRequest: PaginationRequest) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/variables?${paginationRequest.generateQueryString()}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(projectKey: string | undefined, key: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/variables/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Add(projectKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/variables`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Edit(projectKey: string | undefined, key: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/variables/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static Delete(projectKey: string | undefined, key: string | undefined, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/variables/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n\r\n    static GetHistory(projectKey: string | undefined, key: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/variables/${key}/histories`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n}\r\n\r\nclass DocumentFolderService {\r\n    static GetList(projectKey: string | undefined, paginationRequest: PaginationRequest) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders?${paginationRequest.generateQueryString()}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(projectKey: string | undefined, key: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Add(projectKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Edit(projectKey: string | undefined, key: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static Delete(projectKey: string | undefined, key: string | undefined, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n}\r\n\r\nclass ApiDocService {\r\n    static GetList(projectKey: string | undefined, folderKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(projectKey: string | undefined, folderKey: string | undefined, key: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Add(projectKey: string | undefined, folderKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Edit(projectKey: string | undefined, folderKey: string | undefined, key: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static Delete(projectKey: string | undefined, folderKey: string | undefined, key: string | undefined, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n\r\n    static ExecApi(projectKey: string | undefined, folderKey: string | undefined, apiDocKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${apiDocKey}/exec`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Query(projectKey: string | undefined, q: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/apis/query?q=${q}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n}\r\n\r\nclass ApiDocResponseService {\r\n    static Getlist(projectKey: string | undefined, folderKey: string | undefined, apiDocKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${apiDocKey}/responses`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(projectKey: string | undefined, folderKey: string | undefined, apiDocKey: string | undefined, key: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${apiDocKey}/responses/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static SaveResponse(projectKey: string | undefined, folderKey: string | undefined, apiDocKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${apiDocKey}/responses`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Delete(projectKey: string | undefined, folderKey: string | undefined, apiDocKey: string | undefined, key: string | undefined, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${apiDocKey}/responses/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n}\r\n\r\nclass WorkflowService {\r\n    static GetList(paginationRequest: PaginationRequest) {\r\n        var url = `v2/tools/taskManages/workflows?${paginationRequest.generateQueryString()}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(projectKey: string, key: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Add(projectKey: string, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Edit(projectKey: string, key: string, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static Delete(projectKey: string, key: string, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n}\r\n\r\nclass WorkflowDetailService {\r\n    static GetList(paginationRequest: PaginationRequest, projectKey: string | undefined, workflowKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/details?${paginationRequest.generateQueryString()}&orders=true`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(projectKey: string, workflowKey: string, key: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/details/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Add(projectKey: string, workflowKey: string, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/details`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Edit(projectKey: string, workflowKey: string, key: string, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/details/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static Delete(projectKey: string, workflowKey: string, key: string, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/details/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n\r\n    static SwapOrder(key: string, projectKey: string | undefined, workflowKey: string | undefined, isNext: boolean) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/details/${key}/swapOrders?isNext=${isNext}`;\r\n        return MyHttp.SendReq(url, \"Post\");\r\n    }\r\n}\r\n\r\nclass WorkflowRunService {\r\n    static GetList(paginationRequest: PaginationRequest, projectKey: string | undefined, workflowKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/histories?${paginationRequest.generateQueryString()}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(key: string | undefined, projectKey: string | undefined, workflowKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/histories/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Add(body: any, projectKey: string | undefined, workflowKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/histories`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Edit(key: string | undefined, body: any, projectKey: string | undefined, workflowKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/histories/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static Delete(key: string | undefined, timestamp: string, projectKey: string | undefined, workflowKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/histories/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n\r\n    static ExecApi(key: string | undefined, projectKey: string | undefined, workflowKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/histories/${key}/exec`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n}\r\n\r\nclass DocumentApiPublicService {\r\n    static GetList(paginationRequest: PaginationRequest, projectKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/documentApi/public?${paginationRequest.generateQueryString()}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n    static GetDetail(projectKey: string | undefined, key: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/documentApi/public/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n    static Add(projectKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/documentApi/public`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n    static Edit(projectKey: string | undefined, key: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/documentApi/public/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n    static Delete(projectKey: string | undefined, key: string | undefined, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/documentApi/public/${key}?timestamp=${encodeURIComponent((timestamp))}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n\r\n    static GetListDetail(projectKey: string | undefined, key: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/documentApi/public/${key}/details`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static UpdateDetail(projectKey: string | undefined, key: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/documentApi/public/${key}/details`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static GetListPublicDocument(key: string | undefined, replaceVar: boolean) {\r\n        return MyHttp.SendReqV2({\r\n            url: `v2/tools/taskManages/publicDocuments/${key}?replaceVar=${replaceVar}`,\r\n            method: MethodHttp.Get,\r\n            isNoAuth: true\r\n        });\r\n    }\r\n\r\n    static GetListPublicDocumentResponse(documentPublicKey: string | undefined, apiKey: string | undefined) {\r\n        return MyHttp.SendReqV2({\r\n            url: `v2/tools/taskManages/publicDocuments/${documentPublicKey}/responses/${apiKey}`,\r\n            method: MethodHttp.Get,\r\n            isNoAuth: true\r\n        });\r\n    }\r\n}\r\n\r\nexport {\r\n    TaskProjectManageService,\r\n    TaskSprintManageService,\r\n    TaskToDoListService,\r\n    SettingService,\r\n    VariableService,\r\n    DocumentFolderService,\r\n    ApiDocService,\r\n    ApiDocResponseService,\r\n    WorkflowService,\r\n    WorkflowDetailService,\r\n    WorkflowRunService,\r\n    DocumentApiPublicService\r\n}"],"names":["MyInput","props","onClick","value","onChange","undefined","target","setValue","required","readOnly","MyFormItem","label","Input","moment","format","inputReadOnly","showTime","disabled","min","max","className","span","colSpan1","colSpan2","Number","options","TextArea","Password","Search","loading","onSearch","checked","type","files","AssignApiComponent","projectKey","keyEdit","useState","data","setData","checkAll","setCheckAll","loadData","useCallback","DocumentApiPublicService","then","rs","isSuccess","handleChangeSwitch","val","index","check","useEffect","gutter","map","_data","to","folderKey","apiKey","name","MyButton","body","details","Fn","DetailComponent","useParams","key","isLoading","setIsLoading","nav","useNavigate","setName","_public","setPublic","loadDataDetail","status","finally","handleGetLink","link","window","location","origin","navigator","clipboard","writeText","message","MyBox","title","layout","onSubmitCapture","edit","add","htmlType","Swal","text","isConfirmed","err","response","this","PrintMsg","replace","money","Intl","NumberFormat","style","currency","_row","pageInfo","pageNumber","pageSize","GetIndexInArray","datas","keySearch","result","i","length","GetIndexInArrayStr","trim","SetPageInfo","setTotal","setPageNumber","setPageSize","totalCount","currentPage","GetTimestamp","timestamp","error","console","log","GetTimestamp_no_use","TaskProjectManageService","MyHttp","paginationRequest","url","generateQueryString","showClosedProject","q","encodeURIComponent","TaskSprintManageService","sprintKey","TaskToDoListService","SettingService","settingKey","formData","VariableService","DocumentFolderService","ApiDocService","apiDocKey","ApiDocResponseService","WorkflowService","WorkflowDetailService","workflowKey","isNext","WorkflowRunService","replaceVar","method","MethodHttp","isNoAuth","documentPublicKey"],"sourceRoot":""}
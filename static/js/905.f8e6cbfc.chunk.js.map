{"version":3,"file":"static/js/905.f8e6cbfc.chunk.js","mappings":"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","sources":["components/auth/ForgotPasswordComponent.tsx","components/core/Input.tsx","components/core/MyButton.tsx","components/core/Title.tsx"],"sourcesContent":["import { Form } from \"antd\";\nimport { useState } from \"react\";\nimport { Fn } from \"../../helper/function\";\nimport { AuthService } from \"../../services/authService\";\nimport { MyFormItemInput } from \"../core/Input\";\nimport { MyButton } from \"../core/MyButton\";\nimport MyTitle from \"../core/Title\";\n\nexport default function ForgotPasswordComponent() {\n    const [isLoading, setIsLoading] = useState(false);\n    const [userName, setUserName] = useState('');\n    const [otp, setOtp] = useState('');\n\n    function handleClickBtnSendOTP() {\n        setIsLoading(true);\n        let body = {\n            userName: userName\n        };\n\n        AuthService.RequestForgotPassword(body, (data: any) => {\n            Fn.PrintMsgSuccess(data);\n        }, undefined, () => {\n            setIsLoading(false);\n        })\n    }\n\n    function handleClickBtnResetPassword() {\n        setIsLoading(true);\n        let body = {\n            userName: userName,\n            otp: otp\n        };\n\n        AuthService.VerifyForgotPassword(body, (data: any) => {\n            Fn.PrintMsgSuccess(data);\n        }, undefined, () => {\n            setIsLoading(false);\n        })\n    }\n\n    return (\n        <div className=\"my-box\">\n            <MyTitle value=\"Quên mật khẩu\" />\n            <Form layout=\"vertical\">\n                <MyFormItemInput\n                    label=\"Tên đăng nhập\"\n                    value={userName}\n                    setValue={setUserName} />\n                <MyButton\n                    value=\"Gửi mã OTP\"\n                    isLoading={isLoading}\n                    onClick={handleClickBtnSendOTP} />\n                <MyFormItemInput\n                    label=\"OTP\"\n                    value={otp}\n                    setValue={setOtp} />\n\n                <MyButton\n                    value=\"Đổi mật khẩu\"\n                    isLoading={isLoading}\n                    onClick={handleClickBtnResetPassword} />\n            </Form>\n        </div>\n    )\n}","import { Input, Form, DatePicker, InputNumber, Row, Col, Select } from \"antd\";\nimport moment from \"moment\";\n\n// ************************* Input ****************************\nexport function MyInput(props: any) {\n    function handleChangeInput(value: any) {\n        if (props.setValue !== undefined) {\n            props.setValue(value.target.value);\n        }\n    }\n\n    return (\n        <Input\n            onClick={props.onClick}\n            value={props.value}\n            onChange={handleChangeInput}\n            required={props.required}\n            readOnly={props.readOnly} />\n    );\n}\n\nexport function MyFormItemInput(props: any) {\n    return (\n        <Form.Item label={props.label}>\n            <MyInput\n                onClick={props.onClick}\n                value={props.value}\n                setValue={props.setValue}\n                required={props.required}\n                readOnly={props.readOnly} />\n        </Form.Item>\n    );\n}\n\n// *************************** Datepicker **************************\nexport function MyFormItemDatePicker(props: any) {\n    function handleChangeOption(value: any) {\n        if (props.setValue !== undefined) {\n            props.setValue(value);\n        }\n    }\n\n    function customeFormat(value: any) {\n        return moment(value).format(\"DD/MM/YYYY\");\n    }\n    \n    return (\n        <Form.Item label={props.label}>\n            <DatePicker\n                value={props.value}\n                onChange={handleChangeOption}\n                format={customeFormat} />\n        </Form.Item>\n    );\n}\n\n// *************************** Number **************************\nexport function MyFormItemInputNumber(props: any) {\n    function handleChangeInput(value: any) {\n        if (props.setValue !== undefined) {\n            props.setValue(value);\n        }\n    }\n\n    return (\n        <InputNumber\n            min={props.min}\n            max={props.max}\n            value={props.value}\n            onChange={handleChangeInput} />\n    );\n}\n\nexport function MyFormItemInputNumberColSpan(props: any) {\n    return (\n        <div>\n            <Row className={props.className}>\n                <Col span={props.colSpan1}>\n                    <span>{props.label}</span>\n                </Col>\n                <Col span={props.colSpan2}>\n                    <MyFormItemInputNumber\n                        min={props.min}\n                        max={props.max}\n                        value={props.value}\n                        setValue={props.setValue} />\n                </Col>\n            </Row>\n        </div>\n\n    );\n}\n\n// *************************** Select **************************\nexport function MyFormItemSelect(props: any) {\n    function handleChangeOption(value: any) {\n        if (props.setValue !== undefined) {\n            props.setValue(value);\n        }\n\n        if (props.onChange !== undefined) {\n            props.onChange(value);\n        }\n    }\n\n    return (\n        <Form.Item label={props.label}>\n            <Select\n                options={props.options}\n                value={props.value}\n                onChange={handleChangeOption} />\n        </Form.Item>\n    );\n}\n\n\n// *************************** TextArea **************************\nexport function MyFormItemTextArea(props: any) {\n    function handleChangeOption(value: any) {\n        if (props.setValue !== undefined) {\n            props.setValue(value.target.value);\n        }\n    }\n\n    const { TextArea } = Input;\n    return (\n        <Form.Item label={props.label}>\n            <TextArea\n                value={props.value}\n                onChange={handleChangeOption} />\n        </Form.Item>\n    );\n}\n\n// *************************** Password **************************\nexport function MyFormItemInputPassword(props: any) {\n    function handleChangeOption(value: any) {\n        if (props.onChange !== undefined) {\n            props.onChange(value.target.value);\n        }\n\n        if (props.setValue !== undefined) {\n            props.setValue(value.target.value);\n        }\n    }\n\n    const { Password } = Input;\n    return (\n        <Form.Item label={props.label}>\n            <Password\n                value={props.value}\n                onChange={handleChangeOption} />\n        </Form.Item>\n    );\n}\n\n// *************************** Search **************************\nexport function MyFormItemInputSearch(props: any) {\n    function handleChangeSearch(value: any) {\n        if (props.setValue !== undefined) {\n            props.setValue(value.target.value);\n        }\n    }\n\n    const { Search } = Input;\n    return (\n        <Form.Item label={props.label}>\n            <Search\n                loading={props.loading}\n                onSearch={props.onSearch}\n                value={props.value}\n                onChange={handleChangeSearch} />\n        </Form.Item>\n    );\n}","import { Button } from 'antd';\n// import Loading from './Loading';\nimport './UIStyle.css';\n\nexport function MyButton(props: any) {\n    let htmlType = props.htmlType !== undefined ? props.htmlType : \"button\";\n\n    function onClick() {\n        if (props.onClick !== undefined) {\n            props.onClick();\n        }\n    }\n\n    return (\n        <Button\n            disabled={props.disabled}\n            loading={props.isLoading}\n            htmlType={htmlType}\n            className={\"btn_\" + props.type}\n            onClick={onClick}>\n            {/* <Loading isLoading={props.isLoading} />  */}\n            {props.value}\n        </Button>\n    );\n}","export default function MyTitle(props: any) {\n    return (\n        <h3>{props.value}</h3>\n    );\n}"],"names":["ForgotPasswordComponent","useState","isLoading","setIsLoading","userName","setUserName","otp","setOtp","className","value","layout","label","setValue","onClick","body","AuthService","data","Fn","undefined","MyInput","props","onChange","target","required","readOnly","MyFormItemInput","MyFormItemDatePicker","format","moment","MyFormItemInputNumber","min","max","MyFormItemInputNumberColSpan","span","colSpan1","colSpan2","MyFormItemSelect","options","MyFormItemTextArea","TextArea","Input","MyFormItemInputPassword","Password","MyFormItemInputSearch","Search","loading","onSearch","MyButton","htmlType","disabled","type","MyTitle"],"sourceRoot":""}
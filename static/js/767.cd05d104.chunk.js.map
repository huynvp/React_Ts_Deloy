{"version":3,"file":"static/js/767.cd05d104.chunk.js","mappings":"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","sources":["components/manage/logCli/ChartComponent.tsx","services/adminService.ts"],"sourcesContent":["import { Line } from \"react-chartjs-2\";\r\nimport { MyBox } from \"../../core/MyBox\";\r\n\r\nimport { CategoryScale, Chart, Legend, LinearScale, LineElement, PointElement, Title, Tooltip } from 'chart.js';\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { LogCliService } from \"../../../services/adminService\";\r\nimport { MyButton } from \"../../core/MyButton\";\r\nimport { MyFormItem } from \"../../core/Input\";\r\nimport { Col, Row } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nChart.register(CategoryScale, LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend);\r\n\r\nexport default function ChartComponent() {\r\n    const options = {\r\n        responsive: true,\r\n        plugins: {\r\n            legend: {\r\n                position: 'top' as const,\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: 'Count request chart',\r\n            },\r\n        },\r\n    };\r\n\r\n    const options2 = {\r\n        responsive: true,\r\n        plugins: {\r\n            legend: {\r\n                position: 'top' as const,\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: 'Load time server chart',\r\n            },\r\n        },\r\n    };\r\n\r\n    const [item, setItem] = useState(50);\r\n    const optionSelect = [\r\n        {\r\n            key: 50,\r\n            value: 50,\r\n            label: 50\r\n        },\r\n        {\r\n            key: 100,\r\n            value: 100,\r\n            label: 100\r\n        },\r\n        {\r\n            key: 150,\r\n            value: 150,\r\n            label: 150\r\n        },\r\n        {\r\n            key: 200,\r\n            value: 200,\r\n            label: 200\r\n        },\r\n        {\r\n            key: 250,\r\n            value: 250,\r\n            label: 250\r\n        }\r\n    ]\r\n\r\n    const [data, setData] = useState({\r\n        labels: [],\r\n        datasets: [\r\n            {\r\n                label: 'Load time',\r\n                data: [],\r\n                borderColor: 'rgb(255, 99, 132)',\r\n                backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n\r\n            }\r\n        ],\r\n    });\r\n\r\n    const [dataLoadTime, setDataLoadTime] = useState({\r\n        labels: [],\r\n        datasets: [\r\n            {\r\n                label: 'Load time',\r\n                data: [],\r\n                borderColor: 'rgb(255, 99, 132)',\r\n                backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n\r\n            }\r\n        ],\r\n    });\r\n\r\n\r\n    const loadData = useCallback(() => {\r\n        LogCliService.GetChart(item)\r\n            .then((rs: any) => {\r\n                if (rs.isSuccess) {\r\n                    var label = rs.data.listLabels.map((data: any) => {\r\n                        return moment(data).format(\"DD/MM/YYYY HH:mm:ss\");\r\n                    })\r\n\r\n                    setData({\r\n                        labels: label,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Load time',\r\n                                data: rs.data.listValueCountRequests,\r\n                                borderColor: 'rgb(255, 99, 132)',\r\n                                backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n\r\n                            }\r\n                        ],\r\n                    })\r\n\r\n                    setDataLoadTime({\r\n                        labels: label,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Load time avg',\r\n                                data: rs.data.listValueAvgLoadTimes,\r\n                                borderColor: 'rgb(29, 115, 238)',\r\n                                backgroundColor: 'rgba(29, 115, 238, 0.5)',\r\n\r\n                            },\r\n                            {\r\n                                label: 'Load time max',\r\n                                data: rs.data.listValueMaxLoadTimes,\r\n                                borderColor: 'rgb(255, 195, 0)',\r\n                                backgroundColor: 'rgba(255, 195, 0, 0.5)',\r\n\r\n                            },\r\n                            {\r\n                                label: 'Load time min',\r\n                                data: rs.data.listValueMinLoadTimes,\r\n                                borderColor: 'rgb(255, 99, 132)',\r\n                                backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n\r\n                            }\r\n                        ],\r\n                    })\r\n                }\r\n            })\r\n    }, [item]);\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n        const interval = setInterval(() => {\r\n            loadData();\r\n        }, 5000)\r\n\r\n        return (() => {\r\n            clearInterval(interval);\r\n        })\r\n    }, [loadData]);\r\n\r\n    return (\r\n        <MyBox title=\"Biểu đồ\">\r\n            <Row>\r\n                <Col span={12}>\r\n                    <MyButton value=\"Reload Data\" onClick={loadData} />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <MyFormItem.Select options={optionSelect} value={item} setValue={setItem} />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Line options={options} data={data} />\r\n            <Line options={options2} data={dataLoadTime} />\r\n        </MyBox>\r\n    );\r\n}","import { MyHttp } from \"../helper/myaxios\";\r\nimport { PaginationRequest } from \"../models/baseModel\";\r\n\r\nexport class MailTemplate {\r\n    static GetList(paginationRequest: PaginationRequest) {\r\n        var url = `v2/mails/templates?${paginationRequest.generateQueryString()}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(key: string | undefined) {\r\n        var url = `v2/mails/templates/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Detail(code: string | undefined) {\r\n        var url = `v2/mails/templates/${code}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Add(data: any) {\r\n        var url = `v2/mails/templates`;\r\n        return MyHttp.SendReq(url, \"Post\", data);\r\n    }\r\n\r\n    static Edit(key: string | undefined, data: any) {\r\n        var url = `v2/mails/templates/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", data);\r\n    }\r\n\r\n    static Delete(key: string | undefined, timestamp: string) {\r\n        var url = `v2/mails/templates/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n}\r\n\r\nexport class MailAppService {\r\n    static GetList(request: PaginationRequest) {\r\n        var url = `v2/mails/apps?${request.generateQueryString()}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(code: string | null) {\r\n        var url = `v2/mails/apps/${code}`;\r\n        return MyHttp.SendReq(url, \"get\");\r\n    }\r\n\r\n    static Add(data: any) {\r\n        var url = `v2/mails/apps`;\r\n        return MyHttp.SendReq(url, \"Post\", data);\r\n    }\r\n\r\n    static Edit(key: string | null, data: any) {\r\n        var url = `v2/mails/apps/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", data);\r\n    }\r\n\r\n    static Delete(code: string, timestamp: string) {\r\n        var url = `v2/mails/apps/${code}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n\r\n    static GetTemplate(code: string) {\r\n        var url = `v2/mails/apps/${code}/templates`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static SaveTemplate(code: string, body: any) {\r\n        var url = `v2/mails/apps/${code}/templates`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n}\r\n\r\nexport class StoredManageService {\r\n    static GetList(paginationRequest: PaginationRequest, then?: any, exp?: any, final?: any) {\r\n        // var url = `storedManage?${paginationRequest.generateQueryString()}`;\r\n        // return MyAxios.Get(url, then, exp, final);\r\n    }\r\n\r\n    static GetDetail(key: string | undefined, then?: any, exp?: any, final?: any) {\r\n        // var url = `storedManage/${key}`;\r\n        // return MyAxios.Get(url, then, exp, final);\r\n    }\r\n\r\n    static Add(body: any, then?: any, exp?: any, final?: any) {\r\n        // var url = `storedManage`;\r\n        // return MyAxios.Post(url, body, then, exp, final);\r\n    }\r\n\r\n    static Edit(key: string | undefined, body: any, then?: any, exp?: any, final?: any) {\r\n        // var url = `storedManage/${key}`;\r\n        // return MyAxios.Put(url, body, then, exp, final);\r\n    }\r\n\r\n    static Delete(key: string | null, timestamp: string, then?: any, exp?: any, final?: any) {\r\n        // var url = `storedManage/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        // return MyAxios.Delete(url, then, exp, final);\r\n    }\r\n\r\n    static SearchName(keySearch: string | null, then?: any, exp?: any, final?: any) {\r\n        // var url = `storedManage/queryStored?query=${keySearch}`;\r\n        // return MyAxios.Get(url, then, exp, final);\r\n    }\r\n\r\n    static GetLinkStored(keyOrigin: string | undefined, paginationRequest: PaginationRequest | null, then?: any, exp?: any, final?: any) {\r\n        // var url;\r\n        // if (keyOrigin !== undefined) {\r\n        //     url = `storedManage/${keyOrigin}/linkStored`;\r\n        // } else {\r\n        //     url = `storedManage/linkStored?${paginationRequest?.generateQueryString()}`;\r\n        // }\r\n        // return MyAxios.Get(url, then, exp, final);\r\n    }\r\n\r\n    static GetDetailLinkStored(key: string | null, then?: any, exp?: any, final?: any) {\r\n        // var url = `storedManage/linkStored/${key}`;\r\n        // return MyAxios.Get(url, then, exp, final);\r\n    }\r\n\r\n    static AddLinkStored(body: any, then?: any, exp?: any, final?: any) {\r\n        // var url = `storedManage/linkStored`;\r\n        // return MyAxios.Post(url, body, then, exp, final);\r\n    }\r\n\r\n    static EditLinkStored(key: string | null, body: any, then?: any, exp?: any, final?: any) {\r\n        // var url = `storedManage/linkStored/${key}`;\r\n        // return MyAxios.Put(url, body, then, exp, final);\r\n    }\r\n\r\n    static DeleteLinkStored(key: string | null, timestamp: string, then?: any, exp?: any, final?: any) {\r\n        // var url = `storedManage/linkStored/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        // return MyAxios.Delete(url, then, exp, final);\r\n    }\r\n}\r\n\r\nexport class LogCliService {\r\n    static GetList() {\r\n        var url = `v2/mains/logging`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(fileName: string | null) {\r\n        var url = `v2/mains/logging/${fileName}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetListLogAction(paginationRequest: PaginationRequest) {\r\n        var url = `v2/mains/logging/logActions?${paginationRequest.generateQueryString()}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static ReportDetail() {\r\n        var url = `v2/mains/logging/report`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetChart(item: number) {\r\n        var url = `v2/mains/logging/chart?numberItem=${item}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n}\r\n\r\nexport class VersionManageService {\r\n    static GetList(paginationRequest: PaginationRequest) {\r\n        var url = `v2/mains/versionManages?${paginationRequest.generateQueryString()}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(key: string) {\r\n        var url = `v2/mains/versionManages/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Add(body: any) {\r\n        var url = `v2/mains/versionManages`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Edit(key: string | null, body: any) {\r\n        var url = `v2/mains/versionManages/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static Delete(key: string | null, timestamp: string) {\r\n        var url = `v2/mains/versionManages/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n}\r\n\r\nexport class MenuService {\r\n    static GetList(paginationRequest: PaginationRequest) {\r\n        var url = `v2/mains/menus?${paginationRequest.generateQueryString()}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(key: string) {\r\n        var url = `v2/mains/menus/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Add(body: any) {\r\n        var url = `v2/mains/menus`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Edit(key: string, body: any) {\r\n        var url = `v2/mains/menus/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static Delete(key: string, timestamp: string) {\r\n        var url = `v2/mains/menus/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n\r\n    static Query(query: string) {\r\n        var url = `v2/mains/menus/query?q=${query}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n}\r\n"],"names":["ChartComponent","useState","item","setItem","labels","datasets","label","data","borderColor","backgroundColor","setData","dataLoadTime","setDataLoadTime","loadData","useCallback","LogCliService","then","rs","isSuccess","listLabels","map","moment","format","listValueCountRequests","listValueAvgLoadTimes","listValueMaxLoadTimes","listValueMinLoadTimes","useEffect","interval","setInterval","clearInterval","title","span","value","onClick","options","key","setValue","responsive","plugins","legend","position","display","text","Chart","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","MailTemplate","paginationRequest","url","generateQueryString","MyHttp","code","timestamp","encodeURIComponent","MailAppService","request","body","StoredManageService","exp","final","keySearch","keyOrigin","fileName","VersionManageService","MenuService","query"],"sourceRoot":""}
{"version":3,"file":"static/js/658.69ad6331.chunk.js","mappings":"gJAAe,SAASA,EAAQC,GAC5B,OACI,wBAAKA,EAAMC,OAElB,C,sOCKc,SAASC,EAAoBF,GAExC,OAAoCG,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAkCF,EAAAA,EAAAA,UAAS,MAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAoCJ,EAAAA,EAAAA,UAAS,MAA7C,eAAOK,EAAP,KAAmBC,EAAnB,KACA,GAA0BN,EAAAA,EAAAA,UAAS,MAAnC,eAAOO,EAAP,KAAcC,EAAd,KACA,GAA0BR,EAAAA,EAAAA,UAAS,MAAnC,eAAOS,EAAP,KAAcC,EAAd,KACQC,EAAiBd,EAAjBc,aACFC,GAAWC,EAAAA,EAAAA,cAAY,gBACHC,IAAlBjB,EAAMkB,UAIVJ,GAAa,GACbK,EAAAA,GAAAA,UAAsBnB,EAAMkB,SAAS,SAACE,GAClC,IAAIC,EAAMD,EAAKA,KAAKA,KACpBT,EAASU,EAAIX,OACbG,EAASQ,EAAIT,OACM,OAAfS,EAAIC,SACJf,EAAac,EAAIC,OAAOC,KACxBd,EAAcY,EAAIC,OAAOZ,MAAS,MAA+BW,EAAIC,OAAOV,OAEnF,QAAEK,GAAW,WACVH,GAAa,EAChB,IACJ,GAAE,CAACd,EAAMkB,QAASJ,IAgEnB,OA9DAU,EAAAA,EAAAA,YAAU,WACNT,GACH,GAAE,CAACA,KA6DA,UAAC,IAAD,CACIU,QAASzB,EAAMyB,QACff,WAAyBO,IAAlBjB,EAAMkB,QAAwB,wBAAkB,2BACvDQ,QA9DR,WACI1B,EAAM2B,YAAW,QACKV,IAAlBjB,EAAMkB,SACNlB,EAAM4B,gBAAWX,GAErBN,EAAS,MACTE,EAAS,MACTN,EAAa,MACbE,EAAc,KACjB,EAkDG,WAII,SAACoB,EAAA,EAAD,CACIC,UAAW9B,EAAM8B,aACrB,UAAC,IAAD,CACIC,OAAO,WADX,WAEI,SAAC,KAAD,CACIC,MAAM,QACN/B,MAAOS,EACPuB,SAAUtB,KACd,SAAC,KAAD,CACIqB,MAAM,QACN/B,MAAOW,EACPqB,SAAUpB,KACd,SAACqB,EAAA,EAAD,CACIF,MAAM,SACNG,SAlEhB,SAAsBlC,GAClBD,EAAMc,cAAa,GACnBK,EAAAA,GAAAA,MAAkBlB,GAAO,SAACmB,GACtBf,EAAce,EAAKA,KAAKA,KAC3B,QAAEH,GAAW,WACVjB,EAAMc,cAAa,EACtB,GACJ,EA4DeV,WAAYA,EACZgC,UAAW9B,EACX+B,WAAY7B,EACZ8B,aAAc/B,EACdgC,cAAe9B,EACfqB,UAAW9B,EAAM8B,aACrB,SAACU,EAAA,EAAD,CACIvC,WAAyBgB,IAAlBjB,EAAMkB,QAAwB,mBAAa,sBAClDuB,KAAK,UACLC,QAnEhB,WACI,IAAIC,EAAO,CACPjC,MAAOA,EACPE,MAAOA,EACPN,eAAyBW,IAAdX,GAAyC,KAAdA,GAAkC,OAAdA,EAAqB,KAAOA,GAG1FN,EAAMc,cAAa,QACGG,IAAlBjB,EAAMkB,QAOd,SAAayB,GACTxB,EAAAA,GAAAA,IAAgBwB,GAAM,SAACvB,GACnBwB,EAAAA,GAAAA,gBAAmBxB,GACnBpB,EAAMe,UACT,IAAE,WACCf,EAAMc,cAAa,EACtB,GACJ,CAbO+B,CAAIF,GAeZ,SAAcA,GACVxB,EAAAA,GAAAA,UAAsBnB,EAAMkB,SAAS,SAACE,GAClCuB,EAAOC,EAAAA,GAAAA,aAAgBxB,EAAMuB,GAC7BxB,EAAAA,GAAAA,KAAiBnB,EAAMkB,QAASyB,GAAM,SAACvB,GACnCwB,EAAAA,GAAAA,gBAAmBxB,GACnBpB,EAAMe,UACT,IAAE,WACCf,EAAMc,cAAa,EACtB,GACJ,IAAE,WACCd,EAAMc,cAAa,EACtB,GACJ,CAzBOgC,CAAKH,EAEZ,SA0DJ,CCxHc,SAASI,IACpB,IAAMC,EAA6B,CAC/B,IAAIC,EAAAA,GAAY,CAAEvC,MAAO,MAAOwC,UAAW,MAAO3B,IAAK,MAAO4B,UAAU,IACxE,IAAIF,EAAAA,GAAY,CAAEvC,MAAO,QAASwC,UAAW,QAAS3B,IAAK,UAC3D,IAAI0B,EAAAA,GAAY,CAAEvC,MAAO,QAASwC,UAAW,QAAS3B,IAAK,UAC3D,IAAI0B,EAAAA,GAAY,CAAEvC,MAAO,SAAUwC,UAAW,SAAU3B,IAAK,gBAC7D,IAAI0B,EAAAA,GAAY,CACZvC,MAAO,SAAUa,IAAK,SAAU4B,UAAU,EAAMC,OAAQ,SAAChC,EAAWC,GAChE,OACI,4BACI,SAACmB,EAAA,EAAD,CACIC,KAAK,OACLxC,MAAM,sBACNyC,QAAS,WAsDjC,IAAoBnB,IArDmBF,EAAIE,IAsDvC8B,GAAe,GACfC,EAAW/B,EAtDU,KACL,SAAC,IAAD,CACIb,MAAM,4CACN6C,UAAW,WAsDnC,IAAsBhC,IArDmBF,EAAIE,IAsDzCT,GAAa,GACbK,EAAAA,GAAAA,UAAsBI,GAAK,SAACH,GACxBD,EAAAA,GAAAA,OAAmBI,EAAKqB,EAAAA,GAAAA,aAAgBxB,IAAO,SAACA,GAC5CwB,EAAAA,GAAAA,gBAAmBxB,GACnBL,GACH,IAAE,WACCD,GAAa,EAChB,GACJ,IAAE,WACCA,GAAa,EAChB,GA/DoB,EAJL,UAKI,SAAC0B,EAAA,EAAD,CACIC,KAAK,OACLxC,MAAM,eAIzB,KAIT,GAAgCE,EAAAA,EAAAA,UAAwB,IAAIqD,EAAAA,GAA5D,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA8BvD,EAAAA,EAAAA,UAAuB,IAAIwD,EAAAA,GAAzD,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAwB1D,EAAAA,EAAAA,UAAS,IAAjC,eAAOiB,EAAP,KAAa0C,EAAb,KACA,GAAkC3D,EAAAA,EAAAA,WAAS,GAA3C,eAAO2B,EAAP,KAAkBhB,EAAlB,KACA,GAA8BX,EAAAA,EAAAA,WAAS,GAAvC,eAAOsB,EAAP,KAAgBE,EAAhB,KACA,GAAsCxB,EAAAA,EAAAA,WAAS,GAA/C,eAAO4D,EAAP,KAAoBV,EAApB,KACA,GAA8BlD,EAAAA,EAAAA,eAA6Bc,GAA3D,eAAO+C,EAAP,KAAgBV,EAAhB,KAEMvC,GAAWC,EAAAA,EAAAA,cAAY,WACzBF,GAAa,GACbK,EAAAA,GAAAA,QAAoBsC,EAASQ,WAAYR,EAASS,SAAUN,GAAS,SAACxC,GAClEsC,EAAY,IAAIF,EAAAA,EAAcpC,IAC9B,IAAIC,EAAMD,EAAKA,KAAKA,KAAK+C,UAAUC,KAAI,SAAChD,EAAWiD,GAC/C,MAAO,CACHC,IAAKD,EAAQ,EACb9C,IAAKH,EAAKG,IACVb,MAAOU,EAAKV,MACZE,MAAOQ,EAAKR,MACZU,OAAwB,OAAhBF,EAAKE,OAAkB,eAAiBF,EAAKE,OAAOZ,MAEnE,IACDoD,EAAQzC,EACX,QAAEJ,GAAW,WACVH,GAAa,EAChB,GACJ,GAAE,CAAC2C,EAASQ,WAAYR,EAASS,SAAUN,IA8B5C,OA5BApC,EAAAA,EAAAA,YAAU,WACNT,GACH,GAAE,CAACA,KA2BA,iBAAKwD,UAAU,SAAf,WACI,SAAC,IAAD,CAAStE,MAAM,0BACf,SAACuC,EAAA,EAAD,CACIC,KAAK,UACLxC,MAAM,mBACNyC,QA7BZ,WACIf,GAAW,EACd,KA6BO,SAAC,IAAD,CACI8B,SAAUA,EACVC,YAAaA,EACbV,OAAQA,EACRwB,WAAYpD,EACZqD,QAAS3C,EACTf,SAAUA,EACV6C,QAASA,EACTC,WAAYA,KAEhB,SAAC3D,EAAD,CACIuB,QAASA,EACTE,WAAYA,EACZG,UAAWA,EACXhB,aAAcA,EACdC,SAAUA,KAEd,SAACb,EAAD,CACIgB,QAAS8C,EACTpC,WAAY0B,EACZ7B,QAASsC,EACTpC,WAAY0B,EACZvB,UAAWA,EACXhB,aAAcA,EACdC,SAAUA,MAGzB,C","sources":["components/core/Title.tsx","components/manage/menu/ModifyComponent.tsx","components/manage/menu/IndexComponent.tsx"],"sourcesContent":["export default function MyTitle(props: any) {\n    return (\n        <h3>{props.value}</h3>\n    );\n}","import { Drawer, Form } from \"antd\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Fn } from \"../../../helper/function\";\nimport { MenuService } from \"../../../services/adminService\";\nimport { MyFormItemInput } from \"../../core/Input\";\nimport Loading from \"../../core/Loading\";\nimport { MyButton } from \"../../core/MyButton\";\nimport SearchComponent from \"../../core/SearchComponent\";\n\nexport default function ModifyMenuComponent(props: any) {\n\n    const [dataSearch, setDataSearch] = useState([]);\n    const [parentKey, setParentKey] = useState(null);\n    const [parentName, setParentName] = useState(null);\n    const [title, setTitle] = useState(null);\n    const [route, setRoute] = useState(null);\n    const { setIsLoading } = props;\n    const loadData = useCallback(() => {\n        if (props.keyData === undefined) {\n            return;\n        }\n\n        setIsLoading(true);\n        MenuService.GetDetail(props.keyData, (data: any) => {\n            let row = data.data.data;\n            setTitle(row.title);\n            setRoute(row.route);\n            if (row.parent !== null) {\n                setParentKey(row.parent.key);\n                setParentName(row.parent.title + (\" - \") as string | undefined + row.parent.route);\n            }\n        }, undefined, () => {\n            setIsLoading(false);\n        });\n    }, [props.keyData, setIsLoading]);\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n    function handleOnClose() {\n        props.setVisible(false);\n        if (props.keyData !== undefined) {\n            props.setKeyData(undefined);\n        }\n        setTitle(null);\n        setRoute(null);\n        setParentKey(null);\n        setParentName(null);\n    }\n\n    function handleSearch(value: string) {\n        props.setIsLoading(true);\n        MenuService.Query(value, (data: any) => {\n            setDataSearch(data.data.data);\n        }, undefined, () => {\n            props.setIsLoading(false);\n        });\n    }\n\n    function handleSubmitForm() {\n        var body = {\n            title: title,\n            route: route,\n            parentKey: parentKey === undefined || parentKey === '' || parentKey === null ? null : parentKey\n        };\n\n        props.setIsLoading(true);\n        if (props.keyData === undefined) {\n            add(body);\n        } else {\n            edit(body);\n        }\n    }\n\n    function add(body: any) {\n        MenuService.Add(body, (data: any) => {\n            Fn.PrintMsgSuccess(data);\n            props.loadData();\n        }, () => {\n            props.setIsLoading(false);\n        })\n    }\n\n    function edit(body: any) {\n        MenuService.GetDetail(props.keyData, (data: any) => {\n            body = Fn.GetTimestamp(data, body);\n            MenuService.Edit(props.keyData, body, (data: any) => {\n                Fn.PrintMsgSuccess(data);\n                props.loadData();\n            }, () => {\n                props.setIsLoading(false);\n            })\n        }, () => {\n            props.setIsLoading(false);\n        })\n    }\n\n    return (\n        <Drawer\n            visible={props.visible}\n            title={props.keyData === undefined ? \"Thêm mới menu\" : \"Chỉnh sửa menu\"}\n            onClose={handleOnClose}>\n            <Loading\n                isLoading={props.isLoading} />\n            <Form\n                layout=\"vertical\">\n                <MyFormItemInput\n                    label=\"Title\"\n                    value={title}\n                    setValue={setTitle} />\n                <MyFormItemInput\n                    label=\"Route\"\n                    value={route}\n                    setValue={setRoute} />\n                <SearchComponent\n                    label=\"Parent\"\n                    onSearch={handleSearch}\n                    dataSearch={dataSearch}\n                    resultKey={parentKey}\n                    resultName={parentName}\n                    setResultKey={setParentKey}\n                    setResultName={setParentName}\n                    isLoading={props.isLoading} />\n                <MyButton\n                    value={props.keyData === undefined ? \"Thêm mới\" : \"Chỉnh sửa\"}\n                    type=\"success\"\n                    onClick={handleSubmitForm} />\n            </Form>\n        </Drawer>\n    );\n}","import { Popconfirm } from \"antd\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Fn } from \"../../../helper/function\";\nimport { TableColumn } from \"../../../models/baseModel\";\nimport { MenuService } from \"../../../services/adminService\";\nimport { MyButton } from \"../../core/MyButton\";\nimport { OrderByModel, PageInfoModel } from \"../../core/TableModel\";\nimport TableComponent from \"../../core/TableNewComponent\";\nimport MyTitle from \"../../core/Title\";\nimport ModifyMenuComponent from \"./ModifyComponent\";\n\nexport default function ManageMenuIndexComponent() {\n    const column: Array<TableColumn> = [\n        new TableColumn({ title: \"STT\", dataIndex: \"stt\", key: \"stt\", disabled: true }),\n        new TableColumn({ title: \"Title\", dataIndex: \"title\", key: \"title\" }),\n        new TableColumn({ title: \"Route\", dataIndex: \"route\", key: \"route\" }),\n        new TableColumn({ title: \"Parent\", dataIndex: \"parent\", key: \"parentTitle\" }),\n        new TableColumn({\n            title: \"Action\", key: \"action\", disabled: true, render: (data: any, row: any) => {\n                return (\n                    <div>\n                        <MyButton\n                            type=\"link\"\n                            value=\"Chỉnh sửa\"\n                            onClick={() => {\n                                handleEdit(row.key);\n                            }} />\n                        <Popconfirm\n                            title=\"Bạn có muốn xóa không?\"\n                            onConfirm={() => {\n                                handleDelete(row.key);\n                            }}>\n                            <MyButton\n                                type=\"link\"\n                                value=\"Xóa\" />\n                        </Popconfirm>\n                    </div>\n                )\n            }\n        }),\n    ];\n\n    const [pageInfo, setPageInfo] = useState<PageInfoModel>(new PageInfoModel());\n    const [orderBy, setOrderBy] = useState<OrderByModel>(new OrderByModel());\n    const [data, setData] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [visible, setVisible] = useState(false);\n    const [visibleEdit, setVisibleEdit] = useState(false);\n    const [keyEdit, setKeyEdit] = useState<string | undefined>(undefined);\n\n    const loadData = useCallback(() => {\n        setIsLoading(true);\n        MenuService.GetList(pageInfo.pageNumber, pageInfo.pageSize, orderBy, (data: any) => {\n            setPageInfo(new PageInfoModel(data));\n            var row = data.data.data.pagedData.map((data: any, index: number) => {\n                return {\n                    stt: index + 1,\n                    key: data.key,\n                    title: data.title,\n                    route: data.route,\n                    parent: data.parent === null ? '*** Root ***' : data.parent.title\n                };\n            });\n            setData(row);\n        }, undefined, () => {\n            setIsLoading(false);\n        })\n    }, [pageInfo.pageNumber, pageInfo.pageSize, orderBy]);\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n\n    function handleClickAdd() {\n        setVisible(true);\n    }\n\n    function handleEdit(key: string) {\n        setVisibleEdit(true);\n        setKeyEdit(key);\n    }\n\n    function handleDelete(key: string) {\n        setIsLoading(true);\n        MenuService.GetDetail(key, (data: any) => {\n            MenuService.Delete(key, Fn.GetTimestamp(data), (data: any) => {\n                Fn.PrintMsgSuccess(data);\n                loadData();\n            }, () => {\n                setIsLoading(false);\n            })\n        }, () => {\n            setIsLoading(false);\n        })\n    }\n\n    return (\n        <div className=\"my-box\">\n            <MyTitle value=\"Quản lý menu\" />\n            <MyButton\n                type=\"primary\"\n                value=\"Thêm mới\"\n                onClick={handleClickAdd} />\n\n            <TableComponent\n                pageInfo={pageInfo}\n                setPageInfo={setPageInfo}\n                column={column}\n                dataSource={data}\n                loading={isLoading}\n                loadData={loadData}\n                orderBy={orderBy}\n                setOrderBy={setOrderBy} />\n\n            <ModifyMenuComponent\n                visible={visible}\n                setVisible={setVisible}\n                isLoading={isLoading}\n                setIsLoading={setIsLoading}\n                loadData={loadData} />\n\n            <ModifyMenuComponent\n                keyData={keyEdit}\n                setKeyData={setKeyEdit}\n                visible={visibleEdit}\n                setVisible={setVisibleEdit}\n                isLoading={isLoading}\n                setIsLoading={setIsLoading}\n                loadData={loadData} />\n        </div>\n    );\n}"],"names":["MyTitle","props","value","ModifyMenuComponent","useState","dataSearch","setDataSearch","parentKey","setParentKey","parentName","setParentName","title","setTitle","route","setRoute","setIsLoading","loadData","useCallback","undefined","keyData","MenuService","data","row","parent","key","useEffect","visible","onClose","setVisible","setKeyData","Loading","isLoading","layout","label","setValue","SearchComponent","onSearch","resultKey","resultName","setResultKey","setResultName","MyButton","type","onClick","body","Fn","add","edit","ManageMenuIndexComponent","column","TableColumn","dataIndex","disabled","render","setVisibleEdit","setKeyEdit","onConfirm","PageInfoModel","pageInfo","setPageInfo","OrderByModel","orderBy","setOrderBy","setData","visibleEdit","keyEdit","pageNumber","pageSize","pagedData","map","index","stt","className","dataSource","loading"],"sourceRoot":""}
{"version":3,"file":"static/js/215.969b65e0.chunk.js","mappings":"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","sources":["components/core/TableModel.ts","components/core/TableNewComponent.tsx","components/core/UI_FormatComponent.tsx","components/tool/task/workflow/document/ApiDocComponent.tsx","components/tool/task/workflow/document/ModifyComponent.tsx","components/tool/task/workflow/document/IndexComponent.tsx","models/baseModel.ts"],"sourcesContent":["export class PageInfoModel {\n    pageNumber: number = 1;\n    pageSize: number = 10;\n    total: number = 0;\n    showPagination: boolean = true;\n\n    constructor(data?: any) {\n        if (data === undefined) return;\n        const pageInfo = data.data.pageInfo;\n        this.total = pageInfo.totalCount;\n        this.pageNumber = pageInfo.currentPage;\n        this.pageSize = pageInfo.pageSize;\n    }\n\n    handleChangePage(pageNumber: number, pageSize: number, setPageInfo: any) {\n        this.pageNumber = pageNumber;\n        this.pageSize = pageSize;\n\n        setPageInfo(new PageInfoModel({\n            data: {\n                pageInfo: {\n                    totalCount: this.total,\n                    currentPage: this.pageNumber,\n                    pageSize: this.pageSize\n                }\n            }\n        }));\n    }\n\n    handleChangeOrderBy(orderBy: string, typeOrder: boolean, setPageInfo: any) {\n        setPageInfo(new PageInfoModel({\n            data: {\n                pageInfo: {\n                    totalCount: this.total,\n                    currentPage: this.pageNumber,\n                    pageSize: this.pageSize\n                }\n            }\n        }));\n    }\n\n    setPageSize(pageSize: number, setPageInfo: any) {\n        setPageInfo(new PageInfoModel({\n            data: {\n                pageInfo: {\n                    totalCount: this.total,\n                    currentPage: this.pageNumber,\n                    pageSize: pageSize\n                }\n            }\n        }));\n    }\n}\n\n\nexport class OrderByModel {\n    column: string | undefined = '';\n    esc: boolean | undefined = false;\n    constructor(column?: string, desc?: boolean) {\n        if (column !== undefined) {\n            this.column = column;\n            this.esc = desc;\n        }\n    }\n\n    setColumn(column: string, setOrderBy: any) {\n        setOrderBy(new OrderByModel(column, this.esc))\n    }\n\n    setDesc(desc: boolean, setOrderBy: any) {\n        setOrderBy(new OrderByModel(this.column, desc))\n    }\n\n    genQueryOrderBy() {\n        if (this.column === '') {\n            return '';\n        }\n\n        if (!this.esc) {\n            return this.column + \" desc\";\n        }\n        return this.column;\n    }\n}","import { Col, Pagination, Row, Switch, Table } from \"antd\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { TableColumn } from \"../../models/baseModel\";\nimport { MyFormItem } from \"./Input\";\nimport { Box } from \"./MyBox\";\nimport { MyButton } from \"./MyButton\";\nimport { OrderByModel, PageInfoModel } from \"./TableModel\";\nimport './UIStyle.css';\n// pageInfo={pageInfo}\n// setPageInfo={setPageInfo}\n// column={column}\n// dataSource={data}\n// loading={isLoading}\n// loadData={loadData}\n\n// {title:\"Title\",dataIndex:\"dataIndex\",key:\"key\",render=()=>{})}\nexport default function TableComponent(props: any) {\n    const { column, setOrderBy, setPageInfo, loading, dataSource, scroll, rowClassName, loadData } = props;\n\n    const pageInfo: PageInfoModel = props.pageInfo;\n    const orderBy: OrderByModel = props.orderBy;\n\n    const [columnProps, setColumnProps] = useState([]);\n    const [timer, setTimer] = useState(100);\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setTimer(timer - 1);\n            if (timer === 1) {\n                setTimer(100);\n                loadData();\n            }\n        }, 1000);\n\n        return () => clearInterval(interval);\n    }, [timer, setTimer, loadData]);\n\n    const renderColumn = useCallback(() => {\n        if (column === undefined) {\n            return;\n        }\n\n        setColumnProps(column.map((data: TableColumn, index: number) => {\n            return {\n                key: data.key,\n                className: data.className,\n                width: data.width,\n                title: data.title,\n                dataIndex: data.dataIndex,\n                render: data.render,\n            };\n        }));\n    }, [column]);\n\n    useEffect(() => {\n        renderColumn();\n    }, [renderColumn]);\n\n    function handleChangeTypeOrder(data: any) {\n        orderBy.setDesc(data, setOrderBy);\n    }\n\n    function handleChangeValue(data: any) {\n        orderBy.setColumn(data, setOrderBy);\n    }\n\n    function handleChangePage(page: number, pageSize: number) {\n        pageInfo.handleChangePage(page, pageSize, setPageInfo);\n    }\n\n    function handleClickRefreshData() {\n        loadData();\n    }\n\n    return (\n        <div className=\"my_table\">\n            <Box>\n                <Row gutter={16}>\n                    <Col span={6}>\n                        <MyButton\n                            type=\"secondary\"\n                            value={`Refresh data in ${timer}`}\n                            onClick={handleClickRefreshData} />\n                    </Col>\n                    <Col span={12}>\n                        <MyFormItem.Select\n                            value={orderBy?.column}\n                            onChange={handleChangeValue}\n                            options={column} />\n                    </Col>\n                    <Col span={6}>\n                        <Switch\n                            disabled={orderBy?.column === ''}\n                            checked={orderBy?.esc}\n                            onChange={handleChangeTypeOrder}\n                            checkedChildren=\"Tăng dần\"\n                            unCheckedChildren=\"Giảm dần\" />\n                    </Col>\n                    <Col span={12}>\n                        <Pagination\n                            style={{ display: pageInfo.showPagination ? '' : 'none' }}\n                            current={pageInfo.pageNumber}\n                            disabled={loading}\n                            onChange={handleChangePage}\n                            pageSize={pageInfo.pageSize}\n                            total={pageInfo.total} />\n                    </Col>\n\n                </Row>\n            </Box>\n\n            <Table\n                scroll={{ y: scroll }}\n                rowClassName={rowClassName}\n                style={{ \"paddingTop\": \"10px\" }}\n                bordered\n                loading={loading}\n                pagination={false}\n                dataSource={dataSource}\n                size=\"small\"\n                columns={columnProps}>\n                {/* {renderColumn()} */}\n            </Table>\n        </div>\n    );\n}","import moment from \"moment\";\n\nexport function UIFormatDateVNComponent(props: any) {\n    const { value } = props;\n    let dateStr = value !== undefined && value !== '' && value !== null ?\n        moment(value).format(\"DD/MM/YYYY\") : \"\";\n    return <span>{dateStr}</span>\n}\n\nexport function UIFormatDateTimeVNComponent(props: any) {\n    const { value } = props;\n    let dateStr = value !== undefined && value !== '' && value !== null ?\n        moment(value).format(\"DD/MM/YYYY HH:mm:ss\") : \"\";\n    return <span>{dateStr}</span>\n}","import { useCallback, useEffect, useState } from \"react\";\nimport { Fn } from \"../../../../../helper/function\";\nimport { TableColumn } from \"../../../../../models/baseModel\";\nimport { ApiDocService } from \"../../../../../services/taskService\";\nimport { Box } from \"../../../../core/MyBox\";\nimport { MyButton } from \"../../../../core/MyButton\";\nimport { OrderByModel, PageInfoModel } from \"../../../../core/TableModel\";\nimport TableComponent from \"../../../../core/TableNewComponent\";\nimport \"../../task.css\";\nimport { UIFormatDateTimeVNComponent } from \"../../../../core/UI_FormatComponent\";\nimport { Link, useHref, useLocation, useParams } from \"react-router-dom\";\n\nexport default function ApiDocComponent(props: any) {\n    const { isLoading, setIsLoading } = props;\n    const [data, setData] = useState([]);\n\n    const [pageInfo, setPageInfo] = useState<PageInfoModel>(new PageInfoModel());\n    const [orderBy, setOrderBy] = useState<OrderByModel>(new OrderByModel());\n    const column: any = [\n        new TableColumn({\n            title: \"STT\", key: \"stt\", render: (data: any, row: any, index: any) =>\n                Fn.RenderSTT(data, row, index, pageInfo)\n        }),\n        new TableColumn({\n            title: \"Method\", key: \"method\", render: (data: number) => {\n                var method = \"\";\n                switch (data) {\n                    case 1:\n                        method = \"Get\";\n                        break;\n                    case 2:\n                        method = \"Post\";\n                        break;\n                    case 3:\n                        method = \"Put\";\n                        break;\n                    case 4:\n                        method = \"Delete\";\n                        break;\n                    default:\n                        break;\n                }\n                return <span>{method}</span>\n            }\n        }),\n        new TableColumn({\n            title: \"Tên\", key: \"name\", render: (data: string, row: any) => {\n                return <Link to={`/tools/tasks/projects/${props.projectKey}/codeManage/document/${props.folderKey}/apis/${row.key}`}>{data}</Link>\n            }\n        }),\n        new TableColumn({\n            title: \"Url\", key: \"url\", render: (data: string) => {\n                return (\n                    <span className=\"textWrap\">{data}</span>\n                )\n            }\n        }),\n        new TableColumn({\n            title: \"Ngày tạo\", key: \"createdAt\", render: (data: string) => {\n                return <UIFormatDateTimeVNComponent value={data} />\n            }\n        }),\n        new TableColumn({\n            title: \"Ngày cập nhật cuối\", key: \"updatedAt\", render: (data: string) => {\n                return <UIFormatDateTimeVNComponent value={data} />\n            }\n        })\n    ];\n\n    const loadData = useCallback(() => {\n        if (props.folderKey !== undefined && props.folderKey !== null) {\n            setIsLoading(true);\n            ApiDocService.GetList(props.projectKey, props.folderKey, (data: any) => {\n                setData(data.data.data.pagedData);\n            }, undefined, () => {\n                setIsLoading(false);\n            })\n        }\n    }, [props.projectKey, props.folderKey, setIsLoading]);\n\n    useEffect(() => {\n        loadData();\n    }, [loadData])\n\n    return (\n        <Box>\n            <Link to={`/tools/tasks/projects/${props.projectKey}/codeManage/document/${props.folderKey}/apis/add`}>\n                <MyButton\n                    type=\"primary\"\n                    value=\"Thêm API mới\" />\n            </Link>\n\n            <TableComponent\n                pageInfo={pageInfo}\n                setPageInfo={setPageInfo}\n                orderBy={orderBy}\n                setOrderBy={setOrderBy}\n                column={column}\n                dataSource={data}\n                loading={isLoading}\n                loadData={loadData} />\n        </Box>\n    );\n}","import { Drawer, Form } from \"antd\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { Fn } from \"../../../../../helper/function\";\nimport { DocumentService } from \"../../../../../services/taskService\";\nimport { MyFormItem } from \"../../../../core/Input\";\nimport { MyButton } from \"../../../../core/MyButton\";\nimport HeaderComponent from \"./HeaderComponent\";\n\nexport default function ModifyComponent(props: any) {\n    const [item, setItem] = useState([]);\n    const [name, setName] = useState('');\n\n    const { projectKey, keyEdit, setKeyEdit, visible, setVisible, isLoading, setIsLoading, loadData } = props;\n\n    const loadDataDetail = useCallback(() => {\n        if (keyEdit !== undefined) {\n            setIsLoading(true);\n            DocumentService.GetDetail(projectKey, keyEdit)\n                .then((rs: any) => {\n                    if (rs.isSuccess) {\n                        setName(rs.data.name);\n                        setItem(rs.data.headers);\n                    }\n                })\n                .finally(() => setIsLoading(false));\n        }\n    }, [projectKey, keyEdit, setIsLoading]);\n\n    useEffect(() => {\n        loadDataDetail();\n    }, [loadDataDetail])\n\n    function onClose() {\n        setVisible(false);\n        if (setKeyEdit !== undefined) {\n            setKeyEdit(undefined);\n        }\n    }\n\n    function filterArray() {\n        var t = item;\n\n        t = t.filter((obj: any) => {\n            return (obj !== undefined && obj.key !== '');\n        })\n        return t;\n    }\n\n    function handleSubmitForm() {\n        let headers = filterArray();\n        let body = {\n            name: name,\n            headers: headers\n        }\n\n        setIsLoading(true);\n        if (keyEdit !== undefined) {\n            edit(body);\n        } else {\n            add(body);\n        }\n    }\n\n    function add(body: any) {\n        DocumentService.Add(projectKey, body)\n            .then((rs: any) => {\n                if (rs.isSuccess) {\n                    Fn.PrintMsgSuccessV2(rs);\n                    loadData();\n                }\n            })\n    }\n\n    function edit(body: any) {\n        DocumentService.GetDetail(projectKey, keyEdit)\n            .then((rs: any) => {\n                if (rs.isSuccess) {\n                    body = Fn.GetTimestampV2(rs, body);\n                    DocumentService.Edit(projectKey, keyEdit, body)\n                        .then((rs: any) => {\n                            if (rs.isSuccess) {\n                                Fn.PrintMsgSuccessV2(rs);\n                                loadData();\n                            } else setIsLoading(false);\n                        })\n                } else setIsLoading(false);\n            })\n    }\n\n    function deleteData() {\n        setIsLoading(true);\n        DocumentService.GetDetail(projectKey, keyEdit)\n            .then((rs: any) => {\n                if (rs.isSuccess) {\n                    DocumentService.Delete(projectKey, keyEdit, Fn.GetTimestampV2(rs))\n                        .then((rs: any) => {\n                            if (rs.isSuccess) {\n                                Fn.PrintMsgSuccessV2(rs);\n                                loadData();\n                                onClose();\n                            } else setIsLoading(false);\n                        })\n                } else setIsLoading(false);\n            })\n    }\n\n    function handleClickDelete() {\n        Swal.fire(\"Xác nhận xóa?\", \"Bạn có muốn xóa dữ liệu?\", \"question\")\n            .then((isConfirmed) => {\n                if (isConfirmed.isConfirmed) {\n                    deleteData();\n                }\n            });\n    }\n\n    return (\n        <Drawer\n            title={keyEdit !== undefined ? \"Chỉnh sửa\" : \"Thêm\"}\n            open={visible}\n            onClose={onClose}>\n            <Form\n                layout=\"vertical\"\n                onSubmitCapture={handleSubmitForm}>\n                <MyFormItem.Input\n                    label=\"Tên\"\n                    value={name}\n                    setValue={setName} />\n\n                <HeaderComponent\n                    data={item}\n                    setData={setItem} />\n\n                <MyButton\n                    type=\"success\"\n                    isLoading={isLoading}\n                    htmlType=\"submit\"\n                    value={keyEdit !== undefined ? \"Chỉnh sửa\" : \"Thêm\"} />\n\n                <MyButton\n                    type=\"danger\"\n                    onClick={handleClickDelete}\n                    isLoading={isLoading}\n                    value=\"Xóa\" />\n            </Form>\n        </Drawer>\n    )\n}","import { Col, Row } from \"antd\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { PaginationRequest } from \"../../../../../models/baseModel\";\nimport { DocumentService } from \"../../../../../services/taskService\";\nimport { Box, MyBox } from \"../../../../core/MyBox\";\nimport { MyButton } from \"../../../../core/MyButton\";\nimport { OrderByModel } from \"../../../../core/TableModel\";\nimport \"../../task.css\";\nimport ApiDocComponent from \"./ApiDocComponent\";\nimport ModifyComponent from \"./ModifyComponent\";\n\nexport default function IndexComponent() {\n    const search = useLocation().search;\n    const folderKey = new URLSearchParams(search).get('folder');\n    const [folderChoose, setFolderChoose] = useState(folderKey);\n\n    const projectKey = useParams().key;\n    const [data, setData] = useState([]);\n    const [visible, setVisible] = useState(false);\n\n    const [visibleEdit, setVisibleEdit] = useState(false);\n    const [keyEdit, setKeyEdit] = useState<string | undefined>(undefined);\n\n    const [isLoading, setIsLoading] = useState(false);\n\n    const loadData = useCallback(() => {\n        setIsLoading(true);\n        let pagination = new PaginationRequest(1, 100000, new OrderByModel());\n        DocumentService.GetList(projectKey, pagination)\n            .then((rs: any) => {\n                if (rs.isSuccess) {\n                    setData(rs.data.pagedData);\n                }\n            })\n            .finally(() => setIsLoading(false));\n    }, [projectKey]);\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n    function renderData() {\n        return data.map((data: any, index: number) => {\n            return (\n                <li key={index} className=\"item-folder\">\n                    <MyButton\n                        className={data.key === folderChoose ? \"folder-selected\" : \"\"}\n                        onDoubleClick={() => {\n                            handleDoubleClickDetail(data.key)\n                        }}\n                        onClick={() => {\n                            handleClickDetailFolder(data.key)\n                        }}\n                        value={data.name} />\n                </li>\n            );\n        })\n    }\n\n    function handleClickDetailFolder(key: string) {\n        setFolderChoose(key);\n    }\n\n    function handleDoubleClickDetail(key: string) {\n        setVisibleEdit(true);\n        setKeyEdit(key);\n    }\n    function handleClickAddFolder() {\n        setVisible(true);\n    }\n\n    return (\n        <MyBox\n            title=\"Document API\"\n            isLoading={isLoading}>\n            <Row gutter={6}>\n                <Col span={4}>\n                    <Box>\n                        <MyButton type=\"primary\" onClick={handleClickAddFolder} value=\"Thêm thư mục\" />\n                        <ul>\n                            {renderData()}\n                        </ul>\n                    </Box>\n                </Col>\n                <Col span={20}>\n                    <ApiDocComponent\n                        folderKey={folderChoose}\n                        projectKey={projectKey}\n                        isLoading={isLoading}\n                        setIsLoading={setIsLoading} />\n                </Col>\n            </Row>\n\n            <ModifyComponent\n                visible={visible}\n                setVisible={setVisible}\n                projectKey={projectKey}\n                loadData={loadData}\n                isLoading={isLoading}\n                setIsLoading={setIsLoading} />\n\n            <ModifyComponent\n                visible={visibleEdit}\n                setVisible={setVisibleEdit}\n                keyEdit={keyEdit}\n                setKeyEdit={setKeyEdit}\n                projectKey={projectKey}\n                loadData={loadData}\n                isLoading={isLoading}\n                setIsLoading={setIsLoading} />\n        </MyBox>\n    );\n}","import { OrderByModel } from \"../components/core/TableModel\";\n\nexport class ResponseDataModel<T> {\n    data: T | null;\n    message: string | undefined;\n    statusCode: number | undefined;\n\n    constructor(response: any) {\n        let data = response.data;\n        this.data = data.data;\n        this.message = data.message;\n        this.statusCode = data.statusCode;\n    }\n}\n\nexport class TableColumn {\n    title: string\n    dataIndex: string\n    key: string\n    render: any\n    className: string | undefined\n    width: number | undefined\n\n    label: string | undefined\n    value: string | undefined\n    disabled: boolean | undefined = false;\n\n    constructor(data?: any) {\n        this.title = data.title;\n        this.key = data.key;\n\n        if(data.dataIndex === undefined) {\n            this.dataIndex = data.key;\n        } else {\n            this.dataIndex = data.dataIndex;\n        }\n\n        this.render = data.render;\n        this.className = data.className;\n        this.width = data.width;\n        this.label = data.title;\n        this.value = data.key;\n\n        if(this.key === \"stt\" || this.key === \"action\") {\n            this.disabled = true;\n        }\n\n        if (data.disabled !== undefined) {\n            this.disabled = data.disabled;\n        }\n    }\n}\n\nexport class PaginationRequest {\n    pageNumber: number = 1;\n    pageSize: number = 10;\n    orderBy: OrderByModel\n\n    constructor(pageNumber: number, pageSize: number, orderBy: OrderByModel) {\n        this.pageNumber = pageNumber;\n        this.pageSize = pageSize;\n        this.orderBy = orderBy;\n    }\n\n    generateQueryString(): string {\n        // console.log(this);\n        if(this === undefined) return \"\";\n        \n        return `pageNumber=${this.pageNumber}&pageSize=${this.pageSize}&orderBy=${this.orderBy.genQueryOrderBy()}`;\n    }\n}"],"names":["PageInfoModel","data","pageNumber","pageSize","total","showPagination","undefined","pageInfo","this","totalCount","currentPage","setPageInfo","orderBy","typeOrder","OrderByModel","column","desc","esc","setOrderBy","TableComponent","props","loading","dataSource","scroll","rowClassName","loadData","useState","columnProps","setColumnProps","timer","setTimer","useEffect","interval","setInterval","clearInterval","renderColumn","useCallback","map","index","key","className","width","title","dataIndex","render","gutter","span","type","value","onClick","onChange","setColumn","options","disabled","checked","setDesc","checkedChildren","unCheckedChildren","style","display","current","page","handleChangePage","y","bordered","pagination","size","columns","UIFormatDateVNComponent","dateStr","moment","format","UIFormatDateTimeVNComponent","ApiDocComponent","isLoading","setIsLoading","setData","TableColumn","row","Fn","method","to","projectKey","folderKey","ApiDocService","pagedData","MyButton","ModifyComponent","item","setItem","name","setName","keyEdit","setKeyEdit","visible","setVisible","loadDataDetail","DocumentService","then","rs","isSuccess","headers","finally","onClose","open","layout","onSubmitCapture","filter","obj","body","edit","add","label","setValue","HeaderComponent","htmlType","Swal","isConfirmed","IndexComponent","search","useLocation","URLSearchParams","get","folderChoose","setFolderChoose","useParams","visibleEdit","setVisibleEdit","PaginationRequest","MyBox","onDoubleClick","genQueryOrderBy"],"sourceRoot":""}
{"version":3,"file":"static/js/905.78b7a1fe.chunk.js","mappings":"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","sources":["components/auth/ForgotPasswordComponent.tsx","components/core/Input.tsx"],"sourcesContent":["import { Form } from \"antd\";\nimport { useState } from \"react\";\nimport { Fn } from \"../../helper/function\";\nimport { AuthService } from \"../../services/authService\";\nimport { MyFormItem } from \"../core/Input\";\nimport { MyBox } from \"../core/MyBox\";\nimport { MyButton } from \"../core/MyButton\";\n\nexport default function ForgotPasswordComponent() {\n    const [isLoading, setIsLoading] = useState(false);\n    const [userName, setUserName] = useState('');\n    const [otp, setOtp] = useState('');\n\n    function handleClickBtnSendOTP() {\n        setIsLoading(true);\n        let body = {\n            userName: userName\n        };\n\n        AuthService.RequestForgotPassword(body, (data: any) => {\n            Fn.PrintMsgSuccess(data);\n        }, undefined, () => {\n            setIsLoading(false);\n        })\n    }\n\n    function handleClickBtnResetPassword() {\n        setIsLoading(true);\n        let body = {\n            userName: userName,\n            otp: otp\n        };\n\n        AuthService.VerifyForgotPassword(body, (data: any) => {\n            Fn.PrintMsgSuccess(data);\n        }, undefined, () => {\n            setIsLoading(false);\n        })\n    }\n\n    return (\n        <MyBox title=\"Quên mật khẩu\" >\n            <Form layout=\"vertical\">\n                <MyFormItem.Input\n                    label=\"Tên đăng nhập\"\n                    value={userName}\n                    setValue={setUserName} />\n                <MyButton\n                    value=\"Gửi mã OTP\"\n                    isLoading={isLoading}\n                    onClick={handleClickBtnSendOTP} />\n                <MyFormItem.Password\n                    label=\"OTP\"\n                    value={otp}\n                    setValue={setOtp} />\n\n                <MyButton\n                    value=\"Đổi mật khẩu\"\n                    isLoading={isLoading}\n                    onClick={handleClickBtnResetPassword} />\n            </Form>\n        </MyBox>\n    )\n}","import { Input, Form, DatePicker, InputNumber, Row, Col, Select, Switch } from \"antd\";\nimport moment from \"moment\";\n\nexport class MyInput {\n    // ************************* Input ****************************\n    static Input(props: any) {\n        function handleChangeInput(value: any) {\n            if (props.onChange !== undefined) {\n                props.onChange(value.target.value);\n            }\n\n            if (props.setValue !== undefined) {\n                props.setValue(value.target.value);\n            }            \n        }\n\n        return (\n            <Input\n                onClick={props.onClick}\n                value={props.value}\n                onChange={handleChangeInput}\n                required={props.required}\n                readOnly={props.readOnly} />\n        );\n    }\n}\n\nexport class MyFormItem {\n    static Input(props: any) {\n        return (\n            <Form.Item label={props.label}>\n                <MyInput.Input\n                    onClick={props.onClick}\n                    onChange={props.onChange}\n                    value={props.value}\n                    setValue={props.setValue}\n                    required={props.required}\n                    readOnly={props.readOnly} />\n            </Form.Item>\n        );\n    }\n\n    // *************************** Datepicker **************************\n    static DatePicker(props: any) {\n        function handleChangeOption(value: any) {\n            if (props.setValue !== undefined) {\n                props.setValue(value);\n            }\n        }\n\n        function customeFormat(value: any) {\n            return moment(value).format(\"DD/MM/YYYY\");\n        }\n\n        return (\n            <Form.Item label={props.label}>\n                <DatePicker\n                    value={props.value}\n                    onChange={handleChangeOption}\n                    format={customeFormat}\n                    inputReadOnly={props.readOnly} />\n            </Form.Item>\n        );\n    }\n\n    // *************************** Datetimepicker **************************\n    static DateTimePicker(props: any) {\n        function handleChangeOption(value: any) {\n            if (props.setValue !== undefined) {\n                props.setValue(value);\n            }\n        }\n\n        function customeFormat(value: any) {\n            return moment(value).format(\"DD/MM/YYYY HH:mm:ss\");\n        }\n\n        return (\n            <Form.Item label={props.label}>\n                <DatePicker\n                    showTime\n                    value={props.value}\n                    onChange={handleChangeOption}\n                    format={customeFormat}\n                    disabled={props.readOnly} />\n            </Form.Item>\n        );\n    }\n\n    // *************************** Number **************************\n    static Number(props: any) {\n        function handleChangeInput(value: any) {\n            if (props.setValue !== undefined) {\n                props.setValue(value);\n            }\n        }\n\n        return (\n            <InputNumber\n                min={props.min}\n                max={props.max}\n                value={props.value}\n                onChange={handleChangeInput} />\n        );\n    }\n\n    static NumberColSpan(props: any) {        \n        return (\n            <div>\n                <Row className={props.className}>\n                    <Col span={props.colSpan1}>\n                        <span>{props.label}</span>\n                    </Col>\n                    <Col span={props.colSpan2}>\n                        <MyFormItem.Number\n                            min={props.min}\n                            max={props.max}\n                            value={props.value}\n                            setValue={props.setValue} />\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n\n    // *************************** Select **************************\n    static Select(props: any) {\n        function handleChangeOption(value: any) {\n            if (props.setValue !== undefined) {\n                props.setValue(value);\n            }\n\n            if (props.onChange !== undefined) {\n                props.onChange(value);\n            }\n        }\n\n        return (\n            <Form.Item label={props.label}>\n                <Select\n                    options={props.options}\n                    value={props.value}\n                    onChange={handleChangeOption} />\n            </Form.Item>\n        );\n    }\n\n\n    // *************************** TextArea **************************\n    static TextArea(props: any) {\n        function handleChangeOption(value: any) {\n            if (props.setValue !== undefined) {\n                props.setValue(value.target.value);\n            }\n        }\n\n        const { TextArea } = Input;\n        return (\n            <Form.Item label={props.label}>\n                <TextArea\n                    value={props.value}\n                    onChange={handleChangeOption} />\n            </Form.Item>\n        );\n    }\n\n    // *************************** Password **************************\n    static Password(props: any) {\n        function handleChangeOption(value: any) {\n            if (props.onChange !== undefined) {\n                props.onChange(value.target.value);\n            }\n\n            if (props.setValue !== undefined) {\n                props.setValue(value.target.value);\n            }\n        }\n\n        const { Password } = Input;\n        return (\n            <Form.Item label={props.label}>\n                <Password\n                    value={props.value}\n                    onChange={handleChangeOption} />\n            </Form.Item>\n        );\n    }\n\n    // *************************** Search **************************\n    static Search(props: any) {\n        function handleChangeSearch(value: any) {\n            if (props.setValue !== undefined) {\n                props.setValue(value.target.value);\n            }\n        }\n\n        const { Search } = Input;\n        return (\n            <Form.Item label={props.label}>\n                <Search\n                    loading={props.loading}\n                    onSearch={props.onSearch}\n                    value={props.value}\n                    onChange={handleChangeSearch} />\n            </Form.Item>\n        );\n    }\n\n    // *************************** Swith **************************\n    static Switch(props: any) {\n        function handleChangeSearch(value: any) {\n            if (props.setValue !== undefined) {\n                props.setValue(value);\n            }\n        }\n\n        return (\n            <Form.Item label={props.label}>\n                <Switch\n                    loading={props.loading}\n                    checked={props.value}\n                    onChange={handleChangeSearch} />\n            </Form.Item>\n        );\n    }\n\n     // *************************** Swith **************************\n     static File(props: any) {\n        function handleChange(value: any) {\n            if (props.setValue !== undefined) {\n                props.setValue(value.target.files[0]);\n            }\n        }\n\n        return (\n            <Form.Item label={props.label}>\n                <Input\n                    type=\"file\"\n                    // value={props.value}\n                    onChange={handleChange}/>\n            </Form.Item>\n        );\n    }\n}"],"names":["ForgotPasswordComponent","useState","isLoading","setIsLoading","userName","setUserName","otp","setOtp","title","layout","label","value","setValue","onClick","body","AuthService","data","Fn","undefined","MyInput","props","onChange","target","required","readOnly","MyFormItem","Input","format","moment","inputReadOnly","showTime","disabled","min","max","className","span","colSpan1","colSpan2","Number","options","TextArea","Password","Search","loading","onSearch","checked","type","files"],"sourceRoot":""}
{"version":3,"file":"static/js/1905.35700d1e.chunk.js","mappings":"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","sources":["components/auth/ForgotPasswordComponent.tsx","components/core/Input.tsx","helper/function.ts"],"sourcesContent":["import { Form } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Fn } from \"../../helper/function\";\r\nimport { AuthService } from \"../../services/authService\";\r\nimport { MyFormItem } from \"../core/Input\";\r\nimport { MyBox } from \"../core/MyBox\";\r\nimport { MyButton } from \"../core/MyButton\";\r\n\r\nexport default function ForgotPasswordComponent() {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [userName, setUserName] = useState('');\r\n    const [otp, setOtp] = useState('');\r\n\r\n    function handleClickBtnSendOTP() {\r\n        setIsLoading(true);\r\n        let body = {\r\n            email: userName\r\n        };\r\n\r\n        AuthService.RequestForgotPassword(body)\r\n            .then((rs: any) => {\r\n                if (rs.isSuccess) {\r\n                    Fn.PrintMsgSuccessV2(rs);\r\n                }\r\n            })\r\n            .finally(() => setIsLoading(false))\r\n    }\r\n\r\n    function handleClickBtnResetPassword() {\r\n        setIsLoading(true);\r\n        let body = {\r\n            email: userName,\r\n            otp: otp\r\n        };\r\n\r\n        AuthService.VerifyForgotPassword(body)\r\n            .then((rs: any) => {\r\n                if (rs.isSuccess) {\r\n                    Fn.PrintMsgSuccessV2(rs);\r\n                }\r\n            })\r\n            .finally(() => setIsLoading(false))\r\n    }\r\n\r\n    return (\r\n        <MyBox title=\"Quên mật khẩu\" >\r\n            <Form layout=\"vertical\">\r\n                <MyFormItem.Input\r\n                    label=\"Tên đăng nhập\"\r\n                    value={userName}\r\n                    setValue={setUserName} />\r\n                <MyButton\r\n                    value=\"Gửi mã OTP\"\r\n                    isLoading={isLoading}\r\n                    onClick={handleClickBtnSendOTP} />\r\n                <MyFormItem.Password\r\n                    label=\"OTP\"\r\n                    value={otp}\r\n                    setValue={setOtp} />\r\n\r\n                <p>Nhấn vào <Link to=\"login\">đây</Link> để trở về trang đăng nhập</p>\r\n                <MyButton\r\n                    value=\"Đổi mật khẩu\"\r\n                    isLoading={isLoading}\r\n                    onClick={handleClickBtnResetPassword} />\r\n            </Form>\r\n        </MyBox>\r\n    )\r\n}","import { Input, Form, DatePicker, InputNumber, Row, Col, Select, Switch, Checkbox } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nexport class MyInput {\r\n    // ************************* Input ****************************\r\n    static Input(props: any) {\r\n        function handleChangeInput(value: any) {\r\n            if (props.onChange !== undefined) {\r\n                props.onChange(value.target.value);\r\n            }\r\n\r\n            if (props.setValue !== undefined) {\r\n                props.setValue(value.target.value);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Input\r\n                onClick={props.onClick}\r\n                value={props.value}\r\n                onChange={handleChangeInput}\r\n                required={props.required}\r\n                readOnly={props.readOnly} />\r\n        );\r\n    }\r\n}\r\n\r\nexport class MyFormItem {\r\n    static Input(props: any) {\r\n        return (\r\n            <Form.Item label={props.label}>\r\n                <MyInput.Input\r\n                    onClick={props.onClick}\r\n                    onChange={props.onChange}\r\n                    value={props.value}\r\n                    setValue={props.setValue}\r\n                    required={props.required}\r\n                    readOnly={props.readOnly} />\r\n            </Form.Item>\r\n        );\r\n    }\r\n\r\n    // *************************** Datepicker **************************\r\n    static DatePicker(props: any) {\r\n        function handleChangeOption(value: any) {\r\n            if (props.setValue !== undefined) {\r\n                props.setValue(value);\r\n            }\r\n        }\r\n\r\n        function customeFormat(value: any) {\r\n            return moment(value).format(\"DD/MM/YYYY\");\r\n        }\r\n\r\n        return (\r\n            <Form.Item label={props.label}>\r\n                <DatePicker\r\n                    value={props.value}\r\n                    onChange={handleChangeOption}\r\n                    format={customeFormat}\r\n                    inputReadOnly={props.readOnly} />\r\n            </Form.Item>\r\n        );\r\n    }\r\n\r\n    // *************************** Datetimepicker **************************\r\n    static DateTimePicker(props: any) {\r\n        function handleChangeOption(value: any) {\r\n            if (props.setValue !== undefined) {\r\n                props.setValue(value);\r\n            }\r\n        }\r\n\r\n        function customeFormat(value: any) {\r\n            return moment(value).format(\"DD/MM/YYYY HH:mm:ss\");\r\n        }\r\n\r\n        return (\r\n            <Form.Item label={props.label}>\r\n                <DatePicker\r\n                    showTime\r\n                    value={props.value}\r\n                    onChange={handleChangeOption}\r\n                    format={customeFormat}\r\n                    disabled={props.readOnly} />\r\n            </Form.Item>\r\n        );\r\n    }\r\n\r\n    // *************************** Number **************************\r\n    static Number(props: any) {\r\n        function handleChangeInput(value: any) {\r\n            if (props.setValue !== undefined) {\r\n                props.setValue(value);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Form.Item label={props.label}>\r\n                <InputNumber\r\n                    min={props.min}\r\n                    max={props.max}\r\n                    value={props.value}\r\n                    onChange={handleChangeInput} />\r\n            </Form.Item>\r\n        );\r\n    }\r\n\r\n    static NumberColSpan(props: any) {\r\n        return (\r\n            <div>\r\n                <Row className={props.className}>\r\n                    <Col span={props.colSpan1}>\r\n                        <span>{props.label}</span>\r\n                    </Col>\r\n                    <Col span={props.colSpan2}>\r\n                        <MyFormItem.Number\r\n                            min={props.min}\r\n                            max={props.max}\r\n                            value={props.value}\r\n                            setValue={props.setValue} />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // *************************** Select **************************\r\n    static Select(props: any) {\r\n        function handleChangeOption(value: any) {\r\n            if (props.setValue !== undefined) {\r\n                props.setValue(value);\r\n            }\r\n\r\n            if (props.onChange !== undefined) {\r\n                props.onChange(value);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Form.Item label={props.label}>\r\n                <Select\r\n                    options={props.options}\r\n                    value={props.value}\r\n                    onChange={handleChangeOption} />\r\n            </Form.Item>\r\n        );\r\n    }\r\n\r\n\r\n    // *************************** TextArea **************************\r\n    static TextArea(props: any) {\r\n        function handleChangeOption(value: any) {\r\n            if (props.setValue !== undefined) {\r\n                props.setValue(value.target.value);\r\n            }\r\n        }\r\n\r\n        const { TextArea } = Input;\r\n        return (\r\n            <Form.Item label={props.label}>\r\n                <TextArea\r\n                    value={props.value}\r\n                    onChange={handleChangeOption} />\r\n            </Form.Item>\r\n        );\r\n    }\r\n\r\n    // *************************** Password **************************\r\n    static Password(props: any) {\r\n        function handleChangeOption(value: any) {\r\n            if (props.onChange !== undefined) {\r\n                props.onChange(value.target.value);\r\n            }\r\n\r\n            if (props.setValue !== undefined) {\r\n                props.setValue(value.target.value);\r\n            }\r\n        }\r\n\r\n        const { Password } = Input;\r\n        return (\r\n            <Form.Item label={props.label}>\r\n                <Password\r\n                    value={props.value}\r\n                    onChange={handleChangeOption} />\r\n            </Form.Item>\r\n        );\r\n    }\r\n\r\n    // *************************** Search **************************\r\n    static Search(props: any) {\r\n        function handleChangeSearch(value: any) {\r\n            if (props.setValue !== undefined) {\r\n                props.setValue(value.target.value);\r\n            }\r\n        }\r\n\r\n        const { Search } = Input;\r\n        return (\r\n            <Form.Item label={props.label}>\r\n                <Search\r\n                    loading={props.loading}\r\n                    onSearch={props.onSearch}\r\n                    value={props.value}\r\n                    onChange={handleChangeSearch} />\r\n            </Form.Item>\r\n        );\r\n    }\r\n\r\n    // *************************** Swith **************************\r\n    static Switch(props: any) {\r\n        function handleChangeSearch(value: any) {\r\n            if (props.setValue !== undefined) {\r\n                if (props.readOnly !== true) {\r\n                    props.setValue(value);\r\n                }\r\n            }\r\n\r\n            if (props.onChange !== undefined) {\r\n                props.onChange(value);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Form.Item label={props.label}>\r\n                <Switch\r\n                    loading={props.loading}\r\n                    checked={props.value}\r\n                    onChange={handleChangeSearch} />\r\n            </Form.Item>\r\n        );\r\n    }\r\n\r\n    // *************************** Swith **************************\r\n    static Checkbox(props: any) {\r\n        function handleChangeSearch(value: any) {\r\n            if (props.setValue !== undefined) {\r\n                if (props.readOnly !== true) {\r\n                    props.setValue(value.target.checked);\r\n                }\r\n            }\r\n\r\n            if (props.onChange !== undefined) {\r\n                props.onChange(value.target.checked);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Checkbox\r\n                checked={props.value}\r\n                onChange={handleChangeSearch}>{props.label}</Checkbox>\r\n        );\r\n    }\r\n\r\n    // *************************** Swith **************************\r\n    static File(props: any) {\r\n        function handleChange(value: any) {\r\n            if (props.setValue !== undefined) {\r\n                props.setValue(value.target.files[0]);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Form.Item label={props.label}>\r\n                <Input\r\n                    type=\"file\"\r\n                    // value={props.value}\r\n                    onChange={handleChange} />\r\n            </Form.Item>\r\n        );\r\n    }\r\n}","import { message } from \"antd\";\r\nimport { PageInfoModel } from \"../components/core/TableModel\";\r\n\r\nexport class Fn {\r\n    static PrintMsg(err: any | null) {\r\n        if (err.response === undefined) {\r\n            return err.response;\r\n        }\r\n        return err.response.data.message;\r\n    };\r\n\r\n    static PrintMsgErr(err: any | null) {\r\n        message.error(this.PrintMsg(err));\r\n        // console.log(err);\r\n        \r\n    };\r\n\r\n    static PrintMsgSuccess(data: any) {\r\n        message.success(data.data.message);\r\n    };\r\n\r\n    static PrintMsgSuccessV2(data: any) {\r\n        message.success(data.message);\r\n    };\r\n\r\n    static FormatInputMoney(data: string | null) {\r\n        return `${data}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    }\r\n\r\n    static ParseInputMoney(data: string) {\r\n        return data.replace(/\\s?|(,*)/g, '');\r\n    }\r\n\r\n    static FormatMoney(money: number) {\r\n        return new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(money);\r\n    }\r\n\r\n    static FormatNumber(money: number) {\r\n        return new Intl.NumberFormat('vi-VN').format(money);\r\n    }\r\n\r\n    static GetIndexInArray = (datas: any, keySearch: string, value: string) => { // -1 khong tim thay\r\n        var result = -1;\r\n        for (var i = 0; i < datas.length; i++) {\r\n            if (datas[i][keySearch] === value) {\r\n                result = i;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static GetIndexInArrayStr = (datas: any, value: string) => { // -1 khong tim thay\r\n        var result = -1;\r\n        for (var i = 0; i < datas.length; i++) {\r\n            if (datas[i].trim() === value.trim()) {\r\n                result = i;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static SetPageInfo = (data: any, setTotal: any, setPageNumber: any, setPageSize: any) => {\r\n        var pageInfo = data.data.data.pageInfo;\r\n        setTotal(pageInfo.totalCount);\r\n        setPageNumber(pageInfo.currentPage);\r\n        setPageSize(pageInfo.pageSize);\r\n    }\r\n\r\n    static GetTimestamp = (data?: any, body?: any) => {\r\n        try {\r\n            if (body === null || body === undefined) {\r\n                return data.data.data.timestamp;\r\n            }\r\n            body.timestamp = data.data.data.timestamp;\r\n            return body;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    static GetTimestampV2 = (data?: any, body?: any) => {\r\n        try {\r\n            if (body === null || body === undefined) {\r\n                return data.data.timestamp;\r\n            }\r\n            body.timestamp = data.data.timestamp;\r\n            return body;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    static RenderSTT(_data: any, _row: any, index: number, pageInfo: PageInfoModel) {\r\n        return ((pageInfo.pageNumber - 1) * pageInfo.pageSize) + index + 1;\r\n    }\r\n}"],"names":["ForgotPasswordComponent","useState","isLoading","setIsLoading","userName","setUserName","otp","setOtp","title","layout","label","value","setValue","onClick","body","email","AuthService","then","rs","isSuccess","Fn","finally","to","MyInput","props","onChange","undefined","target","required","readOnly","MyFormItem","Input","format","moment","inputReadOnly","showTime","disabled","min","max","className","span","colSpan1","colSpan2","Number","options","TextArea","Password","Search","loading","onSearch","checked","type","files","err","response","data","message","this","PrintMsg","replace","money","Intl","NumberFormat","style","currency","_data","_row","index","pageInfo","pageNumber","pageSize","GetIndexInArray","datas","keySearch","result","i","length","GetIndexInArrayStr","trim","SetPageInfo","setTotal","setPageNumber","setPageSize","totalCount","currentPage","GetTimestamp","timestamp","error","console","log","GetTimestampV2"],"sourceRoot":""}
{"version":3,"file":"static/js/376.510d080f.chunk.js","mappings":"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","sources":["components/tool/task/ProjectStatusComponent.tsx","components/tool/task/sprintManage/DetailComponent.tsx","services/taskService.ts"],"sourcesContent":["import { Col, Form, Row, Tag } from \"antd\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { SettingService } from \"../../../services/taskService\";\nimport { MyFormItem } from \"../../core/Input\";\nimport { Box } from \"../../core/MyBox\";\n\nexport function ProjectStatusComponent(props: any) {\n    const projectKey = props.projectKey;\n    const type = props.type;\n    // const projectKey = \"c6555c5c26dae23585ac5efb0afca987\";\n    // const type = 1;\n    const [options, setOptions] = useState([]);\n\n    const loadData = useCallback(() => {\n        SettingService.SearchByType(projectKey, type, (data: any) => {\n            console.log(data);\n            var row = data.data.data.map((data: any, index: number) => {\n                return {\n                    key: index,\n                    label: data.value,\n                    value: data.id\n                }\n            })\n\n            setOptions(row);\n        });\n    }, [projectKey, type]);\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n    return (\n        <div>\n            <MyFormItem.Select\n                label={props.label}\n                options={options}\n                value={props.value}\n                setValue={props.setValue} />\n        </div>\n    )\n}\n\nexport function TagComponent(props: any) {\n    const projectKey = props.projectKey;\n    // const projectKey = \"c6555c5c26dae23585ac5efb0afca987\";\n    const [options, setOptions] = useState([]);\n\n    const loadData = useCallback(() => {\n        SettingService.SearchByType(projectKey, 7, (data: any) => {\n            console.log(data);\n            var row = data.data.data.map((data: any, index: number) => {\n                return {\n                    key: index,\n                    label: data.value,\n                    value: data.value\n                }\n            })\n\n            setOptions(row);\n        });\n    }, [projectKey]);\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n    function handleChangeValue(value: any) {\n        props.setValue(props.value !== \"\" ? props.value + \",\" + value : value);\n        console.log(value);\n\n    }\n\n    function GenerateTag() {\n        const color = [\"magenta\", \"red\", \"volcano\", \"orange\", \"gold\", \"lime\", \"green\", \"cyan\", \"blue\", \"geekblue\", \"purple\"];\n        if (props.value === \"\") { return; }\n        return props.value.split(\",\").map((data: any, index: number) => {\n            return (\n                <Tag onClick={() => {\n                    handleDeleteTag(index);\n                }} key={index} color={color[Math.floor(Math.random() * 11)]}>{data}\n                </Tag>\n            );\n        })\n    }\n\n    function handleDeleteTag(index: number) {\n        var a = props.value.split(\",\")\n        var b = a.splice(index + 1, a.length);\n        props.setValue(b.length > 0 ? b.toString(\",\") : \"\");\n    }\n\n    return (\n        <Row gutter={12}>\n            <Col span={12}>\n                <MyFormItem.Select\n                    label={props.label}\n                    value={props.value}\n                    setValue={handleChangeValue}\n                    options={options} />\n            </Col>\n            <Col span={12}>\n                <Box>\n                    <Form.Item>\n                        {GenerateTag()}\n                    </Form.Item>\n                </Box>\n            </Col>\n        </Row>\n    )\n}","import { Col, Drawer, Form, Row } from \"antd\";\nimport moment from \"moment\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { Fn } from \"../../../../helper/function\";\nimport { TaskSprintManageService } from \"../../../../services/taskService\";\nimport { MyFormItem } from \"../../../core/Input\";\nimport { MyButton } from \"../../../core/MyButton\";\nimport { ProjectStatusComponent } from \"../ProjectStatusComponent\";\n\nexport default function ModifyComponent(props: any) {\n    const [name, setName] = useState('');\n    const [dateFrom, setDateFrom] = useState(moment());\n    const [dateTo, setDateTo] = useState(moment());\n    const [status, setStatus] = useState();\n    const { setIsLoading } = props;\n\n    let loadData = useCallback(() => {\n        if (props.keyData !== undefined) {\n            setIsLoading(true);\n            TaskSprintManageService.GetDetail(props.projectKey, props.keyData, (data: any) => {\n                let row = data.data.data;\n                setName(row.name);\n                setDateFrom(moment(row.dateFrom));\n                setDateTo(moment(row.dateTo));\n                setStatus(row.status);\n            }, undefined, () => {\n                setIsLoading(false);\n            })\n        }\n    }, [props.projectKey, props.keyData, setIsLoading])\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n    function HandleOnClose() {\n        props.setVisible(false);\n        setName('');\n        setDateFrom(moment());\n        setDateTo(moment());\n\n        if (props.setKeyData !== undefined) {\n            props.setKeyData(undefined);\n        }\n    }\n\n    function HandleSubmitForm() {\n        let body = {\n            name: name,\n            dateFrom: dateFrom.format(\"yyyy-MM-DD\"),\n            dateTo: dateTo.format(\"yyyy-MM-DD\"),\n            status: status\n        };\n\n        setIsLoading(true);\n\n        if (props.keyData !== undefined) {\n            Edit(body);\n        } else {\n            Add(body);\n        }\n    }\n\n    function Add(body: any) {\n        TaskSprintManageService.Add(props.projectKey, body, (data: any) => {\n            Fn.PrintMsgSuccess(data);\n            HandleOnClose();\n            props.loadData();\n        }, () => {\n            props.setIsLoading(false)\n        });\n    }\n\n    function Edit(body: any) {\n        TaskSprintManageService.GetDetail(props.projectKey, props.keyData, (data: any) => {\n            body = Fn.GetTimestamp(data, body);\n            TaskSprintManageService.Edit(props.projectKey, props.keyData, body, (data: any) => {\n                Fn.PrintMsgSuccess(data);\n                HandleOnClose();\n                props.loadData();\n            }, () => {\n                props.setIsLoading(false)\n            });\n        }, () => {\n            props.setIsLoading(false)\n        });\n    }\n\n    function handleDeleteSprint() {\n        Swal.fire({\n            title: \"Xác nhận xóa\",\n            text: \"Bạn có muốn xóa sprint này không?\",\n            showDenyButton: true,\n            confirmButtonText: \"Có\",\n            denyButtonText: \"Không\",\n        }).then((result: any) => {\n            if (result.isConfirmed) {\n                doDeleteSprint()\n            }\n        })\n    }\n\n    function doDeleteSprint() {\n        props.setIsLoading(true);\n        TaskSprintManageService.GetDetail(props.projectKey, props.keyData, (data: any) => {\n            TaskSprintManageService.Delete(props.projectKey, props.keyData, Fn.GetTimestamp(data), (data: any) => {\n                Fn.PrintMsgSuccess(data);\n                HandleOnClose();\n                props.loadData();\n            }, () => {\n                props.setIsLoading(false);\n            });\n        }, () => {\n            props.setIsLoading(false);\n        })\n    }\n\n    return (\n        <Drawer\n            title=\"Chi tiết\"\n            open={props.visible}\n            onClose={HandleOnClose}>\n\n            <Form layout=\"vertical\" onSubmitCapture={HandleSubmitForm}>\n                <MyFormItem.Input\n                    label=\"Tên giai đoạn\"\n                    value={name}\n                    setValue={setName} />\n\n                <MyFormItem.DatePicker\n                    label=\"Ngày bắt đầu\"\n                    value={dateFrom}\n                    setValue={setDateFrom} />\n\n                <MyFormItem.DatePicker\n                    label=\"Ngày kết thúc\"\n                    value={dateTo}\n                    setValue={setDateTo} />\n\n                <ProjectStatusComponent\n                    label=\"Trạng thái\"\n                    projectKey={props.projectKey}\n                    type={2}\n                    value={status}\n                    setValue={setStatus} />\n\n                <Row gutter={24}>\n                    <Col span=\"12\">\n                        <MyButton\n                            isLoading={props.isLoading}\n                            htmlType=\"submit\"\n                            type=\"success\"\n                            value={props.keyData !== undefined ? \"Chỉnh sửa\" : \"Thêm mới\"} />\n                    </Col>\n                    <Col>\n                        <MyButton\n                            isLoading={props.isLoading}\n                            type=\"danger\"\n                            disabled={props.keyData === undefined}\n                            onClick={handleDeleteSprint}\n                            value=\"Xóa sprint\" />\n                    </Col>\n                </Row>\n            </Form>\n        </Drawer>\n    );\n}","import { MyAxios } from \"../helper/myaxios\";\nimport { PaginationRequest } from \"../models/baseModel\";\n\nexport class TaskProjectManageService {\n    static GetQrCode(key: string) {\n        var url = `${MyAxios.BaseURL}/user/qrCode?data=taskManage_projectManage_${key}`;\n        return url;\n    }\n\n    static GetClone(projectKey: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/duplicate`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static ProcessClone(projectKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/duplicate`;\n        return MyAxios.Post(url, body, then, exp, final);\n    }\n\n    static GetList(paginationRequest: PaginationRequest, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects?${paginationRequest.generateQueryString()}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static GetDetail(key: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${key}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static Search(q: string, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/query?q=${q}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static Add(body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects`;\n        console.log(body);\n\n        return MyAxios.Post(url, body, then, exp, final);\n    }\n\n    static Edit(key: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${key}`;\n        return MyAxios.Put(url, body, then, exp, final);\n    }\n\n    static Delete(key: string | undefined, timestamp: string, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${key}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxios.Delete(url, then, exp, final);\n    }\n}\n\nexport class TaskSprintManageService {\n    static GetList(projectKey: string | undefined, paginationRequest: PaginationRequest | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/sprints${paginationRequest === undefined ? \"\" : \"?\" + paginationRequest?.generateQueryString()}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static GetDetail(projectKey: string | undefined, sprintKey: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/sprints/${sprintKey}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static Add(projectKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/sprints`;\n        return MyAxios.Post(url, body, then, exp, final);\n    }\n\n    static Edit(projectKey: string | undefined, sprintKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/sprints/${sprintKey}`;\n        return MyAxios.Put(url, body, then, exp, final);\n    }\n\n    static Delete(projectKey: string | undefined, sprintKey: string | undefined, timestamp: string, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/sprints/${sprintKey}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxios.Delete(url, then, exp, final);\n    }\n}\n\nexport class TaskToDoListService {\n    static GetList(projectKey: string | undefined, sprintKey: string | undefined, paginationRequest: PaginationRequest | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/sprints/${sprintKey}/toDoLists?${paginationRequest?.generateQueryString()}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static GetDetail(projectKey: string | undefined, sprintKey: string | undefined, key: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/sprints/${sprintKey}/toDoLists/${key}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static Add(projectKey: string | undefined, sprintKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/sprints/${sprintKey}/toDoLists`;\n        return MyAxios.Post(url, body, then, exp, final);\n    }\n\n    static Edit(projectKey: string | undefined, sprintKey: string | undefined, key: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/sprints/${sprintKey}/toDoLists/${key}`;\n        return MyAxios.Put(url, body, then, exp, final);\n    }\n\n    static Delete(projectKey: string | undefined, sprintKey: string | undefined, key: string | undefined, timestamp: string, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/sprints/${sprintKey}/toDoLists/${key}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxios.Delete(url, then, exp, final);\n    }\n}\n\nexport class SettingService {\n    static GetListSettingStatus(projectKey: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/settingStatus`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static GetDetailSettingStatus(projectKey: string | undefined, settingKey: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/settingStatus/${settingKey}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static AddSettingStatus(projectKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/settingStatus`;\n        return MyAxios.Post(url, body, then, exp, final);\n    }\n\n    static EditSettingStatus(projectKey: string | undefined, settingKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/settingStatus/${settingKey}`;\n        return MyAxios.Put(url, body, then, exp, final);\n    }\n\n    static DeleteSettingStatus(projectKey: string | undefined, settingKey: string | undefined, timestamp: string, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/settingStatus/${settingKey}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxios.Delete(url, then, exp, final);\n    }\n    // Other\n    static GetListSettingOther(projectKey: string | undefined, type: number, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/settingOther?type=${type}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static GetDetailSettingOther(projectKey: string | undefined, settingKey: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/settingOther/${settingKey}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static AddSettingOther(projectKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/settingOther`;\n        return MyAxios.Post(url, body, then, exp, final);\n    }\n\n    static EditSettingOther(projectKey: string | undefined, settingKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/settingOther/${settingKey}`;\n        return MyAxios.Put(url, body, then, exp, final);\n    }\n\n    static DeleteSettingOther(projectKey: string | undefined, settingKey: string | undefined, timestamp: string, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/settingOther/${settingKey}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxios.Delete(url, then, exp, final);\n    }\n\n    static SearchByType(projectKey: string | undefined, type: number, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/settings/query?type=${type}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n}\n\nexport class VariableService {\n    static GetList(projectKey: string | undefined, paginationRequest: PaginationRequest, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/workflow/variables?${paginationRequest.generateQueryString()}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static GetDetail(projectKey: string | undefined, key: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/workflow/variables/${key}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static Add(projectKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/workflow/variables`;\n        return MyAxios.Post(url, body, then, exp, final);\n    }\n\n    static Edit(projectKey: string | undefined, key: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/workflow/variables/${key}`;\n        return MyAxios.Put(url, body, then, exp, final);\n    }\n\n    static Delete(projectKey: string | undefined, key: string | undefined, timestamp:string, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/workflow/variables/${key}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxios.Delete(url, then, exp, final);\n    }\n}"],"names":["ProjectStatusComponent","props","projectKey","type","useState","options","setOptions","loadData","useCallback","SettingService","data","console","log","row","map","index","key","label","value","id","useEffect","setValue","TagComponent","gutter","span","color","split","onClick","a","b","splice","length","toString","handleDeleteTag","Math","floor","random","GenerateTag","ModifyComponent","name","setName","moment","dateFrom","setDateFrom","dateTo","setDateTo","status","setStatus","setIsLoading","undefined","keyData","TaskSprintManageService","HandleOnClose","setVisible","setKeyData","title","open","visible","onClose","layout","onSubmitCapture","body","format","Fn","Edit","Add","isLoading","htmlType","disabled","Swal","text","showDenyButton","confirmButtonText","denyButtonText","then","result","isConfirmed","TaskProjectManageService","MyAxios","exp","final","url","paginationRequest","generateQueryString","q","timestamp","encodeURIComponent","sprintKey","TaskToDoListService","settingKey","VariableService"],"sourceRoot":""}
{"version":3,"file":"static/js/19.1fd519e3.chunk.js","mappings":"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","sources":["components/core/SearchComponent.tsx","components/tool/task/projectManage/ModifyComponent.tsx"],"sourcesContent":["import { MyButton } from \"./MyButton\";\nimport { Drawer, Form } from 'antd';\nimport { useEffect, useState } from \"react\";\nimport Loading from \"./Loading\";\nimport { Fn } from \"../../helper/function\";\nimport { MyFormItem } from \"./Input\";\n\n /**\n  * // TODO: Component search\n  * Gets script version\n  * params:\n  * - muityChoose: Cho phép chọn nhiều hay không? Mặc định = false\n  * - onSearch: Fn excute search\n  * - resultKey: Key kết quả\n  * - resultName: Name kết quả\n  * - setResultKey: fn set resultKey\n  * - setResultName: fn set resultName\n  * - dataSearch:\n  * - label: \n  * - isLoading: \n  * ex:\n  * - muityChoose={false}\n  * - onSearch={onSearch}\n  * - resultKey={resultKey}\n  * - resultName={resultName}\n  * - setResultKey={setResultKey}\n  * - setResultName={setResultName}\n  * - dataSearch={dataSearch}\n  * - label={label}\n  * - isLoading={isLoading}\n  * @returns script version\n  */\n\nexport default function SearchComponent(props: any) {\n    let muityChoose: boolean|undefined = props.muityChoose;\n    if (muityChoose === undefined) {\n        muityChoose = false;\n    }\n\n    const [visible, setVisible] = useState(false);\n\n    function handleSearch() {\n        setVisible(true);\n    }\n\n    function onCloseDrawer() {\n        setVisible(false);\n    }\n\n    function handleSearchData(params: any) {\n        props.onSearch(params);\n    }\n\n    useEffect(() => {\n    }, [])\n\n    function handleChooseSearch(data: any) {\n        if (muityChoose === true) {\n            var a = props.resultName.split(\",\");\n            var b = Fn.GetIndexInArrayStr(a, data.name);\n            \n            if(b !== -1) {\n                console.log(\"EXIST ARRAY\");\n                return;\n            }\n            props.setResultKey(`${props.resultKey}${props.resultKey !== '' ? ', ' : ''}${data.key}`);\n            props.setResultName(`${props.resultName}${props.resultName !== '' ? ', ' : ''}${data.name}`);\n            // setVisible(false);\n        } else {\n            props.setResultKey(data.key);\n            props.setResultName(data.name);\n            // setVisible(false);\n        }\n    }\n\n    function renderDataSearch() {\n        return props.dataSearch.map((data: any, index: number) => {\n            return (\n                <MyButton key={data.key} value={data.name} onClick={() => handleChooseSearch(data)} />\n            );\n        })\n    }\n\n    function deleteResult() {\n        props.setResultKey('');\n        props.setResultName('');\n        // setVisible(false);\n    }\n\n    return (\n        <div>\n            <MyFormItem.Input\n                label={props.label}\n                onClick={handleSearch}\n                readOnly={true}\n                value={props.resultName} />\n\n            <Drawer\n                placement=\"top\"\n                open={visible}\n                onClose={onCloseDrawer}>\n                <div>\n                    <Loading isLoading={props.isLoading} />\n                    <MyButton value=\"Xóa tìm kiếm\" onClick={deleteResult} />\n                    <MyFormItem.Input readOnly={true} label=\"Kết quả\" value={props.resultName}/>\n                    <Form>\n                        <MyFormItem.Search label=\"Tìm kiếm\" onSearch={handleSearchData} />\n                    </Form>\n                    {renderDataSearch()}\n                </div>\n            </Drawer>\n        </div>\n    );\n}\n","import { Col, Form, Row } from \"antd\";\nimport moment from \"moment\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport { Fn } from \"../../../../helper/function\";\nimport { TaskProjectManageService } from \"../../../../services/taskService\";\nimport { MyFormItem } from \"../../../core/Input\";\nimport { Box, MyBox } from \"../../../core/MyBox\";\nimport { MyButton } from \"../../../core/MyButton\";\nimport SearchComponent from \"../../../core/SearchComponent\";\nimport { ProjectStatusComponent, TagComponent } from \"../ProjectStatusComponent\";\n\nexport default function ModifyComponent() {\n    const navigate = useNavigate();\n    const [isLoading, setIsLoading] = useState(false);\n    const [name, setName] = useState('');\n    const [content, setContent] = useState('');\n    const [status, setStatus] = useState(0);\n    const [parentKey, setParentKey] = useState('');\n    const [parentName, setParentName] = useState('');\n    const [tag, setTag] = useState('');\n    const [createdAt, setCreatedAt] = useState(moment());\n    const [updatedAt, setUpdatedAt] = useState(moment());\n    const [dataParentSearch, setDataParentSearch] = useState([]);\n\n    var keyData = useParams().key;\n\n    const loadData = useCallback(() => {\n        if (keyData !== undefined) {\n            setIsLoading(true);\n            TaskProjectManageService.GetDetail(keyData, (data: any) => {\n                const row = data.data.data;\n                setName(row.name);\n                setContent(row.content);\n                setTag(row.tag.toString());\n                setStatus(row.status);\n                setCreatedAt(moment(row.createdAt));\n                setUpdatedAt(moment(row.updatedAt));\n                let parentProject = row.parentProject;\n                if (parentProject !== null) {\n                    setParentKey(parentProject.key);\n                    setParentName(parentProject.name);\n                }\n\n            }, undefined, () => {\n                setIsLoading(false);\n            })\n        }\n    }, [keyData]);\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n    function OnSearch(data: any) {\n        setIsLoading(true);\n        TaskProjectManageService.Search(data, (data: any) => {\n            setDataParentSearch(data.data.data);\n        }, undefined, () => {\n            setIsLoading(false);\n        })\n    }\n\n    function handleSubmitForm() {\n        let body = {\n            name: name,\n            content: content,\n            status: status,\n            tag: tag.split(\",\"),\n            parentKey: parentKey === '' ? null : parentKey\n        };\n\n        setIsLoading(true);\n        if (keyData === undefined) {\n            Add(body);\n        } else {\n            Edit(body);\n        }\n    }\n\n    function Add(body: any) {\n        TaskProjectManageService.Add(body, (data: any) => {\n            Fn.PrintMsgSuccess(data);\n            navigate(`/tools/tasks/projects/${data.data.data.key}`)\n        }, undefined, () => {\n            setIsLoading(false);\n        });\n    }\n\n    function Edit(body: any) {\n        TaskProjectManageService.GetDetail(keyData, (data: any) => {\n            body = Fn.GetTimestamp(data, body);\n            TaskProjectManageService.Edit(keyData, body, (data: any) => {\n                Fn.PrintMsgSuccess(data);\n                setIsLoading(false);\n            }, () => {\n                setIsLoading(false);\n            });\n        }, () => {\n            setIsLoading(false);\n        });\n    }\n\n\n\n    function handleDeleteProject() {\n        Swal.fire({\n            title: 'Bạn có muốn xóa dự án này không?',\n            showDenyButton: true,\n            confirmButtonText: 'Có',\n            denyButtonText: `Không`,\n        }).then((result: any) => {\n            if (result.isConfirmed) {\n                DeleteProject();\n            }\n        })\n    }\n\n    function DeleteProject() {\n        setIsLoading(true);\n        TaskProjectManageService.GetDetail(keyData, (data: any) => {\n            TaskProjectManageService.Delete(keyData, Fn.GetTimestamp(data), (data: any) => {\n                Fn.PrintMsgSuccess(data);\n                setIsLoading(false);\n                navigate(`/tools/tasks/projects`);\n            }, () => {\n                setIsLoading(false);\n            })\n        }, () => {\n            setIsLoading(false);\n        })\n    }\n\n    return (\n        <MyBox\n            title=\"Chi tiết dự án\"\n            isLoading={isLoading}>\n            <Box>\n                <p>Danh sách các chức năng</p>\n                <Row>\n                    <Col span={4}>\n                        <Link to={`/tools/tasks/projects/${keyData}/sprint`}>\n                            <MyButton\n                                disabled={keyData === undefined}\n                                type=\"primary\"\n                                value=\"Quản lý sprint\" />\n                        </Link>\n                    </Col>\n                    <Col span={4}>\n                        <Link to={`/tools/tasks/projects/${keyData}/settings`}>\n                            <MyButton\n                                disabled={keyData === undefined}\n                                type=\"secondary\"\n                                value=\"Cài đặt\" />\n                        </Link>\n                    </Col>\n                    <Col span={4}>\n                        <Link to={`/tools/tasks/projects/${keyData}/dailyReport`}>\n                            <MyButton\n                                disabled={keyData === undefined}\n                                type=\"dark\"\n                                value=\"Daily report\" />\n                        </Link>\n                    </Col>\n                    <Col span={4}>\n                        <Link to={`/tools/tasks/projects/${keyData}/clone`}>\n                            <MyButton\n                                disabled={keyData === undefined}\n                                type=\"warning\"\n                                value=\"Clone dự án\" />\n                        </Link>\n                    </Col>\n                    <Col span={4}>\n                        <Link to={`/tools/tasks/projects/${keyData}/codeManage`}>\n                            <MyButton\n                                disabled={keyData === undefined}\n                                type=\"success\"\n                                value=\"Code Manage\" />\n                        </Link>\n                    </Col>\n                </Row>\n            </Box>\n            <Form\n                layout=\"vertical\"\n                onSubmitCapture={handleSubmitForm}>\n                <Row gutter={12}>\n                    <Col span={8}>\n                        <MyFormItem.Input\n                            readOnly={true}\n                            label=\"Mã dự án\"\n                            value={keyData}\n                            setValue={undefined} />\n                    </Col>\n                    <Col span={16}>\n                        <MyFormItem.Input\n                            label=\"Tên dự án\"\n                            value={name}\n                            setValue={setName} />\n                    </Col>\n                    <Col span={24}>\n                        <MyFormItem.TextArea\n                            label=\"Nội dung\"\n                            value={content}\n                            setValue={setContent} />\n                    </Col>\n                    <Col span={24}>\n                        <TagComponent\n                            projectKey={keyData}\n                            label=\"Tag\"\n                            value={tag}\n                            setValue={setTag} />\n                    </Col>\n                    <Col span={12}>\n                        <SearchComponent\n                            label=\"Dự án cha\"\n                            muityChoose={false}\n                            onSearch={OnSearch}\n                            resultKey={parentKey}\n                            resultName={parentName}\n                            setResultKey={setParentKey}\n                            setResultName={setParentName}\n                            dataSearch={dataParentSearch}\n                            isLoading={isLoading} />\n                    </Col>\n                    <Col span={12}>\n                        <ProjectStatusComponent\n                            label=\"Trạng thái\"\n                            projectKey={keyData}\n                            type=\"1\"\n                            value={status}\n                            setValue={setStatus} />\n                    </Col>\n                    <Col span={12}>\n                        <MyFormItem.DateTimePicker\n                            label=\"Ngày tạo\"\n                            readOnly={true}\n                            value={createdAt}\n                            setValue={setCreatedAt} />\n                    </Col>\n                    <Col span={12}>\n                        <MyFormItem.DateTimePicker\n                            label=\"Ngày cập nhật cuối cùng\"\n                            readOnly={true}\n                            value={updatedAt}\n                            setValue={setUpdatedAt} />\n                    </Col>\n                    <Col span={8}>\n                        <MyButton\n                            htmlType=\"submit\"\n                            type=\"success\"\n                            value=\"Thay đổi\" />\n                    </Col>\n                    <Col span={8}>\n                        <MyButton\n                            onClick={handleDeleteProject}\n                            disabled={keyData === undefined}\n                            type=\"danger\"\n                            value=\"Xóa\" />\n                    </Col>\n                    <Col span={8}>\n                        <Link to=\"/tools/tasks/projects\">\n                            <MyButton\n                                type=\"warning\"\n                                value=\"Hủy\" />\n                        </Link>\n                    </Col>\n                </Row>\n            </Form>\n        </MyBox>\n    );\n}"],"names":["SearchComponent","props","muityChoose","undefined","useState","visible","setVisible","useEffect","label","onClick","readOnly","value","resultName","placement","open","onClose","isLoading","setResultKey","setResultName","onSearch","params","dataSearch","map","data","index","name","a","split","Fn","console","log","resultKey","key","handleChooseSearch","ModifyComponent","navigate","useNavigate","setIsLoading","setName","content","setContent","status","setStatus","parentKey","setParentKey","parentName","setParentName","tag","setTag","moment","createdAt","setCreatedAt","updatedAt","setUpdatedAt","dataParentSearch","setDataParentSearch","keyData","useParams","loadData","useCallback","TaskProjectManageService","row","toString","parentProject","title","span","to","disabled","type","layout","onSubmitCapture","body","Add","Edit","gutter","setValue","projectKey","htmlType","Swal","showDenyButton","confirmButtonText","denyButtonText","then","result","isConfirmed"],"sourceRoot":""}
{"version":3,"file":"static/js/876.8eef9c8e.chunk.js","mappings":"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","sources":["components/core/Input.tsx","components/tool/task/settings/ImportFileComponent.tsx","components/tool/task/settings/ModifyOtherSettingComponent.tsx","components/tool/task/settings/OtherComponent.tsx","components/tool/task/settings/ModifyStatusSettingComponent.tsx","components/tool/task/settings/StatusComponent.tsx","components/tool/task/settings/SettingComponent.tsx","services/taskService.ts"],"sourcesContent":["import { Input, Form, DatePicker, InputNumber, Row, Col, Select, Switch } from \"antd\";\nimport moment from \"moment\";\n\nexport class MyInput {\n    // ************************* Input ****************************\n    static Input(props: any) {\n        function handleChangeInput(value: any) {\n            if (props.onChange !== undefined) {\n                props.onChange(value.target.value);\n            }\n\n            if (props.setValue !== undefined) {\n                props.setValue(value.target.value);\n            }            \n        }\n\n        return (\n            <Input\n                onClick={props.onClick}\n                value={props.value}\n                onChange={handleChangeInput}\n                required={props.required}\n                readOnly={props.readOnly} />\n        );\n    }\n}\n\nexport class MyFormItem {\n    static Input(props: any) {\n        return (\n            <Form.Item label={props.label}>\n                <MyInput.Input\n                    onClick={props.onClick}\n                    onChange={props.onChange}\n                    value={props.value}\n                    setValue={props.setValue}\n                    required={props.required}\n                    readOnly={props.readOnly} />\n            </Form.Item>\n        );\n    }\n\n    // *************************** Datepicker **************************\n    static DatePicker(props: any) {\n        function handleChangeOption(value: any) {\n            if (props.setValue !== undefined) {\n                props.setValue(value);\n            }\n        }\n\n        function customeFormat(value: any) {\n            return moment(value).format(\"DD/MM/YYYY\");\n        }\n\n        return (\n            <Form.Item label={props.label}>\n                <DatePicker\n                    value={props.value}\n                    onChange={handleChangeOption}\n                    format={customeFormat}\n                    inputReadOnly={props.readOnly} />\n            </Form.Item>\n        );\n    }\n\n    // *************************** Datetimepicker **************************\n    static DateTimePicker(props: any) {\n        function handleChangeOption(value: any) {\n            if (props.setValue !== undefined) {\n                props.setValue(value);\n            }\n        }\n\n        function customeFormat(value: any) {\n            return moment(value).format(\"DD/MM/YYYY HH:mm:ss\");\n        }\n\n        return (\n            <Form.Item label={props.label}>\n                <DatePicker\n                    showTime\n                    value={props.value}\n                    onChange={handleChangeOption}\n                    format={customeFormat}\n                    disabled={props.readOnly} />\n            </Form.Item>\n        );\n    }\n\n    // *************************** Number **************************\n    static Number(props: any) {\n        function handleChangeInput(value: any) {\n            if (props.setValue !== undefined) {\n                props.setValue(value);\n            }\n        }\n\n        return (\n            <InputNumber\n                min={props.min}\n                max={props.max}\n                value={props.value}\n                onChange={handleChangeInput} />\n        );\n    }\n\n    static NumberColSpan(props: any) {        \n        return (\n            <div>\n                <Row className={props.className}>\n                    <Col span={props.colSpan1}>\n                        <span>{props.label}</span>\n                    </Col>\n                    <Col span={props.colSpan2}>\n                        <MyFormItem.Number\n                            min={props.min}\n                            max={props.max}\n                            value={props.value}\n                            setValue={props.setValue} />\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n\n    // *************************** Select **************************\n    static Select(props: any) {\n        function handleChangeOption(value: any) {\n            if (props.setValue !== undefined) {\n                props.setValue(value);\n            }\n\n            if (props.onChange !== undefined) {\n                props.onChange(value);\n            }\n        }\n\n        return (\n            <Form.Item label={props.label}>\n                <Select\n                    options={props.options}\n                    value={props.value}\n                    onChange={handleChangeOption} />\n            </Form.Item>\n        );\n    }\n\n\n    // *************************** TextArea **************************\n    static TextArea(props: any) {\n        function handleChangeOption(value: any) {\n            if (props.setValue !== undefined) {\n                props.setValue(value.target.value);\n            }\n        }\n\n        const { TextArea } = Input;\n        return (\n            <Form.Item label={props.label}>\n                <TextArea\n                    value={props.value}\n                    onChange={handleChangeOption} />\n            </Form.Item>\n        );\n    }\n\n    // *************************** Password **************************\n    static Password(props: any) {\n        function handleChangeOption(value: any) {\n            if (props.onChange !== undefined) {\n                props.onChange(value.target.value);\n            }\n\n            if (props.setValue !== undefined) {\n                props.setValue(value.target.value);\n            }\n        }\n\n        const { Password } = Input;\n        return (\n            <Form.Item label={props.label}>\n                <Password\n                    value={props.value}\n                    onChange={handleChangeOption} />\n            </Form.Item>\n        );\n    }\n\n    // *************************** Search **************************\n    static Search(props: any) {\n        function handleChangeSearch(value: any) {\n            if (props.setValue !== undefined) {\n                props.setValue(value.target.value);\n            }\n        }\n\n        const { Search } = Input;\n        return (\n            <Form.Item label={props.label}>\n                <Search\n                    loading={props.loading}\n                    onSearch={props.onSearch}\n                    value={props.value}\n                    onChange={handleChangeSearch} />\n            </Form.Item>\n        );\n    }\n\n    // *************************** Swith **************************\n    static Switch(props: any) {\n        function handleChangeSearch(value: any) {\n            if (props.setValue !== undefined) {\n                props.setValue(value);\n            }\n            \n            if(props.onChange !== undefined) {\n                props.onChange(value);\n            }\n        }\n\n        return (\n            <Form.Item label={props.label}>\n                <Switch\n                    loading={props.loading}\n                    checked={props.value}\n                    onChange={handleChangeSearch} />\n            </Form.Item>\n        );\n    }\n\n     // *************************** Swith **************************\n     static File(props: any) {\n        function handleChange(value: any) {\n            if (props.setValue !== undefined) {\n                props.setValue(value.target.files[0]);\n            }\n        }\n\n        return (\n            <Form.Item label={props.label}>\n                <Input\n                    type=\"file\"\n                    // value={props.value}\n                    onChange={handleChange}/>\n            </Form.Item>\n        );\n    }\n}","import { Box } from \"../../../core/MyBox\";\nimport { MyFormItem } from \"../../../core/Input\";\nimport { useState } from \"react\";\nimport { MyButton } from \"../../../core/MyButton\";\nimport { SettingService } from \"../../../../services/taskService\";\nimport { useParams } from \"react-router-dom\";\nimport { Fn } from \"../../../../helper/function\";\n\nexport default function ImportFileComponent(props: any) {\n    const [file, setFile] = useState<string | Blob>();\n    const projectKey = useParams().key;\n    function handleOnClick() {\n        console.log(file);\n        doUpload();\n    }\n\n    function doUpload() {\n        props.setIsLoading(true);\n        const formData = new FormData();\n        if (file) {\n            formData.append(\"File\", file);\n        }\n\n        SettingService.Import(projectKey, formData, (data: any) => {\n            console.log(data);\n            Fn.PrintMsgSuccess(data);\n        }, undefined, () => {\n            props.setIsLoading(false);\n        })\n    }\n\n    function handleOnClickExport() {\n        props.setIsLoading(true);\n        SettingService.Export(projectKey, (data: any) => {\n            var blob = new Blob([data.data], { type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" });\n            console.log(blob);\n\n            var url = URL.createObjectURL(blob);\n            window.open(url);\n        }, undefined, () => {\n            props.setIsLoading(false);\n        })\n    }\n\n    return (\n        <Box>\n            <MyButton\n                type=\"primary\"\n                onClick={handleOnClickExport}\n                value=\"Export file\" />\n\n            <MyButton\n                type=\"success\"\n                onClick={handleOnClick}\n                value=\"Import file\"\n                disabled={file === undefined} />\n\n            <MyFormItem.File\n                value={file}\n                setValue={setFile} />\n        </Box>\n    )\n}","import { Drawer, Form } from \"antd\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { Fn } from \"../../../../helper/function\";\nimport { SettingService } from \"../../../../services/taskService\";\nimport { MyFormItem } from \"../../../core/Input\";\nimport { MyButton } from \"../../../core/MyButton\";\n\nexport default function ModifyOtherSettingComponent(props: any) {\n    const [value, setValue] = useState('');\n\n    const { setIsLoading } = props;\n\n    const loadData = useCallback(() => {\n        if (props.keyData !== undefined) {\n            setIsLoading(true);\n            SettingService.GetDetailSettingStatus(props.projectKey, props.keyData, (data: any) => {\n                setValue(data.data.data.value)\n            }, undefined, () => {\n                setIsLoading(false);\n            })\n        }\n    }, [props.projectKey, props.keyData, setIsLoading]);\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n    function onClose() {\n        props.setVisible(false);\n    }\n\n    function handleSubmitForm() {\n        var body = {\n            value: value,\n            type: props.type\n        };\n\n        setIsLoading(true);\n        if (props.keyData !== undefined) {\n            Edit(body);\n        } else {\n            Add(body);\n        }\n    }\n\n    function Add(body: any) {\n        SettingService.AddSettingStatus(props.projectKey, body, (data: any) => {\n            Fn.PrintMsgSuccess(data);\n            props.loadData();\n        }, () => {\n            setIsLoading(false);\n        })\n    }\n\n    function Edit(body: any) {\n        SettingService.GetDetailSettingStatus(props.projectKey, props.keyData, (data: any) => {\n            body = Fn.GetTimestamp(data, body);\n            SettingService.EditSettingStatus(props.projectKey, props.keyData, body, (data: any) => {\n                Fn.PrintMsgSuccess(data);\n                props.loadData();\n            }, () => {\n                setIsLoading(false);\n            })\n        }, () => {\n            setIsLoading(false);\n        })\n    }\n\n    function handleClickDelete() {\n        Swal.fire({\n            title: \"Xác nhận xóa\",\n            text: 'Bạn có muốn xóa không?',\n        }).then((confirm) => {\n            if (confirm.isConfirmed) {\n                Delete();\n            }\n        })\n    }\n\n    function Delete() {\n        setIsLoading(true);\n        SettingService.GetDetailSettingStatus(props.projectKey, props.keyData, (data: any) => {\n            SettingService.DeleteSettingStatus(props.projectKey, props.keyData, Fn.GetTimestamp(data), (data: any) => {\n                Fn.PrintMsgSuccess(data);\n                onClose();\n                props.loadData();\n            }, () => {\n                setIsLoading(false);\n            })\n        }, () => {\n            setIsLoading(false);\n        })\n    }\n\n    return (\n        <Drawer\n            open={props.visible}\n            onClose={onClose}\n            title={props.keyData !== undefined ? \"Chỉnh sửa\" : \"Thêm mới\"}>\n            <Form\n                layout=\"vertical\"\n                onSubmitCapture={handleSubmitForm}>\n                <MyFormItem.Input\n                    label=\"Giá trị\"\n                    value={value}\n                    setValue={setValue} />\n                <MyButton\n                    htmlType=\"submit\"\n                    isLoading={props.isLoading}\n                    type=\"success\"\n                    value={props.keyData !== undefined ? \"Chỉnh sửa\" : \"Thêm mới\"} />\n                <MyButton\n                    type=\"danger\"\n                    isLoading={props.isLoading}\n                    onClick={handleClickDelete}\n                    value=\"Xóa\" />\n            </Form>\n        </Drawer>\n    );\n}","import { Col, Row } from \"antd\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { SettingService } from \"../../../../services/taskService\";\nimport { Box } from \"../../../core/MyBox\";\nimport { MyButton } from \"../../../core/MyButton\";\nimport ModifyOtherSettingComponent from \"./ModifyOtherSettingComponent\";\n\nexport default function OtherComponent(props: any) {\n    let type = props.type;\n    const projectKey = useParams().key;\n    const [dataSource, setDataSource] = useState([]);\n    const [visible, setVisible] = useState(false);\n    const [visibleEdit, setVisibleEdit] = useState(false);\n    const [keyEdit, setKeyEidt] = useState<string | undefined>(undefined);\n\n    const { setIsLoading } = props;\n\n    let loadData = useCallback(() => {\n        setIsLoading(true);\n        SettingService.GetListSettingStatus(projectKey, type, (data: any) => {\n            setDataSource(data.data.data);\n        }, undefined, () => {\n            setIsLoading(false);\n        })\n    }, [projectKey, type, setIsLoading]);\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n    function handleClickAdd() {\n        setVisible(true);\n    }\n\n    function handleClickEdit(key: string | undefined) {\n        setVisibleEdit(true);\n        setKeyEidt(key);\n    }\n\n    function RenderData() {\n        return dataSource.map((data: any, index: number) => {\n            return (\n                <Box key={index}>\n                    <Row gutter={12}>\n                        <Col span={12}>\n                            {data.value}\n                        </Col>\n                        <Col span={12} style={{ textAlign: \"right\" }}>\n                            <MyButton onClick={() => {\n                                handleClickEdit(data.key)\n                            }} value=\"Chỉnh sửa\" />\n                        </Col>\n                    </Row>\n                </Box>\n            )\n        })\n    }\n\n    return (\n        <Box>\n            <MyButton\n                type=\"primary\"\n                value=\"Thêm mới\"\n                onClick={handleClickAdd} />\n            {RenderData()}\n\n            <ModifyOtherSettingComponent\n                projectKey={projectKey}\n                type={type}\n                visible={visible}\n                setVisible={setVisible}\n                isLoading={props.isLoading}\n                setIsLoading={props.setIsLoading}\n                loadData={loadData} />\n\n            <ModifyOtherSettingComponent\n                projectKey={projectKey}\n                type={type}\n                visible={visibleEdit}\n                setVisible={setVisibleEdit}\n                isLoading={props.isLoading}\n                setIsLoading={props.setIsLoading}\n                keyData={keyEdit}\n                loadData={loadData} />\n        </Box>\n    );\n}","import { Drawer, Form } from \"antd\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { Fn } from \"../../../../helper/function\";\nimport { SettingService } from \"../../../../services/taskService\";\nimport { MyFormItem } from \"../../../core/Input\";\nimport { MyButton } from \"../../../core/MyButton\";\n\nexport default function ModifyStatusSettingComponent(props: any) {\n    const keyData = props.keyData;\n    const projectKey = props.projectKey;\n\n    const [value, setValue] = useState('');\n    const [type, setType] = useState('');\n    const [isNew, setIsNew] = useState(false);\n    const [isClosed, setIsClosed] = useState(false);\n    const options = [\n        {\n            key: \"1\",\n            label: \"Trạng thái dự án\",\n            value: 1\n        },\n        {\n            key: \"2\",\n            label: \"Trạng thái sprint\",\n            value: 2\n        },\n        {\n            key: \"3\",\n            label: \"Trạng thái công việc\",\n            value: 3\n        },\n        {\n            key: \"4\",\n            label: \"Trạng thái vấn đề\",\n            value: 4\n        }\n    ]\n\n    let loadData = useCallback(() => {\n        if (keyData !== undefined) {\n            SettingService.GetDetailSettingStatus(projectKey, keyData, (data: any) => {\n                console.log(data);\n                const row = data.data.data;\n                setValue(row.value);\n                setType(row.type);\n                setIsNew(row.isNew);\n                setIsClosed(row.isClosed);\n            })\n        }\n    }, [keyData, projectKey]);\n\n    useEffect(() => {\n        loadData();\n    }, [loadData])\n\n    function HandleCloseDrawer() {\n        props.setVisible(false);\n    }\n\n    function handleSubmitForm() {\n        let body = {\n            value: value,\n            type: type,\n            isNew: isNew,\n            isClosed: isClosed\n        };\n\n        props.setIsLoading(true);\n        if (props.keyData === undefined) {\n            Add(body);\n        } else {\n            Edit(body);\n        }\n    }\n\n    function Add(body: any) {\n        SettingService.AddSettingStatus(projectKey, body, (data: any) => {\n            Fn.PrintMsgSuccess(data);\n            props.loadData();\n            HandleCloseDrawer();\n        }, () => {\n            props.setIsLoading(false);\n        });\n    }\n\n    function Edit(body: any) {\n        SettingService.GetDetailSettingStatus(projectKey, keyData, (data: any) => {\n            body = Fn.GetTimestamp(data, body);\n            SettingService.EditSettingStatus(projectKey, keyData, body, (data: any) => {\n                Fn.PrintMsgSuccess(data);\n                props.loadData();\n            }, () => {\n                props.setIsLoading(false);\n            })\n        }, () => {\n            props.setIsLoading(false);\n        })\n    }\n\n    function HandleClickDelete() {\n       Swal.fire({\n        title: \"Bạn có muốn xóa không\",\n        text: \"Bạn có muốn xóa không\",\n        showConfirmButton: true,\n        showDenyButton: true,\n       }).then((result: any) => {\n        if (result.isConfirmed) {\n            Delete();\n        }\n    })\n    }\n\n    function Delete() {\n        props.setIsLoading(true);\n        SettingService.GetDetailSettingStatus(projectKey, keyData, (data: any) => {\n            SettingService.DeleteSettingStatus(projectKey, keyData, Fn.GetTimestamp(data), (data: any) => {\n                Fn.PrintMsgSuccess(data);\n                props.loadData();\n                HandleCloseDrawer();\n            }, () => {\n                props.setIsLoading(false);\n            })\n        }, () => {\n            props.setIsLoading(false);\n        })\n    }\n\n    return (\n        <Drawer\n            title={props.title}\n            open={props.visible}\n            onClose={HandleCloseDrawer}>\n            <Form\n                layout=\"vertical\"\n                onSubmitCapture={handleSubmitForm}>\n                <MyFormItem.Input\n                    label=\"Giá trị\"\n                    value={value}\n                    setValue={setValue} />\n\n                <MyFormItem.Select\n                    label=\"Loại trạng thái\"\n                    options={options}\n                    value={type}\n                    setValue={setType} />\n\n                <MyFormItem.Switch\n                    label=\"Trạng thái mới\"\n                    value={isNew}\n                    setValue={setIsNew} />\n\n                <MyFormItem.Switch\n                    label=\"Trạng thái đóng\"\n                    value={isClosed}\n                    setValue={setIsClosed} />\n\n                <MyButton\n                    type=\"success\"\n                    htmlType=\"submit\"\n                    isLoading={props.isLoading}\n                    value={props.keyData !== undefined ? \"Sửa\" : \"Thêm\"} />\n\n                <MyButton\n                    type=\"danger\"\n                    value=\"Xóa\"\n                    isLoading={props.isLoading}\n                    onClick={HandleClickDelete}/>\n            </Form>\n        </Drawer>\n    );\n}","import { Badge, Col, Row } from \"antd\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { SettingService } from \"../../../../services/taskService\";\nimport { Box } from \"../../../core/MyBox\";\nimport { CheckCircleTwoTone } from '@ant-design/icons';\nimport { MyButton } from \"../../../core/MyButton\";\nimport ModifyStatusSettingComponent from \"./ModifyStatusSettingComponent\";\n\nexport default function StatusComponent(props: any) {\n    const projectKey = useParams().key;\n    const [dataSource, setDataSource] = useState([]);\n    const [visible, setVisible] = useState(false);\n    const [keyEdit, setKeyEdit] = useState<string | undefined>();\n    const [visibleEdit, setVisibleEdit] = useState(false);\n\n    const { setIsLoading } = props;\n    const loadData = useCallback(() => {\n        setIsLoading(true);\n        SettingService.GetListSettingStatus(projectKey, \"1,2,3,4\", (data: any) => {\n            setDataSource(data.data.data);\n        }, undefined, () => {\n            setIsLoading(false);\n        })\n    }, [projectKey, setIsLoading]);\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n    function handleClickAdd() {\n        setVisible(true);\n    }\n\n    function handleClickDetail(key: string | undefined) {\n        setKeyEdit(key);\n        setVisibleEdit(true);\n    }\n\n    function RenderType(type: number) {\n        let valueType = \"\";\n        let colorType = \"\";\n        switch (type) {\n            case 1:\n                valueType = \"Trạng thái dự án\";\n                colorType = \"blue\"\n                break;\n            case 2:\n                valueType = \"Trạng thái sprint\";\n                colorType = \"red\"\n                break;\n            case 3:\n                valueType = \"Trạng thái công việc\";\n                colorType = \"yellow\"\n                break;\n            case 4:\n                valueType = \"Trạng thái vấn đề\";\n                colorType = \"green\"\n                break;\n\n            default:\n                break;\n        }\n\n        return (\n            <Badge color={colorType} text={valueType} />\n        );\n    }\n    function RenderData() {\n        return dataSource.map((data: any, index: number) => {\n            return (\n                <Col span={4} key={index} onClick={() => {\n                    handleClickDetail(data.key);\n                }}>\n                    <Box>\n                        <p>Value: {data.value}</p>\n                        <p>Loại: {RenderType(data.type)}</p>\n                        <p>Trạng thái mới: {data.isNew ? <CheckCircleTwoTone twoToneColor=\"#52c41a\" /> : \"\"} </p>\n                        <p>Trạng thái đóng: {data.isClosed ? <CheckCircleTwoTone twoToneColor=\"#52c41a\" /> : \"\"}</p>\n                    </Box>\n                </Col>\n            );\n        });\n    }\n    return (\n        <Box title=\"Quản lý trạng thái\">\n            <MyButton type=\"primary\" value=\"Thêm trạng thái\" onClick={handleClickAdd} />\n            <Row gutter={12}>\n                {RenderData()}\n            </Row>\n            <ModifyStatusSettingComponent\n                title=\"Thêm mới trạng thái\"\n                projectKey={projectKey}\n                visible={visible}\n                setVisible={setVisible}\n                loadData={loadData}\n                isLoading={props.isLoading}\n                setIsLoading={props.setIsLoading} />\n\n            <ModifyStatusSettingComponent\n                title=\"Sửa đổi trạng thái\"\n                keyData={keyEdit}\n                projectKey={projectKey}\n                visible={visibleEdit}\n                setVisible={setVisibleEdit}\n                loadData={loadData}\n                isLoading={props.isLoading}\n                setIsLoading={props.setIsLoading} />\n        </Box>\n    )\n}","import { Tabs } from \"antd\";\nimport { useState } from \"react\";\nimport { MyBox } from \"../../../core/MyBox\";\nimport ImportFileComponent from \"./ImportFileComponent\";\nimport OtherComponent from \"./OtherComponent\";\nimport StatusComponent from \"./StatusComponent\";\n\nexport default function SettingComponent() {\n    const [isLoading, setIsLoading] = useState(false);\n\n    const items: any = [\n        {\n            label: \"Trạng thái\",\n            key: \"item_1\",\n            children: (\n                <StatusComponent\n                    isLoading={isLoading}\n                    setIsLoading={setIsLoading} />\n            )\n        },\n        {\n            label: \"Độ ưu tiên\",\n            key: \"item_2\",\n            children: (\n                <OtherComponent\n                    isLoading={isLoading}\n                    setIsLoading={setIsLoading}\n                    type={5} />\n            )\n        },\n        {\n            label: \"Mức độ ảnh hưởng\",\n            key: \"item_3\",\n            children: (\n                <OtherComponent\n                    isLoading={isLoading}\n                    setIsLoading={setIsLoading}\n                    type={6} />\n            )\n        },\n        {\n            label: \"Quản lý tag\",\n            key: \"item_4\",\n            children: (\n                <OtherComponent\n                    isLoading={isLoading}\n                    setIsLoading={setIsLoading}\n                    type={7} />\n            )\n        },\n        {\n            label: \"Loại vấn đề\",\n            key: \"item_5\",\n            children: (\n                <OtherComponent\n                    isLoading={isLoading}\n                    setIsLoading={setIsLoading}\n                    type={8} />\n            )\n        },\n        {\n            label: \"Xuất file\",\n            key: \"item_6\",\n            children: (\n                <ImportFileComponent\n                    isLoading={isLoading}\n                    setIsLoading={setIsLoading} />\n            )\n        }\n    ];\n\n    return (\n        <MyBox\n            title=\"Cài đặt dự án\"\n            isLoading={isLoading}>\n            <Tabs defaultActiveKey=\"item_6\" centered items={items} />\n        </MyBox>\n    )\n}","import { MyAxios } from \"../helper/myaxios\";\nimport { PaginationRequest } from \"../models/baseModel\";\n\nclass TaskProjectManageService {\n    static GetQrCode(key: string) {\n        var url = `${MyAxios.BaseURL}/user/qrCode?data=taskManage_projectManage_${key}`;\n        return url;\n    }\n\n    static GetLog(projectKey: string | undefined, paginationRequest: PaginationRequest, then?: any, exp?: any, final?: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/logs?${paginationRequest.generateQueryString()}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static GetClone(projectKey: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/duplicate`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static ProcessClone(projectKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/duplicate`;\n        return MyAxios.Post(url, body, then, exp, final);\n    }\n\n    static GetList(paginationRequest: PaginationRequest, then?: any, exp?: any, final?: any) {\n        var url = `v2/tools/taskManages/projects?${paginationRequest.generateQueryString()}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static GetDetail(key: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `v2/tools/taskManages/projects/${key}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static Search(q: string, then?: any, exp?: any, final?: any) {\n        var url = `v2/tools/taskManages/projects/query?q=${q}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static Add(body: any, then?: any, exp?: any, final?: any) {\n        var url = `v2/tools/taskManages/projects`;\n        console.log(body);\n\n        return MyAxios.Post(url, body, then, exp, final);\n    }\n\n    static Edit(key: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `v2/tools/taskManages/projects/${key}`;\n        return MyAxios.Put(url, body, then, exp, final);\n    }\n\n    static Delete(key: string | undefined, timestamp: string, then?: any, exp?: any, final?: any) {\n        var url = `v2/tools/taskManages/projects/${key}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxios.Delete(url, then, exp, final);\n    }\n}\n\nclass TaskSprintManageService {\n    static GetList(projectKey: string | undefined, paginationRequest: PaginationRequest | undefined, then?: any, exp?: any, final?: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints${paginationRequest === undefined ? \"\" : \"?\" + paginationRequest?.generateQueryString()}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static GetDetail(projectKey: string | undefined, sprintKey: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static Add(projectKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints`;\n        return MyAxios.Post(url, body, then, exp, final);\n    }\n\n    static Edit(projectKey: string | undefined, sprintKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}`;\n        return MyAxios.Put(url, body, then, exp, final);\n    }\n\n    static Delete(projectKey: string | undefined, sprintKey: string | undefined, timestamp: string, then?: any, exp?: any, final?: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxios.Delete(url, then, exp, final);\n    }\n}\n\nclass TaskToDoListService {\n    static GetList(projectKey: string | undefined, sprintKey: string | undefined, paginationRequest: PaginationRequest | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/sprints/${sprintKey}/toDoLists?${paginationRequest?.generateQueryString()}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static GetDetail(projectKey: string | undefined, sprintKey: string | undefined, key: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/sprints/${sprintKey}/toDoLists/${key}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static Add(projectKey: string | undefined, sprintKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/sprints/${sprintKey}/toDoLists`;\n        return MyAxios.Post(url, body, then, exp, final);\n    }\n\n    static Edit(projectKey: string | undefined, sprintKey: string | undefined, key: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/sprints/${sprintKey}/toDoLists/${key}`;\n        return MyAxios.Put(url, body, then, exp, final);\n    }\n\n    static Delete(projectKey: string | undefined, sprintKey: string | undefined, key: string | undefined, timestamp: string, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/sprints/${sprintKey}/toDoLists/${key}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxios.Delete(url, then, exp, final);\n    }\n}\n\nclass SettingService {\n    static GetListSettingStatus(projectKey: string | undefined, type: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings?type=${type}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static GetDetailSettingStatus(projectKey: string | undefined, settingKey: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/${settingKey}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static AddSettingStatus(projectKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings`;\n        return MyAxios.Post(url, body, then, exp, final);\n    }\n\n    static EditSettingStatus(projectKey: string | undefined, settingKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/${settingKey}`;\n        return MyAxios.Put(url, body, then, exp, final);\n    }\n\n    static DeleteSettingStatus(projectKey: string | undefined, settingKey: string | undefined, timestamp: string, then?: any, exp?: any, final?: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/${settingKey}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxios.Delete(url, then, exp, final);\n    }\n    // Other\n    // static GetListSettingOther(projectKey: string | undefined, type: number, then?: any, exp?: any, final?: any) {\n    //     var url = `tools/tasks/projects/${projectKey}/settingOther?type=${type}`;\n    //     return MyAxios.Get(url, then, exp, final);\n    // }\n\n    // static GetDetailSettingOther(projectKey: string | undefined, settingKey: string | undefined, then?: any, exp?: any, final?: any) {\n    //     var url = `tools/tasks/projects/${projectKey}/settingOther/${settingKey}`;\n    //     return MyAxios.Get(url, then, exp, final);\n    // }\n\n    // static AddSettingOther(projectKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n    //     var url = `tools/tasks/projects/${projectKey}/settingOther`;\n    //     return MyAxios.Post(url, body, then, exp, final);\n    // }\n\n    // static EditSettingOther(projectKey: string | undefined, settingKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n    //     var url = `tools/tasks/projects/${projectKey}/settingOther/${settingKey}`;\n    //     return MyAxios.Put(url, body, then, exp, final);\n    // }\n\n    // static DeleteSettingOther(projectKey: string | undefined, settingKey: string | undefined, timestamp: string, then?: any, exp?: any, final?: any) {\n    //     var url = `tools/tasks/projects/${projectKey}/settingOther/${settingKey}?timestamp=${encodeURIComponent(timestamp)}`;\n    //     return MyAxios.Delete(url, then, exp, final);\n    // }\n\n    static SearchByType(projectKey: string | undefined, type: number, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/settings/query?type=${type}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static Import(projectKey: string | undefined, formData: FormData, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/settings/import`;\n        return MyAxios.Post(url, formData, then, exp, final);\n    }\n\n    static Export(projectKey: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/settings/export`;\n        return MyAxios.GetFile(url, then, exp, final);\n    }\n}\n\nclass VariableService {\n    static GetList(projectKey: string | undefined, paginationRequest: PaginationRequest, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/workflow/variables?${paginationRequest.generateQueryString()}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static GetDetail(projectKey: string | undefined, key: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/workflow/variables/${key}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static Add(projectKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/workflow/variables`;\n        return MyAxios.Post(url, body, then, exp, final);\n    }\n\n    static Edit(projectKey: string | undefined, key: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/workflow/variables/${key}`;\n        return MyAxios.Put(url, body, then, exp, final);\n    }\n\n    static Delete(projectKey: string | undefined, key: string | undefined, timestamp: string, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/workflow/variables/${key}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxios.Delete(url, then, exp, final);\n    }\n}\n\nclass DocumentService {\n    static GetList(projectKey: string | undefined, paginationRequest: PaginationRequest, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/documents/folders?${paginationRequest.generateQueryString()}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static GetDetail(projectKey: string | undefined, key: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/documents/folders/${key}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static Add(projectKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/documents/folders`;\n        return MyAxios.Post(url, body, then, exp, final);\n    }\n\n    static Edit(projectKey: string | undefined, key: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/documents/folders/${key}`;\n        return MyAxios.Put(url, body, then, exp, final);\n    }\n\n    static Delete(projectKey: string | undefined, key: string | undefined, timestamp: string, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/documents/folders/${key}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxios.Delete(url, then, exp, final);\n    }\n}\n\nclass ApiDocService {\n    static GetList(projectKey: string | undefined, folderKey: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/documents/folders/${folderKey}/apiDocs`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static GetDetail(projectKey: string | undefined, folderKey: string | undefined, key: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/documents/folders/${folderKey}/apiDocs/${key}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static Add(projectKey: string | undefined, folderKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/documents/folders/${folderKey}/apiDocs`;\n        return MyAxios.Post(url, body, then, exp, final);\n    }\n\n    static Edit(projectKey: string | undefined, folderKey: string | undefined, key: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/documents/folders/${folderKey}/apiDocs/${key}`;\n        return MyAxios.Put(url, body, then, exp, final);\n    }\n\n    static Delete(projectKey: string | undefined, folderKey: string | undefined, key: string | undefined, timestamp: string, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/documents/folders/${folderKey}/apiDocs/${key}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxios.Delete(url, then, exp, final);\n    }\n\n    static RunApi(projectKey: string | undefined, folderKey: string | undefined, key: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/documents/folders/${folderKey}/apiDocs/${key}/runApi`;\n        return MyAxios.Post(url, {}, then, exp, final);\n    }\n\n    static SaveResponse(projectKey: string | undefined, folderKey: string | undefined, apiDocKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/documents/folders/${folderKey}/apiDocs/${apiDocKey}/responses`;\n        return MyAxios.Post(url, body, then, exp, final);\n    }\n}\n\nexport {\n    TaskProjectManageService,\n    TaskSprintManageService,\n    TaskToDoListService,\n    SettingService,\n    VariableService,\n    DocumentService,\n    ApiDocService\n}"],"names":["MyInput","props","onClick","value","onChange","undefined","target","setValue","required","readOnly","MyFormItem","label","Input","format","moment","inputReadOnly","showTime","disabled","min","max","className","span","colSpan1","colSpan2","Number","options","TextArea","Password","Search","loading","onSearch","checked","type","files","ImportFileComponent","useState","file","setFile","projectKey","useParams","key","MyButton","setIsLoading","SettingService","data","blob","Blob","console","log","url","URL","createObjectURL","window","open","formData","FormData","append","Fn","doUpload","ModifyOtherSettingComponent","loadData","useCallback","keyData","onClose","setVisible","useEffect","visible","title","layout","onSubmitCapture","body","Edit","Add","htmlType","isLoading","Swal","text","then","confirm","isConfirmed","OtherComponent","dataSource","setDataSource","visibleEdit","setVisibleEdit","keyEdit","setKeyEidt","map","index","gutter","style","textAlign","ModifyStatusSettingComponent","setType","isNew","setIsNew","isClosed","setIsClosed","row","HandleCloseDrawer","showConfirmButton","showDenyButton","result","StatusComponent","setKeyEdit","RenderType","valueType","colorType","color","CheckCircleTwoTone","twoToneColor","SettingComponent","items","children","MyBox","defaultActiveKey","centered","TaskProjectManageService","MyAxios","paginationRequest","exp","final","generateQueryString","q","timestamp","encodeURIComponent","TaskSprintManageService","sprintKey","TaskToDoListService","settingKey","VariableService","DocumentService","ApiDocService","folderKey","apiDocKey"],"sourceRoot":""}
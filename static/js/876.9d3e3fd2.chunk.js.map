{"version":3,"file":"static/js/876.9d3e3fd2.chunk.js","mappings":"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","sources":["components/tool/task/settings/ImportFileComponent.tsx","components/tool/task/settings/ModifyOtherSettingComponent.tsx","components/tool/task/settings/OtherComponent.tsx","components/tool/task/settings/ModifyStatusSettingComponent.tsx","components/tool/task/settings/StatusComponent.tsx","components/tool/task/settings/SettingComponent.tsx","helper/function.ts","services/taskService.ts"],"sourcesContent":["import { Box } from \"../../../core/MyBox\";\r\nimport { MyFormItem } from \"../../../core/Input\";\r\nimport { useState } from \"react\";\r\nimport { MyButton } from \"../../../core/MyButton\";\r\nimport { SettingService } from \"../../../../services/taskService\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Fn } from \"../../../../helper/function\";\r\n\r\nexport default function ImportFileComponent(props: any) {\r\n    const { setIsLoading } = props;\r\n    const [file, setFile] = useState<string | Blob>();\r\n    const projectKey = useParams().key;\r\n    function handleOnClick() {\r\n        doUpload();\r\n    }\r\n\r\n    function doUpload() {\r\n        setIsLoading(true);\r\n        const formData = new FormData();\r\n        if (file) {\r\n            formData.append(\"file\", file);\r\n        }\r\n\r\n        SettingService.Import(projectKey, formData)\r\n            .then((rs: any) => {\r\n                if (rs.isSuccess) {\r\n                    Fn.PrintMsgSuccess(rs);\r\n                }\r\n            })\r\n            .finally(() => setIsLoading(false));\r\n    }\r\n\r\n    function handleOnClickExport() {\r\n        setIsLoading(true);\r\n        SettingService.Export(projectKey)\r\n            .then((rs: any) => {\r\n                if (rs.isSuccess) {\r\n                    var blob = new Blob([rs.data], { type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" });\r\n                    var url = URL.createObjectURL(blob);\r\n                    window.open(url);\r\n                }\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            <MyButton\r\n                type=\"primary\"\r\n                onClick={handleOnClickExport}\r\n                value=\"Export file\" />\r\n\r\n            <MyButton\r\n                type=\"success\"\r\n                onClick={handleOnClick}\r\n                value=\"Import file\"\r\n                disabled={file === undefined} />\r\n\r\n            <MyFormItem.File\r\n                value={file}\r\n                setValue={setFile} />\r\n        </Box>\r\n    )\r\n}","import { Drawer, Form } from \"antd\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Fn } from \"../../../../helper/function\";\r\nimport { SettingService } from \"../../../../services/taskService\";\r\nimport { MyFormItem } from \"../../../core/Input\";\r\nimport { MyButton } from \"../../../core/MyButton\";\r\n\r\nexport default function ModifyOtherSettingComponent(props: any) {\r\n    const [value, setValue] = useState('');\r\n    const { isLoading, setIsLoading, projectKey, keyData, visible, setVisible, type, loadData } = props;\r\n    const loadDataDetail = useCallback(() => {\r\n        if (keyData !== undefined) {\r\n            setIsLoading(true);\r\n            SettingService.GetDetailSettingStatus(projectKey, keyData)\r\n                .then((rs: any) => {\r\n                    if (rs.isSuccess) {\r\n                        setValue(rs.data.value);\r\n                    }\r\n                })\r\n                .finally(() => setIsLoading(false));\r\n        }\r\n    }, [projectKey, keyData, setIsLoading]);\r\n\r\n    useEffect(() => {\r\n        loadDataDetail();\r\n    }, [loadDataDetail]);\r\n\r\n    function onClose() {\r\n        setVisible(false);\r\n    }\r\n\r\n    function handleSubmitForm() {\r\n        var body = {\r\n            value: value,\r\n            type: type\r\n        };\r\n\r\n        setIsLoading(true);\r\n        if (keyData !== undefined) {\r\n            Edit(body);\r\n        } else {\r\n            Add(body);\r\n        }\r\n    }\r\n\r\n    function Add(body: any) {\r\n        SettingService.AddSettingStatus(projectKey, body)\r\n            .then((rs: any) => {\r\n                if (rs.isSuccess) {\r\n                    Fn.PrintMsgSuccess(rs);\r\n                    loadData();\r\n                }\r\n            })\r\n            .finally(() => setIsLoading(false));\r\n    }\r\n\r\n    function Edit(body: any) {\r\n        SettingService.GetDetailSettingStatus(projectKey, keyData)\r\n            .then((rs: any) => {\r\n                if (rs.isSuccess) {\r\n                    body = Fn.GetTimestamp(rs, body);\r\n                    SettingService.EditSettingStatus(projectKey, keyData, body)\r\n                        .then((rs: any) => {\r\n                            if (rs.isSuccess) {\r\n                                Fn.PrintMsgSuccess(rs);\r\n                                loadData();\r\n                            }\r\n                        })\r\n                        .finally(() => setIsLoading(false));\r\n                } else setIsLoading(false);\r\n            })\r\n    }\r\n\r\n    function handleClickDelete() {\r\n        Swal.fire({\r\n            title: \"Xác nhận xóa\",\r\n            text: 'Bạn có muốn xóa không?',\r\n        }).then((confirm) => {\r\n            if (confirm.isConfirmed) {\r\n                Delete();\r\n            }\r\n        })\r\n    }\r\n\r\n    function Delete() {\r\n        setIsLoading(true);\r\n        SettingService.GetDetailSettingStatus(projectKey, keyData)\r\n            .then((rs: any) => {\r\n                if (rs.isSuccess) {\r\n                    SettingService.DeleteSettingStatus(projectKey, keyData, Fn.GetTimestamp(rs))\r\n                        .then((rs: any) => {\r\n                            if (rs.isSuccess) {\r\n                                Fn.PrintMsgSuccess(rs);\r\n                                onClose();\r\n                                loadData();\r\n                            }\r\n                        })\r\n                        .finally(() => setIsLoading(false))\r\n                } else setIsLoading(false);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Drawer\r\n            open={visible}\r\n            onClose={onClose}\r\n            title={keyData !== undefined ? \"Chỉnh sửa\" : \"Thêm mới\"}>\r\n            <Form\r\n                layout=\"vertical\"\r\n                onSubmitCapture={handleSubmitForm}>\r\n                <MyFormItem.Input\r\n                    label=\"Giá trị\"\r\n                    value={value}\r\n                    setValue={setValue} />\r\n                <MyButton\r\n                    htmlType=\"submit\"\r\n                    isLoading={isLoading}\r\n                    type=\"success\"\r\n                    value={keyData !== undefined ? \"Chỉnh sửa\" : \"Thêm mới\"} />\r\n                <MyButton\r\n                    type=\"danger\"\r\n                    isLoading={isLoading}\r\n                    onClick={handleClickDelete}\r\n                    value=\"Xóa\" />\r\n            </Form>\r\n        </Drawer>\r\n    );\r\n}","import { Col, Row } from \"antd\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { SettingService } from \"../../../../services/taskService\";\r\nimport { Box } from \"../../../core/MyBox\";\r\nimport { MyButton } from \"../../../core/MyButton\";\r\nimport ModifyOtherSettingComponent from \"./ModifyOtherSettingComponent\";\r\n\r\nexport default function OtherComponent(props: any) {\r\n    const projectKey = useParams().key;\r\n    const [dataSource, setDataSource] = useState([]);\r\n    const [visible, setVisible] = useState(false);\r\n    const [visibleEdit, setVisibleEdit] = useState(false);\r\n    const [keyEdit, setKeyEidt] = useState<string | undefined>(undefined);\r\n\r\n    const { isLoading, setIsLoading, type } = props;\r\n\r\n    let loadData = useCallback(() => {\r\n        setIsLoading(true);\r\n        SettingService.GetListSettingStatus(projectKey, type)\r\n            .then((rs: any) => {\r\n                if (rs.isSuccess) {\r\n                    setDataSource(rs.data);\r\n                }\r\n            })\r\n            .finally(() => setIsLoading(false));\r\n    }, [projectKey, type, setIsLoading]);\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n    }, [loadData]);\r\n\r\n    function handleClickAdd() {\r\n        setVisible(true);\r\n    }\r\n\r\n    function handleClickEdit(key: string | undefined) {\r\n        setVisibleEdit(true);\r\n        setKeyEidt(key);\r\n    }\r\n\r\n    function RenderData() {\r\n        return dataSource.map((data: any, index: number) => {\r\n            return (\r\n                <Box key={index}>\r\n                    <Row gutter={12}>\r\n                        <Col span={12}>\r\n                            {data.value}\r\n                        </Col>\r\n                        <Col span={12} style={{ textAlign: \"right\" }}>\r\n                            <MyButton onClick={() => {\r\n                                handleClickEdit(data.key)\r\n                            }} value=\"Chỉnh sửa\" />\r\n                        </Col>\r\n                    </Row>\r\n                </Box>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            <MyButton\r\n                type=\"primary\"\r\n                value=\"Thêm mới\"\r\n                onClick={handleClickAdd} />\r\n            {RenderData()}\r\n\r\n            <ModifyOtherSettingComponent\r\n                projectKey={projectKey}\r\n                type={type}\r\n                visible={visible}\r\n                setVisible={setVisible}\r\n                isLoading={isLoading}\r\n                setIsLoading={setIsLoading}\r\n                loadData={loadData} />\r\n\r\n            <ModifyOtherSettingComponent\r\n                projectKey={projectKey}\r\n                type={type}\r\n                visible={visibleEdit}\r\n                setVisible={setVisibleEdit}\r\n                isLoading={isLoading}\r\n                setIsLoading={setIsLoading}\r\n                keyData={keyEdit}\r\n                loadData={loadData} />\r\n        </Box>\r\n    );\r\n}","import { Drawer, Form } from \"antd\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Fn } from \"../../../../helper/function\";\r\nimport { SettingService } from \"../../../../services/taskService\";\r\nimport { MyFormItem } from \"../../../core/Input\";\r\nimport { MyButton } from \"../../../core/MyButton\";\r\n\r\nexport default function ModifyStatusSettingComponent(props: any) {\r\n    const [value, setValue] = useState('');\r\n    const [type, setType] = useState('');\r\n    const [isNew, setIsNew] = useState(false);\r\n    const [isClosed, setIsClosed] = useState(false);\r\n\r\n    const { title, isLoading, setIsLoading, projectKey, keyData, visible, setVisible, loadData } = props;\r\n\r\n    const options = [\r\n        {\r\n            key: \"1\",\r\n            label: \"Trạng thái dự án\",\r\n            value: 1\r\n        },\r\n        {\r\n            key: \"2\",\r\n            label: \"Trạng thái sprint\",\r\n            value: 2\r\n        },\r\n        {\r\n            key: \"3\",\r\n            label: \"Trạng thái công việc\",\r\n            value: 3\r\n        },\r\n        {\r\n            key: \"4\",\r\n            label: \"Trạng thái vấn đề\",\r\n            value: 4\r\n        }\r\n    ]\r\n\r\n    let loadDataDetail = useCallback(() => {\r\n        if (keyData !== undefined) {\r\n            setIsLoading(true);\r\n            SettingService.GetDetailSettingStatus(projectKey, keyData)\r\n                .then((rs: any) => {\r\n                    if (rs.isSuccess) {\r\n                        const row = rs.data;\r\n                        setValue(row.value);\r\n                        setType(row.type);\r\n                        setIsNew(row.isNew);\r\n                        setIsClosed(row.isClosed);\r\n                    }\r\n                })\r\n                .finally(() => setIsLoading(false));\r\n        }\r\n    }, [keyData, projectKey, setIsLoading]);\r\n\r\n    useEffect(() => {\r\n        loadDataDetail();\r\n    }, [loadDataDetail])\r\n\r\n    function HandleCloseDrawer() {\r\n        setVisible(false);\r\n    }\r\n\r\n    function handleSubmitForm() {\r\n        let body = {\r\n            value: value,\r\n            type: type,\r\n            isNew: isNew,\r\n            isClosed: isClosed\r\n        };\r\n\r\n        setIsLoading(true);\r\n        if (keyData === undefined) {\r\n            Add(body);\r\n        } else {\r\n            Edit(body);\r\n        }\r\n    }\r\n\r\n    function Add(body: any) {\r\n        SettingService.AddSettingStatus(projectKey, body)\r\n            .then((rs: any) => {\r\n                if (rs.isSuccess) {\r\n                    Fn.PrintMsgSuccess(rs);\r\n                    loadData();\r\n                    HandleCloseDrawer();\r\n                }\r\n            })\r\n            .finally(() => { setIsLoading(false) });\r\n    }\r\n\r\n    function Edit(body: any) {\r\n        SettingService.GetDetailSettingStatus(projectKey, keyData)\r\n            .then((rs: any) => {\r\n                if (rs.isSuccess) {\r\n                    body = Fn.GetTimestamp(rs, body);\r\n                    SettingService.EditSettingStatus(projectKey, keyData, body)\r\n                        .then((rs: any) => {\r\n                            if (rs.isSuccess) {\r\n                                Fn.PrintMsgSuccess(rs);\r\n                                loadData();\r\n                            }\r\n                        })\r\n                        .finally(() => setIsLoading(false));\r\n                } else setIsLoading(false);\r\n            })\r\n    }\r\n\r\n    function HandleClickDelete() {\r\n        Swal.fire({\r\n            title: \"Bạn có muốn xóa không\",\r\n            text: \"Bạn có muốn xóa không\",\r\n            showConfirmButton: true,\r\n            showDenyButton: true,\r\n        }).then((result: any) => {\r\n            if (result.isConfirmed) {\r\n                Delete();\r\n            }\r\n        })\r\n    }\r\n\r\n    function Delete() {\r\n        setIsLoading(true);\r\n        SettingService.GetDetailSettingStatus(projectKey, keyData)\r\n            .then((rs: any) => {\r\n                if (rs.isSuccess) {\r\n                    SettingService.DeleteSettingStatus(projectKey, keyData, Fn.GetTimestamp(rs))\r\n                        .then((rs: any) => {\r\n                            if (rs.isSuccess) {\r\n                                Fn.PrintMsgSuccess(rs);\r\n                                loadData();\r\n                                HandleCloseDrawer();\r\n                            }\r\n                        })\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Drawer\r\n            title={title}\r\n            open={visible}\r\n            onClose={HandleCloseDrawer}>\r\n            <Form\r\n                layout=\"vertical\"\r\n                onSubmitCapture={handleSubmitForm}>\r\n                <MyFormItem.Input\r\n                    label=\"Giá trị\"\r\n                    value={value}\r\n                    setValue={setValue} />\r\n\r\n                <MyFormItem.Select\r\n                    label=\"Loại trạng thái\"\r\n                    options={options}\r\n                    value={type}\r\n                    setValue={setType} />\r\n\r\n                <MyFormItem.Switch\r\n                    label=\"Trạng thái mới\"\r\n                    value={isNew}\r\n                    setValue={setIsNew} />\r\n\r\n                <MyFormItem.Switch\r\n                    label=\"Trạng thái đóng\"\r\n                    value={isClosed}\r\n                    setValue={setIsClosed} />\r\n\r\n                <MyButton\r\n                    type=\"success\"\r\n                    htmlType=\"submit\"\r\n                    isLoading={isLoading}\r\n                    value={keyData !== undefined ? \"Sửa\" : \"Thêm\"} />\r\n\r\n                <MyButton\r\n                    type=\"danger\"\r\n                    value=\"Xóa\"\r\n                    isLoading={isLoading}\r\n                    onClick={HandleClickDelete} />\r\n            </Form>\r\n        </Drawer>\r\n    );\r\n}","import { Badge, Col, Row } from \"antd\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { SettingService } from \"../../../../services/taskService\";\r\nimport { Box } from \"../../../core/MyBox\";\r\nimport { CheckCircleTwoTone } from '@ant-design/icons';\r\nimport { MyButton } from \"../../../core/MyButton\";\r\nimport ModifyStatusSettingComponent from \"./ModifyStatusSettingComponent\";\r\n\r\nexport default function StatusComponent(props: any) {\r\n    const projectKey = useParams().key;\r\n    const [dataSource, setDataSource] = useState([]);\r\n    const [visible, setVisible] = useState(false);\r\n    const [keyEdit, setKeyEdit] = useState<string | undefined>();\r\n    const [visibleEdit, setVisibleEdit] = useState(false);\r\n\r\n    const { isLoading, setIsLoading } = props;\r\n    const loadData = useCallback(() => {\r\n        setIsLoading(true);\r\n        SettingService.GetListSettingStatus(projectKey, \"1,2,3,4\")\r\n            .then((rs: any) => {\r\n                if (rs.isSuccess) {\r\n                    setDataSource(rs.data);\r\n                }\r\n            })\r\n            .finally(() => setIsLoading(false));\r\n    }, [projectKey, setIsLoading]);\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n    }, [loadData]);\r\n\r\n    function handleClickAdd() {\r\n        setVisible(true);\r\n    }\r\n\r\n    function handleClickDetail(key: string | undefined) {\r\n        setKeyEdit(key);\r\n        setVisibleEdit(true);\r\n    }\r\n\r\n    function RenderType(type: number) {\r\n        let valueType = \"\";\r\n        let colorType = \"\";\r\n        switch (type) {\r\n            case 1:\r\n                valueType = \"Trạng thái dự án\";\r\n                colorType = \"blue\"\r\n                break;\r\n            case 2:\r\n                valueType = \"Trạng thái sprint\";\r\n                colorType = \"red\"\r\n                break;\r\n            case 3:\r\n                valueType = \"Trạng thái công việc\";\r\n                colorType = \"yellow\"\r\n                break;\r\n            case 4:\r\n                valueType = \"Trạng thái vấn đề\";\r\n                colorType = \"green\"\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return (\r\n            <Badge color={colorType} text={valueType} />\r\n        );\r\n    }\r\n    function RenderData() {\r\n        return dataSource.map((data: any, index: number) => {\r\n            return (\r\n                <Col span={4} key={index} onClick={() => {\r\n                    handleClickDetail(data.key);\r\n                }}>\r\n                    <Box>\r\n                        <p>Value: {data.value}</p>\r\n                        <p>Loại: {RenderType(data.type)}</p>\r\n                        <p>Trạng thái mới: {data.isNew ? <CheckCircleTwoTone twoToneColor=\"#52c41a\" /> : \"\"} </p>\r\n                        <p>Trạng thái đóng: {data.isClosed ? <CheckCircleTwoTone twoToneColor=\"#52c41a\" /> : \"\"}</p>\r\n                    </Box>\r\n                </Col>\r\n            );\r\n        });\r\n    }\r\n    return (\r\n        <Box title=\"Quản lý trạng thái\">\r\n            <MyButton type=\"primary\" value=\"Thêm trạng thái\" onClick={handleClickAdd} />\r\n            <Row gutter={12}>\r\n                {RenderData()}\r\n            </Row>\r\n            <ModifyStatusSettingComponent\r\n                title=\"Thêm mới trạng thái\"\r\n                projectKey={projectKey}\r\n                visible={visible}\r\n                setVisible={setVisible}\r\n                loadData={loadData}\r\n                isLoading={isLoading}\r\n                setIsLoading={setIsLoading} />\r\n\r\n            <ModifyStatusSettingComponent\r\n                title=\"Sửa đổi trạng thái\"\r\n                keyData={keyEdit}\r\n                projectKey={projectKey}\r\n                visible={visibleEdit}\r\n                setVisible={setVisibleEdit}\r\n                loadData={loadData}\r\n                isLoading={isLoading}\r\n                setIsLoading={setIsLoading} />\r\n        </Box>\r\n    )\r\n}","import { Tabs } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { MyBox } from \"../../../core/MyBox\";\r\nimport ImportFileComponent from \"./ImportFileComponent\";\r\nimport OtherComponent from \"./OtherComponent\";\r\nimport StatusComponent from \"./StatusComponent\";\r\n\r\nexport default function SettingComponent() {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const items: any = [\r\n        {\r\n            label: \"Trạng thái\",\r\n            key: \"item_1\",\r\n            children: (\r\n                <StatusComponent\r\n                    isLoading={isLoading}\r\n                    setIsLoading={setIsLoading} />\r\n            )\r\n        },\r\n        {\r\n            label: \"Độ ưu tiên\",\r\n            key: \"item_2\",\r\n            children: (\r\n                <OtherComponent\r\n                    isLoading={isLoading}\r\n                    setIsLoading={setIsLoading}\r\n                    type={5} />\r\n            )\r\n        },\r\n        {\r\n            label: \"Mức độ ảnh hưởng\",\r\n            key: \"item_3\",\r\n            children: (\r\n                <OtherComponent\r\n                    isLoading={isLoading}\r\n                    setIsLoading={setIsLoading}\r\n                    type={6} />\r\n            )\r\n        },\r\n        {\r\n            label: \"Quản lý tag\",\r\n            key: \"item_4\",\r\n            children: (\r\n                <OtherComponent\r\n                    isLoading={isLoading}\r\n                    setIsLoading={setIsLoading}\r\n                    type={7} />\r\n            )\r\n        },\r\n        {\r\n            label: \"Loại vấn đề\",\r\n            key: \"item_5\",\r\n            children: (\r\n                <OtherComponent\r\n                    isLoading={isLoading}\r\n                    setIsLoading={setIsLoading}\r\n                    type={8} />\r\n            )\r\n        },\r\n        {\r\n            label: \"Xuất file\",\r\n            key: \"item_6\",\r\n            children: (\r\n                <ImportFileComponent\r\n                    isLoading={isLoading}\r\n                    setIsLoading={setIsLoading} />\r\n            )\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <MyBox\r\n            title=\"Cài đặt dự án\"\r\n            isLoading={isLoading}>\r\n            <Tabs defaultActiveKey=\"item_1\" centered items={items} />\r\n        </MyBox>\r\n    )\r\n}","import { message } from \"antd\";\r\nimport { PageInfoModel } from \"../components/core/TableModel\";\r\n\r\nexport class Fn {\r\n    static PrintMsg(err: any | null) {\r\n        if (err.response === undefined) {\r\n            return err.response;\r\n        }\r\n        return err.response.data.message;\r\n    };\r\n\r\n    static PrintMsgErr(err: any | null) {\r\n        message.error(this.PrintMsg(err));\r\n    };\r\n\r\n    static PrintMsgSuccess(data: any) {\r\n        message.success(data.message);\r\n    };\r\n\r\n    static FormatInputMoney(data: string | null) {\r\n        return `${data}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    }\r\n\r\n    static ParseInputMoney(data: string) {\r\n        return data.replace(/\\s?|(,*)/g, '');\r\n    }\r\n\r\n    static FormatMoney(money: number) {\r\n        return new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(money);\r\n    }\r\n\r\n    static FormatNumber(money: number) {\r\n        return new Intl.NumberFormat('vi-VN').format(money);\r\n    }\r\n\r\n    static GetIndexInArray = (datas: any, keySearch: string, value: string) => { // -1 khong tim thay\r\n        var result = -1;\r\n        for (var i = 0; i < datas.length; i++) {\r\n            if (datas[i][keySearch] === value) {\r\n                result = i;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static GetIndexInArrayStr = (datas: any, value: string) => { // -1 khong tim thay\r\n        var result = -1;\r\n        for (var i = 0; i < datas.length; i++) {\r\n            if (datas[i].trim() === value.trim()) {\r\n                result = i;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static SetPageInfo = (data: any, setTotal: any, setPageNumber: any, setPageSize: any) => {\r\n        var pageInfo = data.data.data.pageInfo;\r\n        setTotal(pageInfo.totalCount);\r\n        setPageNumber(pageInfo.currentPage);\r\n        setPageSize(pageInfo.pageSize);\r\n    }\r\n\r\n    static GetTimestamp = (data?: any, body?: any) => {\r\n        try {\r\n            if (body === null || body === undefined) {\r\n                return data.data.timestamp;\r\n            }\r\n            body.timestamp = data.data.timestamp;\r\n            return body;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    static RenderSTT(_data: any, _row: any, index: number, pageInfo: PageInfoModel) {\r\n        return ((pageInfo.pageNumber - 1) * pageInfo.pageSize) + index + 1;\r\n    }\r\n\r\n\r\n\r\n    // no use\r\n    static PrintMsgSuccess_no_use(data: any) {\r\n        message.success(data.data.message);\r\n    };\r\n    static GetTimestamp_no_use = (data?: any, body?: any) => {\r\n        try {\r\n            if (body === null || body === undefined) {\r\n                return data.data.data.timestamp;\r\n            }\r\n            body.timestamp = data.data.data.timestamp;\r\n            return body;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}","import { MethodHttp, MyHttp } from \"../helper/myaxios\";\r\nimport { PaginationRequest } from \"../models/baseModel\";\r\n\r\nclass TaskProjectManageService {\r\n    static GetQrCode(key: string) {\r\n        return `${MyHttp.BaseURL}/user/qrCode?data=taskManage_projectManage_${key}`;\r\n    }\r\n\r\n    static GetStatistic() {\r\n        var url = `v2/tools/taskManages/projects/statistic`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetLog(projectKey: string | undefined, paginationRequest: PaginationRequest) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/logs?${paginationRequest.generateQueryString()}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetClone(projectKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/duplicate`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static ProcessClone(projectKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/duplicate`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static GetList(paginationRequest: PaginationRequest) {\r\n        var url = `v2/tools/taskManages/projects?${paginationRequest.generateQueryString()}`;\r\n        return MyHttp.SendReq(url, \"GET\");\r\n    }\r\n\r\n    static GetDetail(key: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Search(q: string) {\r\n        var url = `v2/tools/taskManages/projects/query?query=${q}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Add(body: any) {\r\n        var url = `v2/tools/taskManages/projects`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Edit(key: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static Delete(key: string | undefined, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n}\r\n\r\nclass TaskSprintManageService {\r\n    static GetList(projectKey: string | undefined, paginationRequest: PaginationRequest) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints${paginationRequest === undefined ? \"\" : \"?\" + paginationRequest.generateQueryString()}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(projectKey: string | undefined, sprintKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Add(projectKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Edit(projectKey: string | undefined, sprintKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static Delete(projectKey: string | undefined, sprintKey: string | undefined, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n}\r\n\r\nclass TaskToDoListService {\r\n    static GetList(projectKey: string | undefined, sprintKey: string | undefined, paginationRequest: PaginationRequest | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}/toDoLists?${paginationRequest?.generateQueryString()}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(projectKey: string | undefined, sprintKey: string | undefined, key: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}/toDoLists/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Add(projectKey: string | undefined, sprintKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}/toDoLists`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Edit(projectKey: string | undefined, sprintKey: string | undefined, key: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}/toDoLists/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static Delete(projectKey: string | undefined, sprintKey: string | undefined, key: string | undefined, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}/toDoLists/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n}\r\n\r\nclass SettingService {\r\n    static GetListSettingStatus(projectKey: string | undefined, type: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings?type=${type}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetailSettingStatus(projectKey: string | undefined, settingKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/${settingKey}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static AddSettingStatus(projectKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static EditSettingStatus(projectKey: string | undefined, settingKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/${settingKey}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static DeleteSettingStatus(projectKey: string | undefined, settingKey: string | undefined, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/${settingKey}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n\r\n    static SearchByType(projectKey: string | undefined, type: number) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/query?type=${type}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Import(projectKey: string | undefined, formData: FormData) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/import`;\r\n        return MyHttp.SendReq(url, \"Post\", formData, true);\r\n    }\r\n\r\n    static Export(projectKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/export`;\r\n        return MyHttp.SendReq(url, \"Get\", undefined, true);\r\n    }\r\n}\r\n\r\nclass VariableService {\r\n    static GetList(projectKey: string | undefined, paginationRequest: PaginationRequest) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/variables?${paginationRequest.generateQueryString()}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(projectKey: string | undefined, key: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/variables/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Add(projectKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/variables`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Edit(projectKey: string | undefined, key: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/variables/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static Delete(projectKey: string | undefined, key: string | undefined, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/variables/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n\r\n    static GetHistory(projectKey: string | undefined, key: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/variables/${key}/histories`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n}\r\n\r\nclass DocumentService {\r\n    static GetList(projectKey: string | undefined, paginationRequest: PaginationRequest) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders?${paginationRequest.generateQueryString()}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(projectKey: string | undefined, key: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Add(projectKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Edit(projectKey: string | undefined, key: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static Delete(projectKey: string | undefined, key: string | undefined, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n}\r\n\r\nclass ApiDocService {\r\n    static GetList(projectKey: string | undefined, folderKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(projectKey: string | undefined, folderKey: string | undefined, key: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Add(projectKey: string | undefined, folderKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Edit(projectKey: string | undefined, folderKey: string | undefined, key: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static Delete(projectKey: string | undefined, folderKey: string | undefined, key: string | undefined, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n\r\n    static ExecApi(projectKey: string | undefined, folderKey: string | undefined, apiDocKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${apiDocKey}/exec`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Query(projectKey: string | undefined, q: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/apis/query?q=${q}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n}\r\n\r\nclass ApiDocResponseService {\r\n    static Getlist(projectKey: string | undefined, folderKey: string | undefined, apiDocKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${apiDocKey}/responses`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(projectKey: string | undefined, folderKey: string | undefined, apiDocKey: string | undefined, key: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${apiDocKey}/responses/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static SaveResponse(projectKey: string | undefined, folderKey: string | undefined, apiDocKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${apiDocKey}/responses`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Delete(projectKey: string | undefined, folderKey: string | undefined, apiDocKey: string | undefined, key: string | undefined, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${apiDocKey}/responses/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n}\r\n\r\nclass WorkflowService {\r\n    static GetList(paginationRequest: PaginationRequest) {\r\n        var url = `v2/tools/taskManages/workflows?${paginationRequest.generateQueryString()}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(projectKey: string, key: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Add(projectKey: string, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Edit(projectKey: string, key: string, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static Delete(projectKey: string, key: string, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n}\r\n\r\nclass WorkflowDetailService {\r\n    static GetList(paginationRequest: PaginationRequest, projectKey: string | undefined, workflowKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/details?${paginationRequest.generateQueryString()}&orders=true`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(projectKey: string, workflowKey: string, key: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/details/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Add(projectKey: string, workflowKey: string, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/details`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Edit(projectKey: string, workflowKey: string, key: string, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/details/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static Delete(projectKey: string, workflowKey: string, key: string, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/details/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n\r\n    static SwapOrder(key: string, projectKey: string | undefined, workflowKey: string | undefined, isNext: boolean) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/details/${key}/swapOrders?isNext=${isNext}`;\r\n        return MyHttp.SendReq(url, \"Post\");\r\n    }\r\n}\r\n\r\nclass WorkflowRunService {\r\n    static GetList(paginationRequest: PaginationRequest, projectKey: string | undefined, workflowKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/histories?${paginationRequest.generateQueryString()}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(key: string | undefined, projectKey: string | undefined, workflowKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/histories/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Add(body: any, projectKey: string | undefined, workflowKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/histories`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Edit(key: string | undefined, body: any, projectKey: string | undefined, workflowKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/histories/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static Delete(key: string | undefined, timestamp: string, projectKey: string | undefined, workflowKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/histories/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n\r\n    static ExecApi(key: string | undefined, projectKey: string | undefined, workflowKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/histories/${key}/exec`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n}\r\n\r\nclass ApiPublicService {\r\n    static GetList(paginationRequest: PaginationRequest, projectKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/documentApi/public?${paginationRequest.generateQueryString()}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n    static GetDetail(projectKey: string | undefined, key: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/documentApi/public/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n    static Add(projectKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/documentApi/public`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n    static Edit(projectKey: string | undefined, key: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/documentApi/public/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n    static Delete(projectKey: string | undefined, key: string | undefined, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/documentApi/public/${key}?timestamp=${encodeURIComponent((timestamp))}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n\r\n    static GetListDetail(projectKey: string | undefined, key: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/documentApi/public/${key}/details`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static UpdateDetail(projectKey: string | undefined, key: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/documentApi/public/${key}/details`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static GetListPublicDocument(key: string | undefined, replaceVar: boolean) {\r\n        return MyHttp.SendReqV2({\r\n            url: `v2/tools/taskManages/publicDocuments/${key}?replaceVar=${replaceVar}`,\r\n            method: MethodHttp.Get,\r\n            isNoAuth: true\r\n        });\r\n    }\r\n}\r\n\r\nexport {\r\n    TaskProjectManageService,\r\n    TaskSprintManageService,\r\n    TaskToDoListService,\r\n    SettingService,\r\n    VariableService,\r\n    DocumentService,\r\n    ApiDocService,\r\n    ApiDocResponseService,\r\n    WorkflowService,\r\n    WorkflowDetailService,\r\n    WorkflowRunService,\r\n    ApiPublicService\r\n}"],"names":["ImportFileComponent","props","setIsLoading","useState","file","setFile","projectKey","useParams","key","MyButton","type","onClick","SettingService","then","rs","isSuccess","blob","Blob","data","url","URL","createObjectURL","window","open","finally","value","formData","FormData","append","Fn","doUpload","disabled","undefined","setValue","ModifyOtherSettingComponent","isLoading","keyData","visible","setVisible","loadData","loadDataDetail","useCallback","onClose","useEffect","title","layout","onSubmitCapture","body","Edit","Add","label","htmlType","Swal","text","confirm","isConfirmed","OtherComponent","dataSource","setDataSource","visibleEdit","setVisibleEdit","keyEdit","setKeyEidt","map","index","gutter","span","style","textAlign","ModifyStatusSettingComponent","setType","isNew","setIsNew","isClosed","setIsClosed","row","HandleCloseDrawer","options","showConfirmButton","showDenyButton","result","StatusComponent","setKeyEdit","RenderType","valueType","colorType","color","CheckCircleTwoTone","twoToneColor","SettingComponent","items","children","MyBox","defaultActiveKey","centered","err","response","message","this","PrintMsg","replace","money","Intl","NumberFormat","currency","format","_data","_row","pageInfo","pageNumber","pageSize","GetIndexInArray","datas","keySearch","i","length","GetIndexInArrayStr","trim","SetPageInfo","setTotal","setPageNumber","setPageSize","totalCount","currentPage","GetTimestamp","timestamp","error","console","log","GetTimestamp_no_use","TaskProjectManageService","MyHttp","paginationRequest","generateQueryString","q","encodeURIComponent","TaskSprintManageService","sprintKey","TaskToDoListService","settingKey","VariableService","DocumentService","ApiDocService","folderKey","apiDocKey","ApiDocResponseService","WorkflowService","WorkflowDetailService","workflowKey","isNext","WorkflowRunService","ApiPublicService","replaceVar","method","MethodHttp","isNoAuth"],"sourceRoot":""}
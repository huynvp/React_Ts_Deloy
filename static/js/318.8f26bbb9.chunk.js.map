{"version":3,"file":"static/js/318.8f26bbb9.chunk.js","mappings":"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","sources":["components/core/UI_FormatComponent.tsx","components/tool/task/sprintManage/DetailComponent.tsx","components/tool/task/sprintManage/IndexComponent.tsx"],"sourcesContent":["import moment from \"moment\";\n\nexport function UIFormatDateVNComponent(props: any) {\n    let dateStr = \"\";\n    if (props.value !== undefined && props.value !== '' && props.value !== null) {\n        dateStr = moment(props.value).format(\"DD/MM/YYYY\");\n    } else {\n        dateStr = \"\";\n    }\n\n    return (\n        <span>{dateStr}</span>\n    );\n}\n\nexport function UIFormatDateTimeVNComponent(props: any) {\n    let dateStr = \"\";\n    if (props.value !== undefined && props.value !== '' && props.value !== null) {\n        dateStr = moment(props.value).format(\"DD/MM/YYYY HH:mm:ss\");\n    } else {\n        dateStr = \"\";\n    }\n\n    return (\n        <span>{dateStr}</span>\n    );\n}","import { Col, Drawer, Form, Row } from \"antd\";\nimport moment from \"moment\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { Fn } from \"../../../../helper/function\";\nimport { TaskSprintManageService } from \"../../../../services/taskService\";\nimport { MyFormItem } from \"../../../core/Input\";\nimport { MyButton } from \"../../../core/MyButton\";\nimport { ProjectStatusComponent } from \"../ProjectStatusComponent\";\n\nexport default function ModifyComponent(props: any) {\n    const [name, setName] = useState('');\n    const [dateFrom, setDateFrom] = useState(moment());\n    const [dateTo, setDateTo] = useState(moment());\n    const [status, setStatus] = useState();\n    const { setIsLoading } = props;\n\n    let loadData = useCallback(() => {\n        if (props.keyData !== undefined) {\n            setIsLoading(true);\n            TaskSprintManageService.GetDetail(props.projectKey, props.keyData, (data: any) => {\n                let row = data.data.data;\n                setName(row.name);\n                setDateFrom(moment(row.dateFrom));\n                setDateTo(moment(row.dateTo));\n                setStatus(row.status);\n            }, undefined, () => {\n                setIsLoading(false);\n            })\n        }\n    }, [props.projectKey, props.keyData, setIsLoading])\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n    function HandleOnClose() {\n        props.setVisible(false);\n        setName('');\n        setDateFrom(moment());\n        setDateTo(moment());\n\n        if (props.setKeyData !== undefined) {\n            props.setKeyData(undefined);\n        }\n    }\n\n    function HandleSubmitForm() {\n        let body = {\n            name: name,\n            dateFrom: dateFrom.format(\"yyyy-MM-DD\"),\n            dateTo: dateTo.format(\"yyyy-MM-DD\"),\n            status: status\n        };\n\n        setIsLoading(true);\n\n        if (props.keyData !== undefined) {\n            Edit(body);\n        } else {\n            Add(body);\n        }\n    }\n\n    function Add(body: any) {\n        TaskSprintManageService.Add(props.projectKey, body, (data: any) => {\n            Fn.PrintMsgSuccess(data);\n            HandleOnClose();\n            props.loadData();\n        }, () => {\n            props.setIsLoading(false)\n        });\n    }\n\n    function Edit(body: any) {\n        TaskSprintManageService.GetDetail(props.projectKey, props.keyData, (data: any) => {\n            body = Fn.GetTimestamp(data, body);\n            TaskSprintManageService.Edit(props.projectKey, props.keyData, body, (data: any) => {\n                Fn.PrintMsgSuccess(data);\n                HandleOnClose();\n                props.loadData();\n            }, () => {\n                props.setIsLoading(false)\n            });\n        }, () => {\n            props.setIsLoading(false)\n        });\n    }\n\n    function handleDeleteSprint() {\n        Swal.fire({\n            title: \"Xác nhận xóa\",\n            text: \"Bạn có muốn xóa sprint này không?\",\n            showDenyButton: true,\n            confirmButtonText: \"Có\",\n            denyButtonText: \"Không\",\n        }).then((result: any) => {\n            if (result.isConfirmed) {\n                doDeleteSprint()\n            }\n        })\n    }\n\n    function doDeleteSprint() {\n        props.setIsLoading(true);\n        TaskSprintManageService.GetDetail(props.projectKey, props.keyData, (data: any) => {\n            TaskSprintManageService.Delete(props.projectKey, props.keyData, Fn.GetTimestamp(data), (data: any) => {\n                Fn.PrintMsgSuccess(data);\n                HandleOnClose();\n                props.loadData();\n            }, () => {\n                props.setIsLoading(false);\n            });\n        }, () => {\n            props.setIsLoading(false);\n        })\n    }\n\n    return (\n        <Drawer\n            title=\"Chi tiết\"\n            open={props.visible}\n            onClose={HandleOnClose}>\n\n            <Form layout=\"vertical\" onSubmitCapture={HandleSubmitForm}>\n                <MyFormItem.Input\n                    label=\"Tên giai đoạn\"\n                    value={name}\n                    setValue={setName} />\n\n                <MyFormItem.DatePicker\n                    label=\"Ngày bắt đầu\"\n                    value={dateFrom}\n                    setValue={setDateFrom} />\n\n                <MyFormItem.DatePicker\n                    label=\"Ngày kết thúc\"\n                    value={dateTo}\n                    setValue={setDateTo} />\n\n                <ProjectStatusComponent\n                    label=\"Trạng thái\"\n                    projectKey={props.projectKey}\n                    type={2}\n                    value={status}\n                    setValue={setStatus} />\n\n                <Row gutter={24}>\n                    <Col span=\"12\">\n                        <MyButton\n                            isLoading={props.isLoading}\n                            htmlType=\"submit\"\n                            type=\"success\"\n                            value={props.keyData !== undefined ? \"Chỉnh sửa\" : \"Thêm mới\"} />\n                    </Col>\n                    <Col>\n                        <MyButton\n                            isLoading={props.isLoading}\n                            type=\"danger\"\n                            disabled={props.keyData === undefined}\n                            onClick={handleDeleteSprint}\n                            value=\"Xóa sprint\" />\n                    </Col>\n                </Row>\n            </Form>\n        </Drawer>\n    );\n}","import { Col, Empty, Row } from \"antd\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { TaskSprintManageService } from \"../../../../services/taskService\";\nimport { Box, MyBox } from \"../../../core/MyBox\";\nimport { MyButton } from \"../../../core/MyButton\";\nimport { UIFormatDateVNComponent } from \"../../../core/UI_FormatComponent\";\nimport ModifyComponent from \"./DetailComponent\";\nimport \"../task.css\";\n\nexport default function IndexComponent() {\n    const [isLoading, setIsLoading] = useState(false);\n    const [data, setData] = useState([]);\n    const [visible, setVisible] = useState(false);\n    const [visibleEdit, setVisibleEdit] = useState(false);\n    const [keyEdit, setKeyEdit] = useState<string | undefined>(undefined);\n    const [sprintChoose, setSprintChoose] = useState<string | undefined>();\n\n    const keyData: string | undefined = useParams().key;\n\n    const loadData = useCallback(() => {\n        setIsLoading(true);\n        TaskSprintManageService.GetList(keyData, undefined, (data: any) => {\n            setData(data.data.data.pagedData);\n        }, undefined, () => {\n            setIsLoading(false);\n        });\n    }, [setIsLoading, keyData]);\n\n    useEffect(() => {\n        loadData()\n    }, [loadData]);\n\n    function handleChooseSprint(key: string | undefined) {\n        setSprintChoose(key);\n    }\n\n    function RenderItem() {\n        if (data.length === 0) {\n            return <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\n        }\n        return data.map((data: any, index: number) => {\n            return (\n                <Col key={index} span={24} onClick={() => {\n                    handleChooseSprint(data.key)\n                }}>\n                    <Box className={sprintChoose === data.key ? \"box-choose\" : \"\"}>\n                        <p><strong>{data.name} </strong></p>\n                        <p>Từ ngày <UIFormatDateVNComponent value={data.dateFrom} /></p>\n                        <p>Đến <UIFormatDateVNComponent value={data.dateTo} /></p>\n                        <p>Trạng thái: {data.statusText}</p>\n                        <MyButton type=\"warning\" value=\"Chi tiết\" onClick={() => {\n                            handleClickEditSprint(data.key);\n                        }} />\n                    </Box>\n                </Col >\n            )\n        })\n    }\n\n    function handleClickAddSprint() {\n        setVisible(true);\n    }\n\n    function handleClickEditSprint(key: string | undefined) {\n        setVisibleEdit(true);\n        setKeyEdit(key);\n    }\n\n    return (\n        <MyBox\n            title=\"Quản lý giai đoạn\"\n            isLoading={isLoading}\n            buttonList={() => (\n                <MyButton\n                    type=\"primary\"\n                    value=\"Thêm mới\"\n                    onClick={handleClickAddSprint} />\n            )}>\n            <Row gutter={12}>\n                <Col span={6}>\n                    <Box>\n                        Công việc mới chưa xử lý\n                    </Box>\n                </Col>\n\n                <Col span={6}>\n                    <Box>\n                        Công việc cần làm\n                    </Box>\n                </Col>\n\n                <Col span={6}>\n                    <Box>\n                        Công việc sắp hết hạn\n                    </Box>\n                </Col>\n\n                <Col span={6}>\n                    <Box>\n                        Vấn đề chưa được giải quyết\n                    </Box>\n                </Col>\n\n                <Col span={4}>\n                    <Row gutter={12}>\n                        {RenderItem()}\n                    </Row>\n                </Col>\n                <Col span={20}>\n                    <Box>\n                        <h3>Danh sách task</h3>\n                        <Link to=\"\">Chi tiết</Link>\n                    </Box>\n\n                    <Box>\n                        <h3>Danh sách issue</h3>\n                        <Link to=\"\">Chi tiết</Link>\n                    </Box>\n\n                    <Box>\n                        <h3>To do list</h3>\n                        <Link to={`/tools/tasks/projects/${keyData}/sprint/${sprintChoose}/toDoList`}>\n                            <MyButton type=\"primary\" disabled={sprintChoose === undefined} value=\"Chi tiết\" />\n                        </Link>\n                    </Box>\n\n                    <Box>\n                        <h3>Tài liệu dự án</h3>\n                        <Link to=\"\">Chi tiết</Link>\n                    </Box>\n                </Col>\n            </Row>\n\n            <ModifyComponent\n                projectKey={keyData}\n                visible={visible}\n                setVisible={setVisible}\n                isLoading={isLoading}\n                setIsLoading={setIsLoading}\n                loadData={loadData} />\n\n            <ModifyComponent\n                keyData={keyEdit}\n                setKeyData={setKeyEdit}\n                projectKey={keyData}\n                visible={visibleEdit}\n                setVisible={setVisibleEdit}\n                isLoading={isLoading}\n                setIsLoading={setIsLoading}\n                loadData={loadData} />\n        </MyBox>\n    );\n}"],"names":["UIFormatDateVNComponent","props","dateStr","undefined","value","moment","format","UIFormatDateTimeVNComponent","ModifyComponent","useState","name","setName","dateFrom","setDateFrom","dateTo","setDateTo","status","setStatus","setIsLoading","loadData","useCallback","keyData","TaskSprintManageService","projectKey","data","row","HandleOnClose","setVisible","setKeyData","useEffect","title","open","visible","onClose","layout","onSubmitCapture","body","Fn","Edit","Add","label","setValue","type","gutter","span","isLoading","htmlType","disabled","onClick","Swal","text","showDenyButton","confirmButtonText","denyButtonText","then","result","isConfirmed","IndexComponent","setData","visibleEdit","setVisibleEdit","keyEdit","setKeyEdit","sprintChoose","setSprintChoose","useParams","key","pagedData","handleClickAddSprint","buttonList","length","image","Empty","map","index","className","statusText","to"],"sourceRoot":""}
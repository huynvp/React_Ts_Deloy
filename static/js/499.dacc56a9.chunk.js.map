{"version":3,"file":"static/js/499.dacc56a9.chunk.js","mappings":"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","sources":["components/core/UI_FormatComponent.tsx","components/manage/versionManage/ModifyComponent.tsx","components/manage/versionManage/IndexComponent.tsx","models/versionManageModel.ts"],"sourcesContent":["import moment from \"moment\";\n\nexport function UIFormatDateVNComponent(props: any) {\n    let dateStr = \"\";\n    if (props.value !== undefined && props.value !== '' && props.value !== null) {\n        dateStr = moment(props.value).format(\"DD/MM/YYYY\");\n    } else {\n        dateStr = \"\";\n    }\n\n    return (\n        <span>{dateStr}</span>\n    );\n}\n\nexport function UIFormatDateTimeVNComponent(props: any) {\n    let dateStr = \"\";\n    if (props.value !== undefined && props.value !== '' && props.value !== null) {\n        dateStr = moment(props.value).format(\"DD/MM/YYYY HH:mm:ss\");\n    } else {\n        dateStr = \"\";\n    }\n\n    return (\n        <span>{dateStr}</span>\n    );\n}","import { Col, Drawer, Form, message, Row } from \"antd\";\nimport { useCallback, useEffect, useState } from 'react';\nimport { Fn } from \"../../../helper/function\";\nimport { VersionItemResponse } from \"../../../models/versionManageModel\";\nimport { VersionManageService } from \"../../../services/adminService\";\nimport { MyFormItem } from \"../../core/Input\";\nimport { MyButton } from \"../../core/MyButton\";\nimport './logVersion.css';\nvar moment = require('moment');\n\nexport default function ManageVersionModifyComponent(props: any) {\n    const options = [\n        {\n            label: 'Frontend',\n            key: 'fr',\n            value: 1\n        },\n        {\n            label: 'Backend',\n            key: 'be',\n            value: 2\n        },\n        {\n            label: 'Database',\n            key: 'db',\n            value: 3\n        }\n    ]\n\n    const [type, setType] = useState(1);\n    const [majorVersion, setMajorVersion] = useState(0);\n    const [minorVersion, setMinorVersion] = useState(0);\n    const [pathVersion, setPathVersion] = useState(0);\n    const [preReleaseVersion, setReReleaseVersion] = useState('');\n    const [dateRelease, setDateRelease] = useState(null);\n    const [name, setName] = useState('');\n    const [_message, setMessage] = useState('');\n\n    const { setIsLoading } = props;\n\n    function handleClickButton() {\n        props.setIsLoading(true);\n        let body = {\n            type: type,\n            version: {\n                major: majorVersion,\n                minor: minorVersion,\n                patch: pathVersion,\n                preRelease: preReleaseVersion\n            },\n            name: name,\n            message: _message,\n            dateRelease: dateRelease\n        };\n        if (props.keyEdit !== undefined) {\n            edit(body);\n        } else {\n            add(body);\n        }\n    }\n\n    function add(body: any) {\n        VersionManageService.Add(body, (data: any) => {\n            Fn.PrintMsgSuccess(data);\n            props.onClose();\n            props.loadData();\n        }, () => {\n            props.setIsLoading(false);\n        })\n    }\n\n    function edit(body: any) {\n        VersionManageService.GetDetail(props.keyEdit, (data: any) => {\n            body = Fn.GetTimestamp(data, body);\n            VersionManageService.Edit(props.keyEdit, body, (data: any) => {\n                message.success(data.data.message);\n                props.onClose();\n                props.loadData();\n            }, () => {\n                props.setIsLoading(false)\n            })\n        }, () => {\n            props.setIsLoading(false)\n        })\n    }\n\n    const loadData = useCallback(() => {\n        if (props.keyEdit !== undefined) {\n            setIsLoading(true);\n            VersionManageService.GetDetail(props.keyEdit, (data: any) => {\n                let row = new VersionItemResponse(data.data.data);\n                setType(row.type);\n                setMajorVersion(row.version.major);\n                setMinorVersion(row.version.minor);\n                setPathVersion(row.version.patch);\n                setReReleaseVersion(row.version.preRelease);\n                setName(row.name);\n                setMessage(row.message);\n                setDateRelease(moment(row.dateRelease));\n            }, undefined, () => {\n                setIsLoading(false)\n            })\n        }\n    }, [props.keyEdit, setIsLoading]);\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n    return (\n        <Drawer\n            open={props.visible}\n            onClose={props.onClose}\n            title={props.keyEdit !== undefined ? \"Chỉnh sửa log version\" : \"Thêm log version mới\"}>\n            <Form layout=\"vertical\">\n                <MyFormItem.Select\n                    label=\"Loại\"\n                    options={options}\n                    value={type}\n                    setValue={setType} />\n\n                <Form.Item label=\"Phiên bản\">\n                    <MyFormItem.NumberColSpan\n                        className=\"row-version\"\n                        label=\"Major\"\n                        colSpan1={8}\n                        colSpan2={16}\n                        min={0}\n                        max={1000000}\n                        value={majorVersion}\n                        setValue={setMajorVersion} />\n\n                    <MyFormItem.NumberColSpan\n                        className=\"row-version\"\n                        label=\"Minor\"\n                        colSpan1={8}\n                        colSpan2={16}\n                        min={0}\n                        max={1000000}\n                        value={minorVersion}\n                        setValue={setMinorVersion} />\n\n                    <MyFormItem.NumberColSpan\n                        className=\"row-version\"\n                        label=\"Patch\"\n                        colSpan1={8}\n                        colSpan2={16}\n                        min={0}\n                        max={1000000}\n                        value={pathVersion}\n                        setValue={setPathVersion} />\n\n                    <Row className=\"row-version\">\n                        <Col span={8}>\n                            <span>PreRelease</span>\n                        </Col>\n                        <Col span={16}>\n                            <MyFormItem.Input\n                                value={preReleaseVersion}\n                                setValue={setReReleaseVersion} />\n                        </Col>\n                    </Row>\n                </Form.Item>\n\n                <MyFormItem.Input\n                    label=\"Tên\"\n                    value={name}\n                    setValue={setName} />\n\n                <MyFormItem.DatePicker\n                    label=\"Ngày phát hành\"\n                    value={dateRelease}\n                    setValue={setDateRelease} />\n\n                <MyFormItem.TextArea\n                    label=\"Ghi chú\"\n                    value={_message}\n                    setValue={setMessage} />\n\n                <MyButton\n                    onClick={handleClickButton}\n                    htmlType=\"submit\"\n                    type=\"success\"\n                    value={props.keyEdit !== undefined ? \"Chỉnh sửa\" : \"Thêm\"} />\n            </Form>\n        </Drawer>\n    );\n}","import { Button, message, Popconfirm, Tag } from \"antd\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { PaginationRequest, TableColumn } from \"../../../models/baseModel\";\nimport { VersionItemResponse } from \"../../../models/versionManageModel\";\nimport { VersionManageService } from \"../../../services/adminService\";\nimport { MyBox } from \"../../core/MyBox\";\nimport { MyButton } from \"../../core/MyButton\";\nimport { OrderByModel, PageInfoModel } from \"../../core/TableModel\";\nimport TableComponent from \"../../core/TableNewComponent\";\nimport { UIFormatDateVNComponent } from \"../../core/UI_FormatComponent\";\nimport ManageVersionModifyComponent from \"./ModifyComponent\";\n\nexport default function ManageVersionIndexComponent() {\n    const [isLoading, setIsLoading] = useState(false);\n    const [pageInfo, setPageInfo] = useState<PageInfoModel>(new PageInfoModel());\n    const [orderBy, setOrderBy] = useState<OrderByModel>(new OrderByModel());\n    const [typeOrderBy, setTypeOrderBy] = useState<boolean>(false);\n    const [visible, setVisible] = useState(false);\n    const [visibleEdit, setVisibleEdit] = useState(false);\n    const [keyEdit, setKeyEdit] = useState<string | undefined>(undefined);\n    const column = [\n        new TableColumn({ title: \"STT\", dataIndex: \"stt\", key: \"stt\", disabled: true }),\n        new TableColumn({\n            title: \"Loại\", dataIndex: \"type\", key: \"type\", render: (data: number, row: any) => {\n                let color = \"\";\n                let value = \"\";\n                if (data === 1) {\n                    color = \"red\";\n                    value = \"Frontend\";\n                }\n\n                if (data === 2) {\n                    color = \"green\";\n                    value = \"Backend\";\n                }\n\n                if (data === 3) {\n                    color = \"blue\";\n                    value = \"Database\";\n                }\n\n                return (\n                    <Tag color={color}>{value}</Tag>\n                )\n            }\n        }),\n        new TableColumn({ title: \"Phiên bản\", dataIndex: \"versionStr\", key: \"version\" }),\n        new TableColumn({ title: \"Tên\", dataIndex: \"name\", key: \"name\" }),\n        new TableColumn({ title: \"Ghi chú\", dataIndex: \"message\", key: \"message\" }),\n        new TableColumn({\n            title: \"Ngày phát hành\", dataIndex: \"dateRelease\", key: \"dateRelease\", render: (data: string, row: any) => {\n                return (<UIFormatDateVNComponent value={data} />);\n            }\n        }),\n\n        new TableColumn({\n            title: \"Hành động\", key: \"action\", disabled: true, render: (data: any, row: any) => {\n                return (\n                    <div>\n                        <MyButton\n                            type=\"link\"\n                            value=\"Chỉnh sửa\"\n                            onClick={() => {\n                                handleClickEdit(row.key);\n                            }} />\n                        <Popconfirm\n                            title=\"Bạn có muốn xóa phiên bản này không?\"\n                            onConfirm={() => {\n                                handleDelete(row.key);\n                            }}>\n                            <Button type=\"link\">Xóa</Button>\n                        </Popconfirm>\n                    </div>\n                );\n            }\n        })\n    ];\n\n    const [data, setData] = useState([]);\n    const loadData = useCallback(() => {\n        setIsLoading(true);\n        let paginationRequest = new PaginationRequest(pageInfo.pageNumber, pageInfo.pageSize, orderBy);\n        VersionManageService.GetList(paginationRequest, (data: any) => {\n            setPageInfo(new PageInfoModel(data));\n            setData(data.data.data.pagedData.map((data: any, index: number) => {\n                return new VersionItemResponse(data, index);\n            }));\n\n        }, undefined, () => {\n            setIsLoading(false)\n        })\n    }, [pageInfo.pageNumber, pageInfo.pageSize, orderBy]);\n\n    useEffect(() => {\n        loadData();\n    }, [loadData])\n\n    function handleOnClose() {\n        setVisible(false);\n    }\n\n    function handleOnCloseEdit() {\n        setVisibleEdit(false);\n        setKeyEdit(undefined);\n    }\n\n    function handleClickAdd() {\n        setVisible(true);\n    }\n\n    function handleClickEdit(key: string) {\n        setVisibleEdit(true);\n        setKeyEdit(key);\n    }\n\n    function handleDelete(key: string) {\n        setIsLoading(true);\n        VersionManageService.GetDetail(key, (data: any) => {\n            let timestamp = new VersionItemResponse(data.data.data).timestamp;\n            VersionManageService.Delete(key, timestamp, (data: any) => {\n                message.success(data.data.message);\n                loadData();\n            }, () => {\n                setIsLoading(false)\n            })\n        }, () => {\n            setIsLoading(false)\n        });\n    }\n\n    return (\n        <MyBox\n            title=\"Quản lí phiên bản\"\n            isLoading={isLoading}>\n            <MyButton\n                type=\"primary\"\n                value=\"Thêm mới\"\n                onClick={handleClickAdd} />\n\n            <TableComponent\n                pageInfo={pageInfo}\n                setPageInfo={setPageInfo}\n                orderBy={orderBy}\n                setOrderBy={setOrderBy}\n                column={column}\n                dataSource={data}\n                loadData={loadData}\n                loading={isLoading}\n                typeOrderBy={typeOrderBy}\n                setTypeOrderBy={setTypeOrderBy} />\n\n            <ManageVersionModifyComponent\n                visible={visible}\n                onClose={handleOnClose}\n                loadData={loadData}\n                isLoading={isLoading}\n                setIsLoading={setIsLoading} />\n\n            <ManageVersionModifyComponent\n                visible={visibleEdit}\n                onClose={handleOnCloseEdit}\n                loadData={loadData}\n                isLoading={isLoading}\n                setIsLoading={setIsLoading}\n                keyEdit={keyEdit} />\n        </MyBox>\n    );\n}\n","export class AboutResponse {\n    frontEnd: VersionItemResponse[] = [];\n    backEnd: VersionItemResponse[] = [];\n    database: VersionItemResponse[] = [];\n    constructor(data?: any) {\n        if (data === undefined) {\n            this.frontEnd = [];\n            this.backEnd = [];\n            this.database = [];\n            return;\n        }\n\n        this.frontEnd = data.frontEnd.map((data: any, index: number) => {\n            return new VersionItemResponse(data);\n        });\n        this.backEnd = data.backEnd.map((data: any, index: number) => {\n            return new VersionItemResponse(data);\n        });\n        this.database = data.database.map((data: any, index: number) => {\n            return new VersionItemResponse(data);\n        });\n    }\n}\n\nexport class VersionItemResponse {\n    stt: number | null;\n    dateRelease: string | null;\n    key: string;\n    message: string;\n    name: string;\n    timestamp: string;\n    version: Version;\n    type: number;\n    preRelease: string;\n    versionStr: string;\n    constructor(data?: any, index?: number) {\n        this.stt = index !== undefined ? (index + 1) : null;\n        this.dateRelease = data.dateRelease;\n        this.key = data.key;\n        this.message = data.message;\n        this.name = data.name;\n        this.timestamp = data.timestamp;\n        this.version = data.version;\n        this.type = data.type;\n        this.preRelease = data.preRelease;\n        this.versionStr = data.versionStr;\n    }\n}\n\nexport class Version {\n    major: number\n    minor: number\n    patch: number\n    preRelease: string\n    constructor(data: any) {\n        this.major = data.major;\n        this.minor = data.minor;\n        this.patch = data.patch;\n        this.preRelease = data.preRelease;\n    }\n}"],"names":["UIFormatDateVNComponent","props","dateStr","undefined","value","moment","format","UIFormatDateTimeVNComponent","require","ManageVersionModifyComponent","useState","type","setType","majorVersion","setMajorVersion","minorVersion","setMinorVersion","pathVersion","setPathVersion","preReleaseVersion","setReReleaseVersion","dateRelease","setDateRelease","name","setName","_message","setMessage","setIsLoading","loadData","useCallback","keyEdit","VersionManageService","data","row","VersionItemResponse","version","major","minor","patch","preRelease","message","useEffect","open","visible","onClose","title","layout","label","options","key","setValue","className","colSpan1","colSpan2","min","max","span","MyButton","onClick","body","Fn","edit","add","htmlType","ManageVersionIndexComponent","isLoading","PageInfoModel","pageInfo","setPageInfo","OrderByModel","orderBy","setOrderBy","typeOrderBy","setTypeOrderBy","setVisible","visibleEdit","setVisibleEdit","setKeyEdit","column","TableColumn","dataIndex","disabled","render","color","onConfirm","timestamp","setData","paginationRequest","PaginationRequest","pageNumber","pageSize","pagedData","map","index","MyBox","dataSource","loading","AboutResponse","frontEnd","backEnd","database","this","stt","versionStr"],"sourceRoot":""}
{"version":3,"file":"static/js/376.e09dca6d.chunk.js","mappings":"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","sources":["components/tool/task/sprintManage/DetailComponent.tsx"],"sourcesContent":["import { Col, Drawer, Form, Row } from \"antd\";\nimport moment from \"moment\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport { Fn } from \"../../../../helper/function\";\nimport { TaskSprintManageService } from \"../../../../services/taskService\";\nimport { MyFormItem } from \"../../../core/Input\";\nimport { MyButton } from \"../../../core/MyButton\";\nimport { ProjectStatusComponent } from \"../ProjectStatusComponent\";\n\nexport default function ModifyComponent(props: any) {\n    const [name, setName] = useState('');\n    const [dateFrom, setDateFrom] = useState(moment());\n    const [dateTo, setDateTo] = useState(moment());\n    const [status, setStatus] = useState();\n    const { projectKey, keyData, setKeyData, isLoading, setIsLoading, visible, setVisible, loadData } = props;\n\n    let loadDataDetail = useCallback(() => {\n        if (keyData !== undefined) {\n            setIsLoading(true);\n            TaskSprintManageService.GetDetail(projectKey, keyData)\n                .then((rs: any) => {\n                    if (rs.isSuccess) {\n                        let row = rs.data;\n                        setName(row.name);\n                        setDateFrom(moment(row.dateFrom));\n                        setDateTo(moment(row.dateTo));\n                        setStatus(row.status.id);\n                    }\n                })\n                .finally(() => setIsLoading(false))\n        }\n    }, [projectKey, keyData, setIsLoading])\n\n    useEffect(() => {\n        loadDataDetail();\n    }, [loadDataDetail]);\n\n    function HandleOnClose() {\n        setVisible(false);\n        setName('');\n        setDateFrom(moment());\n        setDateTo(moment());\n\n        if (setKeyData !== undefined) {\n            setKeyData(undefined);\n        }\n    }\n\n    function HandleSubmitForm() {\n        let body = {\n            name: name,\n            dateFrom: dateFrom.format(\"yyyy-MM-DD\"),\n            dateTo: dateTo.format(\"yyyy-MM-DD\"),\n            status: status\n        };\n\n        setIsLoading(true);\n\n        if (keyData !== undefined) {\n            Edit(body);\n        } else {\n            Add(body);\n        }\n    }\n\n    function Add(body: any) {\n        TaskSprintManageService.Add(projectKey, body)\n            .then((rs: any) => {\n                if (rs.isSuccess) {\n                    Fn.PrintMsgSuccessV2(rs);\n                    HandleOnClose();\n                    loadData();\n                }\n            })\n            .finally(() => setIsLoading(false));\n    }\n\n    function Edit(body: any) {\n        TaskSprintManageService.GetDetail(projectKey, keyData)\n            .then((rs: any) => {\n                if (rs.isSuccess) {\n                    body = Fn.GetTimestampV2(rs, body);\n                    TaskSprintManageService.Edit(projectKey, keyData, body)\n                        .then((rs: any) => {\n                            if (rs.isSuccess) {\n                                Fn.PrintMsgSuccessV2(rs);\n                                HandleOnClose();\n                                loadData();\n                            }\n                        })\n                        .finally(() => setIsLoading(false))\n                } else setIsLoading(false);\n            })\n    }\n\n    function handleDeleteSprint() {\n        Swal.fire({\n            title: \"Xác nhận xóa\",\n            text: \"Bạn có muốn xóa sprint này không?\",\n            showDenyButton: true,\n            confirmButtonText: \"Có\",\n            denyButtonText: \"Không\",\n        }).then((result: any) => {\n            if (result.isConfirmed) {\n                doDeleteSprint()\n            }\n        })\n    }\n\n    function doDeleteSprint() {\n        setIsLoading(true);\n        TaskSprintManageService.GetDetail(projectKey, keyData)\n            .then((rs: any) => {\n                if (rs.isSuccess) {\n                    TaskSprintManageService.Delete(projectKey, keyData, Fn.GetTimestampV2(rs))\n                        .then((rs: any) => {\n                            if (rs.isSuccess) {\n                                Fn.PrintMsgSuccessV2(rs);\n                                HandleOnClose();\n                                loadData();\n                            }\n                        })\n                        .finally(() => setIsLoading(false))\n                } else setIsLoading(false);\n            })\n    }\n\n    return (\n        <Drawer\n            title=\"Chi tiết\"\n            open={visible}\n            onClose={HandleOnClose}>\n\n            <Form layout=\"vertical\" onSubmitCapture={HandleSubmitForm}>\n                <MyFormItem.Input\n                    label=\"Tên giai đoạn\"\n                    value={name}\n                    setValue={setName} />\n\n                <MyFormItem.DatePicker\n                    label=\"Ngày bắt đầu\"\n                    value={dateFrom}\n                    setValue={setDateFrom} />\n\n                <MyFormItem.DatePicker\n                    label=\"Ngày kết thúc\"\n                    value={dateTo}\n                    setValue={setDateTo} />\n\n                <ProjectStatusComponent\n                    label=\"Trạng thái\"\n                    projectKey={projectKey}\n                    type={2}\n                    value={status}\n                    setValue={setStatus} />\n\n                <Row gutter={24}>\n                    <Col span=\"12\">\n                        <MyButton\n                            isLoading={isLoading}\n                            htmlType=\"submit\"\n                            type=\"success\"\n                            value={keyData !== undefined ? \"Chỉnh sửa\" : \"Thêm mới\"} />\n                    </Col>\n                    <Col>\n                        <MyButton\n                            isLoading={isLoading}\n                            type=\"danger\"\n                            disabled={keyData === undefined}\n                            onClick={handleDeleteSprint}\n                            value=\"Xóa sprint\" />\n                    </Col>\n                </Row>\n\n                <Link to={`/tools/tasks/projects/${projectKey}/sprint/${keyData}/toDoList`}>\n                    Quản lý việc cần làm\n                </Link>\n            </Form>\n        </Drawer>\n    );\n}"],"names":["ModifyComponent","props","useState","name","setName","moment","dateFrom","setDateFrom","dateTo","setDateTo","status","setStatus","projectKey","keyData","setKeyData","isLoading","setIsLoading","visible","setVisible","loadData","loadDataDetail","useCallback","undefined","TaskSprintManageService","then","rs","isSuccess","row","data","id","finally","HandleOnClose","useEffect","title","open","onClose","layout","onSubmitCapture","body","format","Fn","Edit","Add","label","value","setValue","type","gutter","span","htmlType","disabled","onClick","Swal","text","showDenyButton","confirmButtonText","denyButtonText","result","isConfirmed","to"],"sourceRoot":""}
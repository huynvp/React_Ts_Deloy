{"version":3,"file":"static/js/905.8a4ec524.chunk.js","mappings":"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","sources":["components/auth/ForgotPasswordComponent.tsx","helper/function.ts"],"sourcesContent":["import { Form } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Fn } from \"../../helper/function\";\r\nimport { AuthService } from \"../../services/authService\";\r\nimport { MyFormItem } from \"../core/Input\";\r\nimport { MyBox } from \"../core/MyBox\";\r\nimport { MyButton } from \"../core/MyButton\";\r\n\r\nexport default function ForgotPasswordComponent() {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [userName, setUserName] = useState('');\r\n    const [otp, setOtp] = useState('');\r\n\r\n    function handleClickBtnSendOTP() {\r\n        setIsLoading(true);\r\n        let body = {\r\n            email: userName\r\n        };\r\n\r\n        AuthService.RequestForgotPassword(body)\r\n            .then((rs: any) => {\r\n                if (rs.isSuccess) {\r\n                    Fn.PrintMsgSuccess(rs);\r\n                }\r\n            })\r\n            .finally(() => setIsLoading(false))\r\n    }\r\n\r\n    function handleClickBtnResetPassword() {\r\n        setIsLoading(true);\r\n        let body = {\r\n            email: userName,\r\n            otp: otp\r\n        };\r\n\r\n        AuthService.VerifyForgotPassword(body)\r\n            .then((rs: any) => {\r\n                if (rs.isSuccess) {\r\n                    Fn.PrintMsgSuccess(rs);\r\n                }\r\n            })\r\n            .finally(() => setIsLoading(false))\r\n    }\r\n\r\n    return (\r\n        <MyBox title=\"Quên mật khẩu\" >\r\n            <Form layout=\"vertical\">\r\n                <MyFormItem.Input\r\n                    label=\"Tên đăng nhập\"\r\n                    value={userName}\r\n                    setValue={setUserName} />\r\n                <MyButton\r\n                    value=\"Gửi mã OTP\"\r\n                    isLoading={isLoading}\r\n                    onClick={handleClickBtnSendOTP} />\r\n                <MyFormItem.Password\r\n                    label=\"OTP\"\r\n                    value={otp}\r\n                    setValue={setOtp} />\r\n\r\n                <p>Nhấn vào <Link to=\"login\">đây</Link> để trở về trang đăng nhập</p>\r\n                <MyButton\r\n                    value=\"Đổi mật khẩu\"\r\n                    isLoading={isLoading}\r\n                    onClick={handleClickBtnResetPassword} />\r\n            </Form>\r\n        </MyBox>\r\n    )\r\n}","import { message } from \"antd\";\r\nimport { PageInfoModel } from \"../components/core/TableModel\";\r\n\r\nexport class Fn {\r\n    static PrintMsg(err: any | null) {\r\n        if (err.response === undefined) {\r\n            return err.response;\r\n        }\r\n        return err.response.data.message;\r\n    };\r\n\r\n    static PrintMsgErr(err: any | null) {\r\n        message.error(this.PrintMsg(err));\r\n    };\r\n\r\n    static PrintMsgSuccess(data: any) {\r\n        message.success(data.message);\r\n    };\r\n\r\n    static FormatInputMoney(data: string | null) {\r\n        return `${data}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    }\r\n\r\n    static ParseInputMoney(data: string) {\r\n        return data.replace(/\\s?|(,*)/g, '');\r\n    }\r\n\r\n    static FormatMoney(money: number) {\r\n        return new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(money);\r\n    }\r\n\r\n    static FormatNumber(money: number) {\r\n        return new Intl.NumberFormat('vi-VN').format(money);\r\n    }\r\n\r\n    static GetIndexInArray = (datas: any, keySearch: string, value: string) => { // -1 khong tim thay\r\n        var result = -1;\r\n        for (var i = 0; i < datas.length; i++) {\r\n            if (datas[i][keySearch] === value) {\r\n                result = i;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static GetIndexInArrayStr = (datas: any, value: string) => { // -1 khong tim thay\r\n        var result = -1;\r\n        for (var i = 0; i < datas.length; i++) {\r\n            if (datas[i].trim() === value.trim()) {\r\n                result = i;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static SetPageInfo = (data: any, setTotal: any, setPageNumber: any, setPageSize: any) => {\r\n        var pageInfo = data.data.data.pageInfo;\r\n        setTotal(pageInfo.totalCount);\r\n        setPageNumber(pageInfo.currentPage);\r\n        setPageSize(pageInfo.pageSize);\r\n    }\r\n\r\n    static GetTimestamp = (data?: any, body?: any) => {\r\n        try {\r\n            if (body === null || body === undefined) {\r\n                return data.data.timestamp;\r\n            }\r\n            body.timestamp = data.data.timestamp;\r\n            return body;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    static RenderSTT(_data: any, _row: any, index: number, pageInfo: PageInfoModel) {\r\n        return ((pageInfo.pageNumber - 1) * pageInfo.pageSize) + index + 1;\r\n    }\r\n\r\n\r\n\r\n    // no use\r\n    static PrintMsgSuccess_no_use(data: any) {\r\n        message.success(data.data.message);\r\n    };\r\n    static GetTimestamp_no_use = (data?: any, body?: any) => {\r\n        try {\r\n            if (body === null || body === undefined) {\r\n                return data.data.data.timestamp;\r\n            }\r\n            body.timestamp = data.data.data.timestamp;\r\n            return body;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}"],"names":["ForgotPasswordComponent","useState","isLoading","setIsLoading","userName","setUserName","otp","setOtp","title","layout","label","value","setValue","onClick","body","email","AuthService","then","rs","isSuccess","Fn","finally","to","err","undefined","response","data","message","this","PrintMsg","replace","money","Intl","NumberFormat","style","currency","format","_data","_row","index","pageInfo","pageNumber","pageSize","GetIndexInArray","datas","keySearch","result","i","length","GetIndexInArrayStr","trim","SetPageInfo","setTotal","setPageNumber","setPageSize","totalCount","currentPage","GetTimestamp","timestamp","error","console","log","GetTimestamp_no_use"],"sourceRoot":""}
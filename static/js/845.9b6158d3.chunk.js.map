{"version":3,"file":"static/js/845.9b6158d3.chunk.js","mappings":"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","sources":["components/core/SearchComponent.tsx","components/core/UI_FormatComponent.tsx","components/manage/email/MailApp_ModifyComponent.tsx","components/manage/email/MailApp_IndexComponent.tsx"],"sourcesContent":["import { MyButton } from \"./MyButton\";\nimport { Drawer, Form } from 'antd';\nimport { useEffect, useState } from \"react\";\nimport Loading from \"./Loading\";\nimport { Fn } from \"../../helper/function\";\nimport { MyFormItem } from \"./Input\";\n\n /**\n  * // TODO: Component search\n  * Gets script version\n  * params:\n  * - muityChoose: Cho phép chọn nhiều hay không? Mặc định = false\n  * - onSearch: Fn excute search\n  * - resultKey: Key kết quả\n  * - resultName: Name kết quả\n  * - setResultKey: fn set resultKey\n  * - setResultName: fn set resultName\n  * - dataSearch:\n  * - label: \n  * - isLoading: \n  * ex:\n  * - muityChoose={false}\n  * - onSearch={onSearch}\n  * - resultKey={resultKey}\n  * - resultName={resultName}\n  * - setResultKey={setResultKey}\n  * - setResultName={setResultName}\n  * - dataSearch={dataSearch}\n  * - label={label}\n  * - isLoading={isLoading}\n  * @returns script version\n  */\n\nexport default function SearchComponent(props: any) {\n    let muityChoose: boolean|undefined = props.muityChoose;\n    if (muityChoose === undefined) {\n        muityChoose = false;\n    }\n\n    const [visible, setVisible] = useState(false);\n\n    function handleSearch() {\n        setVisible(true);\n    }\n\n    function onCloseDrawer() {\n        setVisible(false);\n    }\n\n    function handleSearchData(params: any) {\n        props.onSearch(params);\n    }\n\n    useEffect(() => {\n    }, [])\n\n    function handleChooseSearch(data: any) {\n        if (muityChoose === true) {\n            var a = props.resultName.split(\",\");\n            var b = Fn.GetIndexInArrayStr(a, data.name);\n            \n            if(b !== -1) {\n                console.log(\"EXIST ARRAY\");\n                return;\n            }\n            props.setResultKey(`${props.resultKey}${props.resultKey !== '' ? ', ' : ''}${data.key}`);\n            props.setResultName(`${props.resultName}${props.resultName !== '' ? ', ' : ''}${data.name}`);\n            // setVisible(false);\n        } else {\n            props.setResultKey(data.key);\n            props.setResultName(data.name);\n            // setVisible(false);\n        }\n    }\n\n    function renderDataSearch() {\n        return props.dataSearch.map((data: any, index: number) => {\n            return (\n                <MyButton key={data.key} value={data.name} onClick={() => handleChooseSearch(data)} />\n            );\n        })\n    }\n\n    function deleteResult() {\n        props.setResultKey('');\n        props.setResultName('');\n        // setVisible(false);\n    }\n\n    return (\n        <div>\n            <MyFormItem.Input\n                label={props.label}\n                onClick={handleSearch}\n                readOnly={true}\n                value={props.resultName} />\n\n            <Drawer\n                placement=\"top\"\n                open={visible}\n                onClose={onCloseDrawer}>\n                <div>\n                    <Loading isLoading={props.isLoading} />\n                    <MyButton value=\"Xóa tìm kiếm\" onClick={deleteResult} />\n                    <MyFormItem.Input readOnly={true} label=\"Kết quả\" value={props.resultName}/>\n                    <Form>\n                        <MyFormItem.Search label=\"Tìm kiếm\" onSearch={handleSearchData} />\n                    </Form>\n                    {renderDataSearch()}\n                </div>\n            </Drawer>\n        </div>\n    );\n}\n","import moment from \"moment\";\n\nexport function UIFormatDateVNComponent(props: any) {\n    let dateStr = \"\";\n    if (props.value !== undefined && props.value !== '' && props.value !== null) {\n        dateStr = moment(props.value).format(\"DD/MM/YYYY\");\n    } else {\n        dateStr = \"\";\n    }\n\n    return (\n        <span>{dateStr}</span>\n    );\n}\n\nexport function UIFormatDateTimeVNComponent(props: any) {\n    let dateStr = \"\";\n    if (props.value !== undefined && props.value !== '' && props.value !== null) {\n        dateStr = moment(props.value).format(\"DD/MM/YYYY HH:mm:ss\");\n    } else {\n        dateStr = \"\";\n    }\n\n    return (\n        <span>{dateStr}</span>\n    );\n}","import { Col, Drawer, Form } from \"antd\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Fn } from \"../../../helper/function\";\nimport { MailAppService } from \"../../../services/adminService\";\nimport { MyFormItem } from \"../../core/Input\";\nimport { MyButton } from \"../../core/MyButton\";\nimport SearchComponent from \"../../core/SearchComponent\";\n\nexport default function ManageMailAppModifyComponent(props: any) {\n    const { setIsLoading } = props;\n    const [name, setName] = useState('');\n    const [comment, setComment] = useState('');\n    const [keySecret, setKeySecret] = useState('');\n    const [status, setStatus] = useState(0);\n    const [optionCheckList, setOptionCheckList] = useState<any>([]);\n\n    const [dataSearch, setDataSearch] = useState<any>([]);\n    const [resultKey, setResultKey] = useState('');\n    const [resultName, setResultName] = useState('');\n\n    const options = [\n        {\n            key: \"active\",\n            label: \"Đang hoạt động\",\n            value: 1\n        },\n        {\n            key: \"inactive\",\n            label: \"Không hoạt động\",\n            value: 0\n        }\n    ]\n    const loadData = useCallback(() => {\n        if (props.keyData !== undefined) {\n            setIsLoading(true);\n            MailAppService.GetDetail(props.keyData, (data: any) => {\n                var row = data.data.data;\n                setName(row.name);\n                setComment(row.comment);\n                setKeySecret(row.keySecret);\n                setStatus(row.status);\n                setOptionCheckList(row.templates);\n            }, undefined, () => {\n                setIsLoading(false);\n            })\n        }\n    }, [props.keyData, setIsLoading]);\n\n    useEffect(() => {\n        loadData();\n    }, [loadData])\n\n    function onClose() {\n        props.onClose();\n        setResultKey('');\n        setResultName('');\n    }\n\n    function handleSearch(data: any) {\n        setIsLoading(true);\n        MailAppService.SearchTemplate(data, props.keyData, (data: any) => {\n            setDataSearch(data.data.data);\n        }, undefined, () => {\n            setIsLoading(false);\n        });\n    }\n\n    function handleSubmitForm() {\n        props.setIsLoading(true);\n        var body = {\n            name: name,\n            comment: comment,\n            status: status\n        };\n\n        if (props.keyData === undefined) {\n            Add(body);\n        } else {\n            Edit(body);\n        }\n    }\n\n    function Add(body: any) {\n        MailAppService.Add(body, (data: any) => {\n            props.loadData();\n            Fn.PrintMsgSuccess(data);\n        }, () => {\n            props.setIsLoading(false);\n        })\n    }\n\n    function Edit(body: any) {\n        var bodyTemplate = resultName.split(\", \").map((data, index) => {\n            return {\n                appKey: props.keyData,\n                templateCode: data\n            }\n        })\n\n        MailAppService.AssignTemplates(bodyTemplate, (data: any) => {\n            console.log(data.data.message);\n        })\n\n        MailAppService.GetDetail(props.keyData, (data: any) => {\n            body = Fn.GetTimestamp(data, body);\n            MailAppService.Edit(props.keyData, body, (data1: any) => {\n                props.loadData();\n                Fn.PrintMsgSuccess(data1);\n            }, () => {\n                props.setIsLoading(false);\n            })\n        }, () => {\n            props.setIsLoading(false);\n        })\n    }\n\n    function handleDeleteTemplate(key: number) {\n        MailAppService.RemoveAssignTemplates(key, (data: any) => {\n            loadData();\n        })\n    }\n    return (\n        <Drawer\n            title={props.keyData === undefined ? \"Thêm app mới\" : \"Cập nhật thông tin app\"}\n            open={props.visible}\n            onClose={onClose}>\n            <Form\n                layout=\"vertical\"\n                onSubmitCapture={handleSubmitForm}>\n                <MyFormItem.Input\n                    label=\"Tên App\"\n                    value={name}\n                    setValue={setName} />\n\n                <MyFormItem.Input\n                    label=\"Chú thích\"\n                    value={comment}\n                    setValue={setComment} />\n\n                <MyFormItem.Input\n                    label=\"Mã bí mật\"\n                    readOnly={true}\n                    value={keySecret}\n                    setValue={setKeySecret} />\n\n                <MyFormItem.Select\n                    label=\"Trạng thái\"\n                    value={status}\n                    setValue={setStatus}\n                    options={options} />\n\n                <SearchComponent\n                    label=\"Chọn template\"\n                    muityChoose={true}\n                    onSearch={handleSearch}\n                    dataSearch={dataSearch}\n                    resultKey={resultKey}\n                    resultName={resultName}\n                    setResultKey={setResultKey}\n                    setResultName={setResultName}\n                    isLoading={props.isLoading} />\n\n                <Form.Item>\n                    {optionCheckList.map((data: any, index: any) => {\n                        return (\n                            <Col key={index} span={24}>\n                                {data.code}\n                                <MyButton\n                                    value=\"Xóa\"\n                                    type=\"link\"\n                                    onClick={() => {\n                                        handleDeleteTemplate(data.id)\n                                    }} />\n                            </Col>\n                        );\n                    })}\n                </Form.Item>\n                <MyButton\n                    isLoading={props.isLoading}\n                    htmlType=\"submit\"\n                    value={props.keyData === undefined ? \"Thêm app mới\" : \"Cập nhật thông tin app\"} />\n            </Form >\n        </Drawer >\n    );\n}","import { useState, useCallback, useEffect } from \"react\";\nimport { Badge, Popconfirm } from \"antd\";\nimport { Fn } from \"../../../helper/function\";\nimport { MailAppService } from \"../../../services/adminService\";\nimport ManageMailAppModifyComponent from \"./MailApp_ModifyComponent\";\nimport { PaginationRequest, TableColumn } from \"../../../models/baseModel\";\nimport TableComponent from \"../../core/TableNewComponent\";\nimport { OrderByModel, PageInfoModel } from \"../../core/TableModel\";\nimport { UIFormatDateTimeVNComponent } from \"../../core/UI_FormatComponent\";\nimport { MyBox } from \"../../core/MyBox\";\nimport { MyButton } from \"../../core/MyButton\";\nexport default function ManageMailAppIndexComponent() {\n    const column = [\n        new TableColumn({ title: \"STT\", key: \"stt\" }),\n        new TableColumn({ title: \"Tên\", key: \"name\" }),\n        new TableColumn({ title: \"Chú thích\", key: \"comment\" }),\n        new TableColumn({ title: \"Key\", key: \"secret\" }),\n        new TableColumn({\n            title: \"Trạng thái\", key: \"status\", render: (row: number) => {\n                var badge: any = {};\n                if (row === 1) {\n                    badge = {\n                        msg: 'Đang hoạt động',\n                        color: 'blue'\n                    };\n                } else {\n                    badge = {\n                        msg: 'Không hoạt động',\n                        color: 'red'\n                    };\n                }\n                return <Badge text={badge.msg} color={badge.color} />\n            }\n        }),\n        new TableColumn({\n            title: \"Ngày thêm\", key: \"createdAt\", render: (row: any, data: any) => {\n                return (<UIFormatDateTimeVNComponent value={row} />);\n            }\n        }),\n        new TableColumn({\n            title: \"Ngày cập nhật cuối\", key: \"updatedAt\", render: (row: any, data: any) => {\n                return (<UIFormatDateTimeVNComponent value={row} />);\n            }\n        }),\n        new TableColumn({\n            title: \"Hành động\", key: \"action\", render: (row: any, data: any) => {\n                return (\n                    <div>\n                        <MyButton\n                            value=\"Chỉnh sửa\"\n                            type=\"link\"\n                            onClick={() => {\n                                handleClickEditApp(data.key)\n                            }} />\n\n                        <Popconfirm\n                            title=\"Are you sure to delete this app?\"\n                            onConfirm={() => {\n                                handleClickDeleteApp(data.key);\n                            }}>\n                            <MyButton value=\"Xóa\" type=\"link\" />\n                        </Popconfirm>\n                    </div>\n                );\n            }\n        }),\n    ];\n\n    const [pageInfo, setPageInfo] = useState<PageInfoModel>(new PageInfoModel());\n    const [orderBy, setOrderBy] = useState<OrderByModel>(new OrderByModel());\n    const [isLoading, setIsLoading] = useState(false);\n    const [data, setData] = useState([]);\n    const [visibleAdd, setVisibleAdd] = useState(false);\n    const [visibleEdit, setVisibleEdit] = useState(false);\n    const [keyEdit, setKeyEdit] = useState(undefined);\n\n    const loadData = useCallback(() => {\n        setIsLoading(true);\n        let pagination = new PaginationRequest(pageInfo.pageNumber, pageInfo.pageSize, orderBy);\n        MailAppService.GetList(pagination, (data: any) => {\n            setPageInfo(new PageInfoModel(data));\n            var pagedData = data.data.data.pagedData.map((row: any, index: number) => {\n                return {\n                    stt: index + 1,\n                    key: row.key,\n                    name: row.name,\n                    comment: row.comment,\n                    secret: row.keySecret,\n                    status: row.status,\n                    createdAt: row.createdAt,\n                    updatedAt: row.updatedAt\n                };\n            })\n            setData(pagedData);\n        }, undefined, () => {\n            setIsLoading(false);\n        })\n    }, [pageInfo.pageNumber, pageInfo.pageSize, orderBy]);\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n    function handleOnCloseAdd() {\n        setVisibleAdd(false);\n    }\n\n    function handleOnCloseEdit() {\n        setKeyEdit(undefined);\n        setVisibleEdit(false);\n    }\n\n    function handleClickAddApp() {\n        setVisibleAdd(true);\n    }\n\n    function handleClickEditApp(key: any) {\n        setKeyEdit(key);\n        setVisibleEdit(true);\n    }\n\n    function handleClickDeleteApp(key: any) {\n        setIsLoading(true);\n        MailAppService.GetDetail(key, (data: any) => {\n            MailAppService.Delete(key, data.data.data.timestamp, (data: any) => {\n                Fn.PrintMsgSuccess(data);\n                loadData();\n            }, () => {\n                setIsLoading(false);\n            })\n        }, () => {\n            setIsLoading(false);\n        })\n    }\n\n    return (\n        <MyBox\n            title=\"Quản lí app mail\"\n            isLoading={isLoading}>\n            <MyButton \n                type=\"primary\"\n                onClick={handleClickAddApp} \n                value=\"Thêm app mới\" />\n            <TableComponent\n                pageInfo={pageInfo}\n                setPageInfo={setPageInfo}\n                column={column}\n                dataSource={data}\n                loading={isLoading}\n                loadData={loadData}\n                orderBy={orderBy}\n                setOrderBy={setOrderBy} />\n\n            <ManageMailAppModifyComponent\n                keyData={undefined}\n                loadData={loadData}\n                isLoading={isLoading}\n                setIsLoading={setIsLoading}\n                visible={visibleAdd}\n                onClose={handleOnCloseAdd} />\n\n            <ManageMailAppModifyComponent\n                keyData={keyEdit}\n                loadData={loadData}\n                isLoading={isLoading}\n                setIsLoading={setIsLoading}\n                visible={visibleEdit}\n                onClose={handleOnCloseEdit} />\n        </MyBox>\n    );\n}"],"names":["SearchComponent","props","muityChoose","undefined","useState","visible","setVisible","useEffect","label","onClick","readOnly","value","resultName","placement","open","onClose","isLoading","setResultKey","setResultName","onSearch","params","dataSearch","map","data","index","name","a","split","Fn","console","log","resultKey","key","handleChooseSearch","UIFormatDateVNComponent","dateStr","moment","format","UIFormatDateTimeVNComponent","ManageMailAppModifyComponent","setIsLoading","setName","comment","setComment","keySecret","setKeySecret","status","setStatus","optionCheckList","setOptionCheckList","setDataSearch","loadData","useCallback","keyData","MailAppService","row","templates","title","layout","onSubmitCapture","body","Add","bodyTemplate","appKey","templateCode","message","data1","Edit","setValue","options","span","code","MyButton","type","id","htmlType","ManageMailAppIndexComponent","column","TableColumn","render","badge","msg","color","text","setKeyEdit","setVisibleEdit","onConfirm","timestamp","PageInfoModel","pageInfo","setPageInfo","OrderByModel","orderBy","setOrderBy","setData","visibleAdd","setVisibleAdd","visibleEdit","keyEdit","pagination","PaginationRequest","pageNumber","pageSize","pagedData","stt","secret","createdAt","updatedAt","MyBox","dataSource","loading"],"sourceRoot":""}
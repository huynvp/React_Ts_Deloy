{"version":3,"file":"static/js/665.3ec99a85.chunk.js","mappings":"0LAEO,SAASA,EAAwBC,GACpC,IAAIC,EAAU,GAOd,OALIA,OADgBC,IAAhBF,EAAMG,OAAuC,KAAhBH,EAAMG,OAAgC,OAAhBH,EAAMG,MAC/CC,IAAOJ,EAAMG,OAAOE,OAAO,cAE3B,IAIV,0BAAOJ,GAEf,CAEO,SAASK,EAA4BN,GACxC,IAAIC,EAAU,GAOd,OALIA,OADgBC,IAAhBF,EAAMG,OAAuC,KAAhBH,EAAMG,OAAgC,OAAhBH,EAAMG,MAC/CC,IAAOJ,EAAMG,OAAOE,OAAO,uBAE3B,IAIV,0BAAOJ,GAEf,C,+GC1BaM,GAAa,QAItB,WAAYC,GACR,IADqB,oBAHzBC,SAAkC,GAAG,KACrCC,QAAiC,GAAG,KACpCC,SAAkC,QAEjBT,IAATM,EAIA,OAHAI,KAAKH,SAAW,GAChBG,KAAKF,QAAU,QACfE,KAAKD,SAAW,IAIpBC,KAAKH,SAAWD,EAAKC,SAASI,KAAI,SAACL,EAAWM,GAC1C,OAAO,IAAIC,EAAoBP,EACnC,IACAI,KAAKF,QAAUF,EAAKE,QAAQG,KAAI,SAACL,EAAWM,GACxC,OAAO,IAAIC,EAAoBP,EACnC,IACAI,KAAKD,SAAWH,EAAKG,SAASE,KAAI,SAACL,EAAWM,GAC1C,OAAO,IAAIC,EAAoBP,EACnC,GACJ,IAGSO,GAAmB,QAW5B,WAAYP,EAAYM,IAAiB,oBAVzCE,SAAG,OACHC,iBAAW,OACXC,SAAG,OACHC,aAAO,OACPC,UAAI,OACJC,eAAS,OACTC,aAAO,OACPC,UAAI,OACJC,gBAAU,OACVC,gBAAU,EAENb,KAAKI,SAAgBd,IAAVY,EAAuBA,EAAQ,EAAK,KAC/CF,KAAKK,YAAcT,EAAKS,YACxBL,KAAKM,IAAMV,EAAKU,IAChBN,KAAKO,QAAUX,EAAKW,QACpBP,KAAKQ,KAAOZ,EAAKY,KACjBR,KAAKS,UAAYb,EAAKa,UACtBT,KAAKU,QAAUd,EAAKc,QACpBV,KAAKW,KAAOf,EAAKe,KACjBX,KAAKY,WAAahB,EAAKgB,WACvBZ,KAAKa,WAAajB,EAAKiB,UAC3B,I,6BC5CW,SAASC,EAAQ1B,GAC5B,OACI,SAAC,IAAU,CAAC2B,UAAU,YAAW,UAC7B,wBAAK3B,EAAMG,SAGvB,C,wBCJe,SAASyB,EAAU5B,GAC9B,OACI,iBAAK2B,UAAU,SAAQ,WACnB,wBAAK3B,EAAM6B,SACX,SAAC,IAAO,KACR,yBACK7B,EAAMQ,KAAKK,KAAI,SAACL,EAA2BM,GACxC,OACI,4BACI,yCAAyB,IAAEN,EAAKiB,WAAU,OAAI,+CAC9C,SAAC,IAA2B,CAACtB,MAAOK,EAAKS,eACzC,2BACI,wBAAKT,EAAKY,QACV,wBAAKZ,EAAKW,eALRL,EASlB,QAIhB,CCnBe,SAASgB,IACtB,OAAoCC,EAAAA,EAAAA,UAA+B,IAAIxB,GAAgB,eAAhFyB,EAAU,KAAEC,EAAa,KAchC,OAJAC,EAAAA,EAAAA,YAAU,WARRC,EAAAA,EAAAA,oBACGC,MAAK,SAACC,GACDA,EAAGC,WACLL,EAAc,IAAI1B,EAAc8B,EAAG7B,MAEvC,GAKJ,GAAG,KAGD,4BACE,SAACkB,EAAO,CAACN,KAAK,kBACd,SAACQ,EAAS,CAACC,MAAM,qBAAqBrB,KAAgB,OAAVwB,QAAU,IAAVA,OAAU,EAAVA,EAAYvB,YACxD,SAACmB,EAAS,CAACC,MAAM,oBAAoBrB,KAAgB,OAAVwB,QAAU,IAAVA,OAAU,EAAVA,EAAYtB,WACvD,SAACkB,EAAS,CAACC,MAAM,qBAAqBrB,KAAgB,OAAVwB,QAAU,IAAVA,OAAU,EAAVA,EAAYrB,aAG9D,C","sources":["components/core/UI_FormatComponent.tsx","models/versionManageModel.ts","components/core/Title.tsx","components/home/AboutItem.tsx","components/home/About.tsx"],"sourcesContent":["import moment from \"moment\";\n\nexport function UIFormatDateVNComponent(props: any) {\n    let dateStr = \"\";\n    if (props.value !== undefined && props.value !== '' && props.value !== null) {\n        dateStr = moment(props.value).format(\"DD/MM/YYYY\");\n    } else {\n        dateStr = \"\";\n    }\n\n    return (\n        <span>{dateStr}</span>\n    );\n}\n\nexport function UIFormatDateTimeVNComponent(props: any) {\n    let dateStr = \"\";\n    if (props.value !== undefined && props.value !== '' && props.value !== null) {\n        dateStr = moment(props.value).format(\"DD/MM/YYYY HH:mm:ss\");\n    } else {\n        dateStr = \"\";\n    }\n\n    return (\n        <span>{dateStr}</span>\n    );\n}","export class AboutResponse {\n    frontEnd: VersionItemResponse[] = [];\n    backEnd: VersionItemResponse[] = [];\n    database: VersionItemResponse[] = [];\n    constructor(data?: any) {\n        if (data === undefined) {\n            this.frontEnd = [];\n            this.backEnd = [];\n            this.database = [];\n            return;\n        }\n\n        this.frontEnd = data.frontEnd.map((data: any, index: number) => {\n            return new VersionItemResponse(data);\n        });\n        this.backEnd = data.backEnd.map((data: any, index: number) => {\n            return new VersionItemResponse(data);\n        });\n        this.database = data.database.map((data: any, index: number) => {\n            return new VersionItemResponse(data);\n        });\n    }\n}\n\nexport class VersionItemResponse {\n    stt: number | null;\n    dateRelease: string | null;\n    key: string;\n    message: string;\n    name: string;\n    timestamp: string;\n    version: Version;\n    type: number;\n    preRelease: string;\n    versionStr: string;\n    constructor(data?: any, index?: number) {\n        this.stt = index !== undefined ? (index + 1) : null;\n        this.dateRelease = data.dateRelease;\n        this.key = data.key;\n        this.message = data.message;\n        this.name = data.name;\n        this.timestamp = data.timestamp;\n        this.version = data.version;\n        this.type = data.type;\n        this.preRelease = data.preRelease;\n        this.versionStr = data.versionStr;\n    }\n}\n\nexport class Version {\n    major: number\n    minor: number\n    patch: number\n    preRelease: string\n    constructor(data: any) {\n        this.major = data.major;\n        this.minor = data.minor;\n        this.patch = data.patch;\n        this.preRelease = data.preRelease;\n    }\n}","import { BoxNoTitle } from \"./MyBox\";\n\nexport default function MyTitle(props: any) {\n    return (\n        <BoxNoTitle className=\"box-title\">\n            <h3>{props.value}</h3>\n        </BoxNoTitle>\n    );\n}","import { Divider } from \"antd\";\nimport { VersionItemResponse } from \"../../models/versionManageModel\";\nimport { UIFormatDateTimeVNComponent } from \"../core/UI_FormatComponent\";\n\nexport default function AboutItem(props: any) {\n    return (\n        <div className=\"my-box\">\n            <h4>{props.title}</h4>\n            <Divider />\n            <div>\n                {props.data.map((data: VersionItemResponse, index: number) => {\n                    return (\n                        <div key={index}>\n                            <strong>Version:</strong> {data.versionStr} - <strong>Release date:</strong> \n                            <UIFormatDateTimeVNComponent value={data.dateRelease} />\n                            <ul>\n                                <li>{data.name}</li>\n                                <li>{data.message}</li>\n                            </ul>\n                        </div>\n                    );\n                })}\n            </div>\n        </div>\n    );\n}","import { useEffect, useState } from 'react';\nimport { AboutResponse } from '../../models/versionManageModel';\nimport { HomeService } from '../../services/homeService';\nimport MyTitle from '../core/Title';\nimport AboutItem from './AboutItem';\n\nexport default function About() {\n  const [dataSource, setDataSource] = useState<AboutResponse | null>(new AboutResponse());\n  function GetListLogVersion() {\n    HomeService.GetListLogVersion()\n      .then((rs: any) => {\n        if (rs.isSuccess) {\n          setDataSource(new AboutResponse(rs.data));\n        }\n      })\n  }\n\n  useEffect(() => {\n    GetListLogVersion();\n  }, []);\n\n  return (\n    <div>\n      <MyTitle name=\"ThÃ´ng tin\" />\n      <AboutItem title=\"Changelog Frontend\" data={dataSource?.frontEnd} />\n      <AboutItem title=\"Changelog Backend\" data={dataSource?.backEnd} />\n      <AboutItem title=\"Changelog Database\" data={dataSource?.database} />\n    </div>\n  );\n}"],"names":["UIFormatDateVNComponent","props","dateStr","undefined","value","moment","format","UIFormatDateTimeVNComponent","AboutResponse","data","frontEnd","backEnd","database","this","map","index","VersionItemResponse","stt","dateRelease","key","message","name","timestamp","version","type","preRelease","versionStr","MyTitle","className","AboutItem","title","About","useState","dataSource","setDataSource","useEffect","HomeService","then","rs","isSuccess"],"sourceRoot":""}
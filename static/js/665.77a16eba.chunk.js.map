{"version":3,"file":"static/js/665.77a16eba.chunk.js","mappings":"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","sources":["components/core/Title.tsx","components/core/UI_FormatComponent.tsx","components/home/AboutItem.tsx","components/home/About.tsx","models/versionManageModel.ts"],"sourcesContent":["import { BoxNoTitle } from \"./MyBox\";\n\nexport default function MyTitle(props: any) {\n    return (\n        <BoxNoTitle className=\"box-title\">\n            <h3>{props.value}</h3>\n        </BoxNoTitle>\n    );\n}","import moment from \"moment\";\n\nexport function UIFormatDateVNComponent(props: any) {\n    let dateStr = \"\";\n    if (props.value !== undefined && props.value !== '' && props.value !== null) {\n        dateStr = moment(props.value).format(\"DD/MM/YYYY\");\n    } else {\n        dateStr = \"\";\n    }\n\n    return (\n        <span>{dateStr}</span>\n    );\n}\n\nexport function UIFormatDateTimeVNComponent(props: any) {\n    let dateStr = \"\";\n    if (props.value !== undefined && props.value !== '' && props.value !== null) {\n        dateStr = moment(props.value).format(\"DD/MM/YYYY HH:mm:ss\");\n    } else {\n        dateStr = \"\";\n    }\n\n    return (\n        <span>{dateStr}</span>\n    );\n}","import { Divider } from \"antd\";\nimport { VersionItemResponse } from \"../../models/versionManageModel\";\nimport { UIFormatDateTimeVNComponent } from \"../core/UI_FormatComponent\";\n\nexport default function AboutItem(props: any) {\n    return (\n        <div className=\"my-box\">\n            <h4>{props.title}</h4>\n            <Divider />\n            <div>\n                {props.data.map((data: VersionItemResponse, index: number) => {\n                    return (\n                        <div key={index}>\n                            <strong>Version:</strong> {data.versionStr} - <strong>Release date:</strong> \n                            <UIFormatDateTimeVNComponent value={data.dateRelease} />\n                            <ul>\n                                <li>{data.name}</li>\n                                <li>{data.message}</li>\n                            </ul>\n                        </div>\n                    );\n                })}\n            </div>\n        </div>\n    );\n}","import { useEffect, useState } from 'react';\nimport { AboutResponse } from '../../models/versionManageModel';\nimport { HomeService } from '../../services/homeService';\nimport MyTitle from '../core/Title';\nimport AboutItem from './AboutItem';\n\nexport default function About() {\n  const [dataSource, setDataSource] = useState<AboutResponse | null>(new AboutResponse());\n  function GetListLogVersion() {\n    HomeService.GetListLogVersion((data: any) => {\n      setDataSource(new AboutResponse(data.data.data));\n    })\n  }\n\n  useEffect(() => {\n    GetListLogVersion();\n  }, []);\n\n  return (\n    <div>\n      <MyTitle name=\"ThÃ´ng tin\" />\n      <AboutItem title=\"Changelog Frontend\" data={dataSource?.frontEnd} />\n      <AboutItem title=\"Changelog Backend\" data={dataSource?.backEnd} />\n      <AboutItem title=\"Changelog Database\" data={dataSource?.database} />\n    </div>\n  );\n}","export class AboutResponse {\n    frontEnd: VersionItemResponse[] = [];\n    backEnd: VersionItemResponse[] = [];\n    database: VersionItemResponse[] = [];\n    constructor(data?: any) {\n        if (data === undefined) {\n            this.frontEnd = [];\n            this.backEnd = [];\n            this.database = [];\n            return;\n        }\n\n        this.frontEnd = data.frontEnd.map((data: any, index: number) => {\n            return new VersionItemResponse(data);\n        });\n        this.backEnd = data.backEnd.map((data: any, index: number) => {\n            return new VersionItemResponse(data);\n        });\n        this.database = data.database.map((data: any, index: number) => {\n            return new VersionItemResponse(data);\n        });\n    }\n}\n\nexport class VersionItemResponse {\n    stt: number | null;\n    dateRelease: string | null;\n    key: string;\n    message: string;\n    name: string;\n    timestamp: string;\n    version: Version;\n    type: number;\n    preRelease: string;\n    versionStr: string;\n    constructor(data?: any, index?: number) {\n        this.stt = index !== undefined ? (index + 1) : null;\n        this.dateRelease = data.dateRelease;\n        this.key = data.key;\n        this.message = data.message;\n        this.name = data.name;\n        this.timestamp = data.timestamp;\n        this.version = data.version;\n        this.type = data.type;\n        this.preRelease = data.preRelease;\n        this.versionStr = data.versionStr;\n    }\n}\n\nexport class Version {\n    major: number\n    minor: number\n    patch: number\n    preRelease: string\n    constructor(data: any) {\n        this.major = data.major;\n        this.minor = data.minor;\n        this.patch = data.patch;\n        this.preRelease = data.preRelease;\n    }\n}"],"names":["MyTitle","props","className","value","UIFormatDateVNComponent","dateStr","undefined","moment","format","UIFormatDateTimeVNComponent","AboutItem","title","data","map","index","versionStr","dateRelease","name","message","About","useState","AboutResponse","dataSource","setDataSource","useEffect","HomeService","frontEnd","backEnd","database","this","VersionItemResponse","stt","key","timestamp","version","type","preRelease"],"sourceRoot":""}
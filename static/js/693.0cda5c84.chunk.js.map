{"version":3,"file":"static/js/693.0cda5c84.chunk.js","mappings":"0LAEO,SAASA,EAAwBC,GACpC,IAAQC,EAAUD,EAAVC,MACJC,OAAoBC,IAAVF,GAAiC,KAAVA,GAA0B,OAAVA,EACjDG,IAAOH,EAAMI,WAAWC,OAAO,cAAgB,GACnD,OAAO,0BAAOJ,GAClB,CAEO,SAASK,EAA4BP,GACxC,IAAQC,EAAUD,EAAVC,MACJC,OAAoBC,IAAVF,GAAiC,KAAVA,GAA0B,OAAVA,EACjDG,IAAOH,EAAMI,WAAWC,OAAO,uBAAyB,GAC5D,OAAO,0BAAOJ,GAClB,C,sOCFe,SAASM,IACpB,IAAMC,EAAS,CACX,IAAIC,EAAAA,GAAY,CAAEC,MAAO,MAAOC,UAAW,MAAOC,IAAK,MAAOC,UAAU,IACxE,IAAIJ,EAAAA,GAAY,CAAEC,MAAO,SAAOC,UAAW,OAAQC,IAAK,SACxD,IAAIH,EAAAA,GAAY,CACZC,MAAO,qBAAcC,UAAW,SAAUC,IAAK,SAAUE,OAAQ,SAACC,GAC9D,IAAIf,EAAQ,GACRgB,EAAQ,OAoBZ,OAnBW,IAAPD,IACAf,EAAQ,aACRgB,EAAQ,SAGD,IAAPD,IACAf,EAAQ,oBACRgB,EAAQ,QAGD,IAAPD,IACAf,EAAQ,gBACRgB,EAAQ,WAGA,IAARD,IACAf,EAAQ,oBACRgB,EAAQ,QAGR,SAAC,IAAG,CAACA,MAAOA,EAAM,SAAEhB,GAE5B,IAEJ,IAAIS,EAAAA,GAAY,CACZC,MAAO,qBAAmBE,IAAK,gBAAiBD,UAAW,gBAAiBG,OAAQ,SAACG,GACjF,OAAQ,SAAC,IAA2B,CAACjB,MAAOiB,GAChD,IAEJ,IAAIR,EAAAA,GAAY,CACZC,MAAO,yBAAuBE,IAAK,oBAAqBD,UAAW,oBAAqBG,OAAQ,SAACG,GAC7F,OAAQ,SAAC,IAA2B,CAACjB,MAAOiB,GAChD,IAEJ,IAAIR,EAAAA,GAAY,CACZC,MAAO,yBAAaE,IAAK,SAAUD,UAAW,SAAUG,OAAQ,SAACG,EAAaC,GAC1E,OACI,4BACI,SAAC,IAAM,CAACC,KAAK,OAAM,UACf,SAAC,KAAI,CAACC,GAAE,mCAA8BF,EAAKN,KAAM,SAAC,2BAGtD,SAAC,IAAU,CACPF,MAAM,sCACNW,UAAW,WA2CnC,IAAiCT,IA1CmBM,EAAKN,IA2CrDU,GAAa,GACbC,EAAAA,GAAAA,UAA8BX,GAAK,SAACM,GAChCK,EAAAA,GAAAA,OAA2BX,EAAKY,EAAAA,GAAAA,oBAAuBN,IAAO,SAACA,GAC3DO,EAAAA,GAAAA,QAAgBP,EAAKA,KAAKO,SAC1BC,GACJ,IAAG,WACCJ,GAAa,EACjB,GACJ,IAAG,WACCA,GAAa,EACjB,GApDoB,EAAE,UACF,SAAC,IAAM,CAACH,KAAK,OAAM,SAAC,eAMpC,KAIR,GAA8BQ,EAAAA,EAAAA,UAAuB,IAAIC,EAAAA,GAAe,eAAjEC,EAAO,KAAEC,EAAU,KAC1B,GAAgCH,EAAAA,EAAAA,UAAwB,IAAII,EAAAA,GAAgB,eAArEC,EAAQ,KAAEC,EAAW,KAC5B,GAAkCN,EAAAA,EAAAA,WAAkB,GAAM,eAAnDO,EAAS,KAAEZ,EAAY,KAC9B,GAAwBK,EAAAA,EAAAA,UAAS,IAAG,eAA7BT,EAAI,KAAEiB,EAAO,KAEdT,GAAWU,EAAAA,EAAAA,cAAY,WACzBd,GAAa,GACb,IAAIe,EAAoB,IAAIC,EAAAA,GAAkBN,EAASO,WAAYP,EAASQ,SAAUX,GACtFN,EAAAA,GAAAA,QAA4Bc,GAAmB,SAACnB,GAC5Ce,EAAY,IAAIF,EAAAA,EAAcb,IAC9B,IAAID,EAAMC,EAAKA,KAAKA,KAAKuB,UAAUC,KAAI,SAACxB,EAAWyB,GAC/C,MAAO,CACH/B,IAAKM,EAAKN,IACVgC,IAAKD,EAAQ,EACbE,KAAM3B,EAAK2B,KACXC,OAAQ5B,EAAK4B,OACbC,cAAe7B,EAAK6B,cACpBC,kBAAmB9B,EAAK8B,kBAEhC,IACAb,EAAQlB,EACZ,QAAGf,GAAW,WACVoB,GAAa,EACjB,GACJ,GAAG,CAACU,EAASO,WAAYP,EAASQ,SAAUX,IAoB5C,OAlBAoB,EAAAA,EAAAA,YAAU,WACNvB,GACJ,GAAG,CAACA,KAiBA,SAAC,KAAK,CACFhB,MAAM,mCACNwB,UAAWA,EACXgB,WAAY,kBACR,4BACI,SAAC,KAAI,CAAC9B,GAAG,0BAAyB,UAAC,SAAC,IAAQ,CAACD,KAAK,UAAUnB,MAAM,wBAClE,SAAC,KAAI,CAACoB,GAAG,iCAAgC,UAAC,SAAC,IAAQ,CAACD,KAAK,YAAYnB,MAAM,gCACzE,EACR,UACF,SAAC,IAAc,CACX6B,QAASA,EACTC,WAAYA,EACZE,SAAUA,EACVC,YAAaA,EACbzB,OAAQA,EACR2C,WAAYjC,EACZkC,QAASlB,EACTR,SAAUA,KAG1B,C","sources":["components/core/UI_FormatComponent.tsx","components/manage/storedManage/IndexComponent.tsx"],"sourcesContent":["import moment from \"moment\";\r\n\r\nexport function UIFormatDateVNComponent(props: any) {\r\n    const { value } = props;\r\n    let dateStr = value !== undefined && value !== '' && value !== null ?\r\n        moment(value.timeLocal).format(\"DD/MM/YYYY\") : \"\";\r\n    return <span>{dateStr}</span>\r\n}\r\n\r\nexport function UIFormatDateTimeVNComponent(props: any) {\r\n    const { value } = props;\r\n    let dateStr = value !== undefined && value !== '' && value !== null ?\r\n        moment(value.timeLocal).format(\"DD/MM/YYYY HH:mm:ss\") : \"\";\r\n    return <span>{dateStr}</span>\r\n}","import { Button, message, Popconfirm, Tag } from \"antd\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Fn } from \"../../../helper/function\";\r\nimport { PaginationRequest, TableColumn } from \"../../../models/baseModel\";\r\nimport { StoredManageService } from \"../../../services/adminService\";\r\nimport { MyBox } from \"../../core/MyBox\";\r\nimport { MyButton } from \"../../core/MyButton\";\r\nimport { OrderByModel, PageInfoModel } from \"../../core/TableModel\";\r\nimport TableComponent from \"../../core/TableNewComponent\";\r\nimport { UIFormatDateTimeVNComponent } from \"../../core/UI_FormatComponent\";\r\n\r\nexport default function ManageStoredManageIndexComponent() {\r\n    const column = [\r\n        new TableColumn({ title: \"STT\", dataIndex: \"stt\", key: \"stt\", disabled: true }),\r\n        new TableColumn({ title: \"Tên\", dataIndex: \"name\", key: \"name\" }),\r\n        new TableColumn({\r\n            title: \"Trạng thái\", dataIndex: \"status\", key: \"status\", render: (el: number) => {\r\n                let value = \"\";\r\n                let color = \"blue\";\r\n                if (el === 0) {\r\n                    value = \"Developing\";\r\n                    color = \"green\";\r\n                }\r\n\r\n                if (el === 1) {\r\n                    value = \"Đã deploy\";\r\n                    color = \"blue\";\r\n                }\r\n\r\n                if (el === 2) {\r\n                    value = \"Đang fix\";\r\n                    color = \"yellow\";\r\n                }\r\n\r\n                if (el === -1) {\r\n                    value = \"Đã xóa\";\r\n                    color = \"red\";\r\n                }\r\n                return (\r\n                    <Tag color={color}>{value}</Tag>\r\n                )\r\n            }\r\n        }),\r\n        new TableColumn({\r\n            title: \"Ngày deploy Dev\", key: \"dateDeployDev\", dataIndex: \"dateDeployDev\", render: (row: string) => {\r\n                return (<UIFormatDateTimeVNComponent value={row} />);\r\n            }\r\n        }),\r\n        new TableColumn({\r\n            title: \"Ngày deploy Product\", key: \"dateDeployProduct\", dataIndex: \"dateDeployProduct\", render: (row: string) => {\r\n                return (<UIFormatDateTimeVNComponent value={row} />);\r\n            }\r\n        }),\r\n        new TableColumn({\r\n            title: \"Hành động\", key: \"action\", dataIndex: \"action\", render: (row: string, data: any) => {\r\n                return (\r\n                    <div>\r\n                        <Button type=\"link\">\r\n                            <Link to={`/admin/storedManage/edit/${data.key}`}>Chỉnh sửa</Link>\r\n                        </Button>\r\n\r\n                        <Popconfirm\r\n                            title=\"Are you sure to delete this stored?\"\r\n                            onConfirm={() => {\r\n                                handleClickDeleteStored(data.key);\r\n                            }}>\r\n                            <Button type=\"link\">\r\n                                Xóa\r\n                            </Button>\r\n                        </Popconfirm>\r\n                    </div>\r\n                );\r\n            }\r\n        }),\r\n    ];\r\n\r\n    const [orderBy, setOrderBy] = useState<OrderByModel>(new OrderByModel());\r\n    const [pageInfo, setPageInfo] = useState<PageInfoModel>(new PageInfoModel());\r\n    const [isLoading, setIsLoading] = useState<boolean>(false);\r\n    const [data, setData] = useState([]);\r\n\r\n    const loadData = useCallback(() => {\r\n        setIsLoading(true);\r\n        var paginationRequest = new PaginationRequest(pageInfo.pageNumber, pageInfo.pageSize, orderBy);\r\n        StoredManageService.GetList(paginationRequest, (data: any) => {\r\n            setPageInfo(new PageInfoModel(data));\r\n            let row = data.data.data.pagedData.map((data: any, index: number) => {\r\n                return {\r\n                    key: data.key,\r\n                    stt: index + 1,\r\n                    name: data.name,\r\n                    status: data.status,\r\n                    dateDeployDev: data.dateDeployDev,\r\n                    dateDeployProduct: data.dateDeployProduct\r\n                };\r\n            })\r\n            setData(row);\r\n        }, undefined, () => {\r\n            setIsLoading(false);\r\n        })\r\n    }, [pageInfo.pageNumber, pageInfo.pageSize, orderBy]);\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n    }, [loadData]);\r\n\r\n    function handleClickDeleteStored(key: string) {\r\n        setIsLoading(true);\r\n        StoredManageService.GetDetail(key, (data: any) => {\r\n            StoredManageService.Delete(key, Fn.GetTimestamp_no_use(data), (data: any) => {\r\n                message.success(data.data.message);\r\n                loadData();\r\n            }, () => {\r\n                setIsLoading(false);\r\n            })\r\n        }, () => {\r\n            setIsLoading(false);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <MyBox\r\n            title=\"Quản lý stored procedure\"\r\n            isLoading={isLoading}\r\n            buttonList={() => (\r\n                <div>\r\n                    <Link to=\"/admin/storedManage/add\"><MyButton type=\"primary\" value=\"Thêm mới\" /></Link>\r\n                    <Link to=\"/admin/storedManage/linkStored\"><MyButton type=\"secondary\" value=\"Liên kết stored\" /></Link>\r\n                </div>\r\n            )}>\r\n            <TableComponent\r\n                orderBy={orderBy}\r\n                setOrderBy={setOrderBy}\r\n                pageInfo={pageInfo}\r\n                setPageInfo={setPageInfo}\r\n                column={column}\r\n                dataSource={data}\r\n                loading={isLoading}\r\n                loadData={loadData} />\r\n        </MyBox>\r\n    );\r\n}"],"names":["UIFormatDateVNComponent","props","value","dateStr","undefined","moment","timeLocal","format","UIFormatDateTimeVNComponent","ManageStoredManageIndexComponent","column","TableColumn","title","dataIndex","key","disabled","render","el","color","row","data","type","to","onConfirm","setIsLoading","StoredManageService","Fn","message","loadData","useState","OrderByModel","orderBy","setOrderBy","PageInfoModel","pageInfo","setPageInfo","isLoading","setData","useCallback","paginationRequest","PaginationRequest","pageNumber","pageSize","pagedData","map","index","stt","name","status","dateDeployDev","dateDeployProduct","useEffect","buttonList","dataSource","loading"],"sourceRoot":""}
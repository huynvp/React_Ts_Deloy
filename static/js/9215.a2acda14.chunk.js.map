{"version":3,"file":"static/js/9215.a2acda14.chunk.js","mappings":"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","sources":["components/core/TableModel.ts","components/core/TableNewComponent.tsx","components/core/UI_FormatComponent.tsx","components/tool/task/workflow/document/ApiDocComponent.tsx","components/tool/task/workflow/document/ModifyComponent.tsx","components/tool/task/workflow/document/IndexComponent.tsx","models/baseModel.ts"],"sourcesContent":["export class PageInfoModel {\r\n    pageNumber: number = 1;\r\n    pageSize: number = 10;\r\n    total: number = 0;\r\n    showPagination: boolean = true;\r\n\r\n    constructor(data?: any) {\r\n        if (data === undefined) return;\r\n        const pageInfo = data.data.pageInfo;\r\n        this.total = pageInfo.totalCount;\r\n        this.pageNumber = pageInfo.currentPage;\r\n        this.pageSize = pageInfo.pageSize;\r\n    }\r\n\r\n    handleChangePage(pageNumber: number, pageSize: number, setPageInfo: any) {\r\n        this.pageNumber = pageNumber;\r\n        this.pageSize = pageSize;\r\n\r\n        setPageInfo(new PageInfoModel({\r\n            data: {\r\n                pageInfo: {\r\n                    totalCount: this.total,\r\n                    currentPage: this.pageNumber,\r\n                    pageSize: this.pageSize\r\n                }\r\n            }\r\n        }));\r\n    }\r\n\r\n    handleChangeOrderBy(orderBy: string, typeOrder: boolean, setPageInfo: any) {\r\n        setPageInfo(new PageInfoModel({\r\n            data: {\r\n                pageInfo: {\r\n                    totalCount: this.total,\r\n                    currentPage: this.pageNumber,\r\n                    pageSize: this.pageSize\r\n                }\r\n            }\r\n        }));\r\n    }\r\n\r\n    setPageSize(pageSize: number, setPageInfo: any) {\r\n        setPageInfo(new PageInfoModel({\r\n            data: {\r\n                pageInfo: {\r\n                    totalCount: this.total,\r\n                    currentPage: this.pageNumber,\r\n                    pageSize: pageSize\r\n                }\r\n            }\r\n        }));\r\n    }\r\n}\r\n\r\n\r\nexport class OrderByModel {\r\n    column: string | undefined = '';\r\n    esc: boolean | undefined = false;\r\n    constructor(column?: string, desc?: boolean) {\r\n        if (column !== undefined) {\r\n            this.column = column;\r\n            this.esc = desc;\r\n        }\r\n    }\r\n\r\n    setColumn(column: string, setOrderBy: any) {\r\n        setOrderBy(new OrderByModel(column, this.esc))\r\n    }\r\n\r\n    setDesc(desc: boolean, setOrderBy: any) {\r\n        setOrderBy(new OrderByModel(this.column, desc))\r\n    }\r\n\r\n    genQueryOrderBy() {\r\n        if (this.column === '') {\r\n            return '';\r\n        }\r\n\r\n        if (!this.esc) {\r\n            return this.column + \" desc\";\r\n        }\r\n        return this.column;\r\n    }\r\n}","import { Col, Pagination, Row, Switch, Table } from \"antd\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { TableColumn } from \"../../models/baseModel\";\r\nimport { MyFormItem } from \"./Input\";\r\nimport { Box } from \"./MyBox\";\r\nimport { MyButton } from \"./MyButton\";\r\nimport { OrderByModel, PageInfoModel } from \"./TableModel\";\r\nimport './UIStyle.css';\r\n// pageInfo={pageInfo}\r\n// setPageInfo={setPageInfo}\r\n// column={column}\r\n// dataSource={data}\r\n// loading={isLoading}\r\n// loadData={loadData}\r\n\r\n// {title:\"Title\",dataIndex:\"dataIndex\",key:\"key\",render=()=>{})}\r\nexport default function TableComponent(props: any) {\r\n    const { column, setOrderBy, setPageInfo, loading, dataSource, scroll, rowClassName, loadData } = props;\r\n\r\n    const pageInfo: PageInfoModel = props.pageInfo;\r\n    const orderBy: OrderByModel = props.orderBy;\r\n\r\n    const [columnProps, setColumnProps] = useState([]);\r\n    const [timer, setTimer] = useState(100);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setTimer(timer - 1);\r\n            if (timer === 1) {\r\n                setTimer(100);\r\n                loadData();\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [timer, setTimer, loadData]);\r\n\r\n    const renderColumn = useCallback(() => {\r\n        if (column === undefined) {\r\n            return;\r\n        }\r\n\r\n        setColumnProps(column.map((data: TableColumn, index: number) => {\r\n            return {\r\n                key: data.key,\r\n                className: data.className,\r\n                width: data.width,\r\n                title: data.title,\r\n                dataIndex: data.dataIndex,\r\n                render: data.render,\r\n            };\r\n        }));\r\n    }, [column]);\r\n\r\n    useEffect(() => {\r\n        renderColumn();\r\n    }, [renderColumn]);\r\n\r\n    function handleChangeTypeOrder(data: any) {\r\n        orderBy.setDesc(data, setOrderBy);\r\n    }\r\n\r\n    function handleChangeValue(data: any) {\r\n        orderBy.setColumn(data, setOrderBy);\r\n    }\r\n\r\n    function handleChangePage(page: number, pageSize: number) {\r\n        pageInfo.handleChangePage(page, pageSize, setPageInfo);\r\n    }\r\n\r\n    function handleClickRefreshData() {\r\n        loadData();\r\n    }\r\n\r\n    return (\r\n        <div className=\"my_table\">\r\n            <Box>\r\n                <Row gutter={16}>\r\n                    <Col span={6}>\r\n                        <MyButton\r\n                            type=\"secondary\"\r\n                            value={`Refresh data in ${timer}`}\r\n                            isLoading={loading}\r\n                            onClick={handleClickRefreshData} />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <MyFormItem.Select\r\n                            value={orderBy?.column}\r\n                            onChange={handleChangeValue}\r\n                            options={column} />\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Switch\r\n                            disabled={orderBy?.column === ''}\r\n                            checked={orderBy?.esc}\r\n                            onChange={handleChangeTypeOrder}\r\n                            checkedChildren=\"Tăng dần\"\r\n                            unCheckedChildren=\"Giảm dần\" />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Pagination\r\n                            style={{ display: pageInfo.showPagination ? '' : 'none' }}\r\n                            current={pageInfo.pageNumber}\r\n                            disabled={loading}\r\n                            onChange={handleChangePage}\r\n                            pageSize={pageInfo.pageSize}\r\n                            total={pageInfo.total} />\r\n                    </Col>\r\n\r\n                </Row>\r\n            </Box>\r\n\r\n            <Table\r\n                scroll={{ y: scroll }}\r\n                rowClassName={rowClassName}\r\n                style={{ \"paddingTop\": \"10px\" }}\r\n                bordered\r\n                loading={loading}\r\n                pagination={false}\r\n                dataSource={dataSource}\r\n                size=\"small\"\r\n                columns={columnProps}>\r\n                {/* {renderColumn()} */}\r\n            </Table>\r\n        </div>\r\n    );\r\n}","import moment from \"moment\";\r\n\r\nexport function UIFormatDateVNComponent(props: any) {\r\n    const { value } = props;\r\n    let dateStr = value !== undefined && value !== '' && value !== null ?\r\n        moment(value.timeLocal).format(\"DD/MM/YYYY\") : \"\";\r\n    return <span>{dateStr}</span>\r\n}\r\n\r\nexport function UIFormatDateTimeVNComponent(props: any) {\r\n    const { value } = props;\r\n    let dateStr = value !== undefined && value !== '' && value !== null ?\r\n        moment(value.timeLocal).format(\"DD/MM/YYYY HH:mm:ss\") : \"\";\r\n    return <span>{dateStr}</span>\r\n}","import { useCallback, useEffect, useState } from \"react\";\r\nimport { Fn } from \"../../../../../helper/function\";\r\nimport { TableColumn } from \"../../../../../models/baseModel\";\r\nimport { ApiDocService } from \"../../../../../services/taskService\";\r\nimport { Box } from \"../../../../core/MyBox\";\r\nimport { MyButton } from \"../../../../core/MyButton\";\r\nimport { OrderByModel, PageInfoModel } from \"../../../../core/TableModel\";\r\nimport TableComponent from \"../../../../core/TableNewComponent\";\r\nimport \"../../task.css\";\r\nimport { UIFormatDateTimeVNComponent } from \"../../../../core/UI_FormatComponent\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { TextWrap } from \"../../../../core/Text\";\r\nimport { Tag } from \"antd\";\r\n\r\nexport default function ApiDocComponent(props: any) {\r\n    const { isLoading, setIsLoading } = props;\r\n    const [data, setData] = useState([]);\r\n\r\n    const [pageInfo, setPageInfo] = useState<PageInfoModel>(new PageInfoModel());\r\n    const [orderBy, setOrderBy] = useState<OrderByModel>(new OrderByModel());\r\n    const column: any = [\r\n        new TableColumn({\r\n            title: \"STT\", key: \"stt\", render: (data: any, row: any, index: any) =>\r\n                Fn.RenderSTT(data, row, index, pageInfo)\r\n        }),\r\n        new TableColumn({\r\n            title: \"Method\", key: \"method\", render: (data: number) => {\r\n                var method = \"\";\r\n                var color = \"\";\r\n                switch (data) {\r\n                    case 1:\r\n                        method = \"Get\";\r\n                        color = \"green\";\r\n                        break;\r\n                    case 2:\r\n                        method = \"Post\";\r\n                        color = \"blue\";\r\n                        break;\r\n                    case 3:\r\n                        method = \"Put\";\r\n                        color = \"purple\";\r\n                        break;\r\n                    case 4:\r\n                        method = \"Delete\";\r\n                        color = \"red\";\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                return <Tag color={color}>{method}</Tag>\r\n            }\r\n        }),\r\n        new TableColumn({\r\n            title: \"Tên\", key: \"name\", render: (data: string, row: any) =>\r\n                <Link to={`/tools/tasks/projects/${props.projectKey}/codeManage/document/${props.folderKey}/apis/${row.key}`}>\r\n                    {data}\r\n                </Link>\r\n        }),\r\n        new TableColumn({\r\n            title: \"Url\", key: \"url\", render: (data: string) =>\r\n                <TextWrap>{data}</TextWrap>\r\n        }),\r\n        new TableColumn({\r\n            title: \"Ngày tạo\", key: \"createdAt\", render: (data: string) =>\r\n                <UIFormatDateTimeVNComponent value={data} />\r\n        }),\r\n        new TableColumn({\r\n            title: \"Ngày cập nhật cuối\", key: \"updatedAt\", render: (data: string) =>\r\n                <UIFormatDateTimeVNComponent value={data} />\r\n        })\r\n    ];\r\n\r\n    const loadData = useCallback(() => {\r\n        if (props.folderKey !== undefined && props.folderKey !== null) {\r\n            setIsLoading(true);\r\n            ApiDocService.GetList(props.projectKey, props.folderKey)\r\n                .then((rs: any) => {\r\n                    if (rs.isSuccess) {\r\n                        setData(rs.data.pagedData);\r\n                    }\r\n                })\r\n                .finally(() => setIsLoading(false));\r\n        }\r\n    }, [props.projectKey, props.folderKey, setIsLoading]);\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n    }, [loadData])\r\n\r\n    return (\r\n        <Box>\r\n            <Link to={`/tools/tasks/projects/${props.projectKey}/codeManage/document/${props.folderKey}/apis/add`}>\r\n                <MyButton\r\n                    type=\"primary\"\r\n                    value=\"Thêm API mới\" />\r\n            </Link>\r\n\r\n            <TableComponent\r\n                pageInfo={pageInfo}\r\n                setPageInfo={setPageInfo}\r\n                orderBy={orderBy}\r\n                setOrderBy={setOrderBy}\r\n                column={column}\r\n                dataSource={data}\r\n                loading={isLoading}\r\n                loadData={loadData} />\r\n        </Box>\r\n    );\r\n}","import { Drawer, Form } from \"antd\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Fn } from \"../../../../../helper/function\";\r\nimport { DocumentService } from \"../../../../../services/taskService\";\r\nimport { MyFormItem } from \"../../../../core/Input\";\r\nimport { MyButton } from \"../../../../core/MyButton\";\r\nimport HeaderComponent from \"./HeaderComponent\";\r\n\r\nexport default function ModifyComponent(props: any) {\r\n    const [item, setItem] = useState([]);\r\n    const [name, setName] = useState('');\r\n\r\n    const { projectKey, keyEdit, setKeyEdit, visible, setVisible, isLoading, setIsLoading, loadData } = props;\r\n\r\n    const loadDataDetail = useCallback(() => {\r\n        if (keyEdit !== undefined) {\r\n            setIsLoading(true);\r\n            DocumentService.GetDetail(projectKey, keyEdit)\r\n                .then((rs: any) => {\r\n                    if (rs.isSuccess) {\r\n                        setName(rs.data.name);\r\n                        setItem(rs.data.headers);\r\n                    }\r\n                })\r\n                .finally(() => setIsLoading(false));\r\n        }\r\n    }, [projectKey, keyEdit, setIsLoading]);\r\n\r\n    useEffect(() => {\r\n        loadDataDetail();\r\n    }, [loadDataDetail])\r\n\r\n    function onClose() {\r\n        setVisible(false);\r\n        if (setKeyEdit !== undefined) {\r\n            setKeyEdit(undefined);\r\n        }\r\n    }\r\n\r\n    function filterArray() {\r\n        var t = item;\r\n\r\n        t = t.filter((obj: any) => {\r\n            return (obj !== undefined && obj.key !== '');\r\n        })\r\n        return t;\r\n    }\r\n\r\n    function handleSubmitForm() {\r\n        let headers = filterArray();\r\n        let body = {\r\n            name: name,\r\n            headers: headers\r\n        }\r\n\r\n        setIsLoading(true);\r\n        if (keyEdit !== undefined) {\r\n            edit(body);\r\n        } else {\r\n            add(body);\r\n        }\r\n    }\r\n\r\n    function add(body: any) {\r\n        DocumentService.Add(projectKey, body)\r\n            .then((rs: any) => {\r\n                if (rs.isSuccess) {\r\n                    Fn.PrintMsgSuccessV2(rs);\r\n                    loadData();\r\n                }\r\n            })\r\n    }\r\n\r\n    function edit(body: any) {\r\n        DocumentService.GetDetail(projectKey, keyEdit)\r\n            .then((rs: any) => {\r\n                if (rs.isSuccess) {\r\n                    body = Fn.GetTimestampV2(rs, body);\r\n                    DocumentService.Edit(projectKey, keyEdit, body)\r\n                        .then((rs: any) => {\r\n                            if (rs.isSuccess) {\r\n                                Fn.PrintMsgSuccessV2(rs);\r\n                                loadData();\r\n                            } else setIsLoading(false);\r\n                        })\r\n                } else setIsLoading(false);\r\n            })\r\n    }\r\n\r\n    function deleteData() {\r\n        setIsLoading(true);\r\n        DocumentService.GetDetail(projectKey, keyEdit)\r\n            .then((rs: any) => {\r\n                if (rs.isSuccess) {\r\n                    DocumentService.Delete(projectKey, keyEdit, Fn.GetTimestampV2(rs))\r\n                        .then((rs: any) => {\r\n                            if (rs.isSuccess) {\r\n                                Fn.PrintMsgSuccessV2(rs);\r\n                                loadData();\r\n                                onClose();\r\n                            } else setIsLoading(false);\r\n                        })\r\n                } else setIsLoading(false);\r\n            })\r\n    }\r\n\r\n    function handleClickDelete() {\r\n        Swal.fire(\"Xác nhận xóa?\", \"Bạn có muốn xóa dữ liệu?\", \"question\")\r\n            .then((isConfirmed) => {\r\n                if (isConfirmed.isConfirmed) {\r\n                    deleteData();\r\n                }\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Drawer\r\n            title={keyEdit !== undefined ? \"Chỉnh sửa\" : \"Thêm\"}\r\n            open={visible}\r\n            onClose={onClose}>\r\n            <Form\r\n                layout=\"vertical\"\r\n                onSubmitCapture={handleSubmitForm}>\r\n                <MyFormItem.Input\r\n                    label=\"Tên\"\r\n                    value={name}\r\n                    setValue={setName} />\r\n\r\n                <HeaderComponent\r\n                    data={item}\r\n                    setData={setItem} />\r\n\r\n                <MyButton\r\n                    type=\"success\"\r\n                    isLoading={isLoading}\r\n                    htmlType=\"submit\"\r\n                    value={keyEdit !== undefined ? \"Chỉnh sửa\" : \"Thêm\"} />\r\n\r\n                <MyButton\r\n                    type=\"danger\"\r\n                    onClick={handleClickDelete}\r\n                    isLoading={isLoading}\r\n                    value=\"Xóa\" />\r\n            </Form>\r\n        </Drawer>\r\n    )\r\n}","import { Col, Row } from \"antd\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport { PaginationRequest } from \"../../../../../models/baseModel\";\r\nimport { DocumentService } from \"../../../../../services/taskService\";\r\nimport { Box, MyBox } from \"../../../../core/MyBox\";\r\nimport { MyButton } from \"../../../../core/MyButton\";\r\nimport { OrderByModel } from \"../../../../core/TableModel\";\r\nimport \"../../task.css\";\r\nimport ApiDocComponent from \"./ApiDocComponent\";\r\nimport ModifyComponent from \"./ModifyComponent\";\r\n\r\nexport default function IndexComponent() {\r\n    const search = useLocation().search;\r\n    const folderKey = new URLSearchParams(search).get('folder');\r\n    const [folderChoose, setFolderChoose] = useState(folderKey);\r\n\r\n    const projectKey = useParams().key;\r\n    const [data, setData] = useState([]);\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    const [visibleEdit, setVisibleEdit] = useState(false);\r\n    const [keyEdit, setKeyEdit] = useState<string | undefined>(undefined);\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const loadData = useCallback(() => {\r\n        setIsLoading(true);\r\n        let pagination = new PaginationRequest(1, 100000, new OrderByModel());\r\n        DocumentService.GetList(projectKey, pagination)\r\n            .then((rs: any) => {\r\n                if (rs.isSuccess) {\r\n                    setData(rs.data.pagedData);\r\n                }\r\n            })\r\n            .finally(() => setIsLoading(false));\r\n    }, [projectKey]);\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n    }, [loadData]);\r\n\r\n    function renderData() {\r\n        return data.map((data: any, index: number) => {\r\n            return (\r\n                <li key={index} className=\"item-folder\">\r\n                    <MyButton\r\n                        className={data.key === folderChoose ? \"folder-selected\" : \"\"}\r\n                        onDoubleClick={() => {\r\n                            handleDoubleClickDetail(data.key)\r\n                        }}\r\n                        onClick={() => {\r\n                            handleClickDetailFolder(data.key)\r\n                        }}\r\n                        value={data.name} />\r\n                </li>\r\n            );\r\n        })\r\n    }\r\n\r\n    function handleClickDetailFolder(key: string) {\r\n        setFolderChoose(key);\r\n    }\r\n\r\n    function handleDoubleClickDetail(key: string) {\r\n        setVisibleEdit(true);\r\n        setKeyEdit(key);\r\n    }\r\n    function handleClickAddFolder() {\r\n        setVisible(true);\r\n    }\r\n\r\n    return (\r\n        <MyBox\r\n            title=\"Document API\"\r\n            isLoading={isLoading}>\r\n            <Row gutter={6}>\r\n                <Col span={4}>\r\n                    <Box>\r\n                        <MyButton type=\"primary\" onClick={handleClickAddFolder} value=\"Thêm thư mục\" />\r\n                        <ul>\r\n                            {renderData()}\r\n                        </ul>\r\n                    </Box>\r\n                </Col>\r\n                <Col span={20}>\r\n                    <ApiDocComponent\r\n                        folderKey={folderChoose}\r\n                        projectKey={projectKey}\r\n                        isLoading={isLoading}\r\n                        setIsLoading={setIsLoading} />\r\n                </Col>\r\n            </Row>\r\n\r\n            <ModifyComponent\r\n                visible={visible}\r\n                setVisible={setVisible}\r\n                projectKey={projectKey}\r\n                loadData={loadData}\r\n                isLoading={isLoading}\r\n                setIsLoading={setIsLoading} />\r\n\r\n            <ModifyComponent\r\n                visible={visibleEdit}\r\n                setVisible={setVisibleEdit}\r\n                keyEdit={keyEdit}\r\n                setKeyEdit={setKeyEdit}\r\n                projectKey={projectKey}\r\n                loadData={loadData}\r\n                isLoading={isLoading}\r\n                setIsLoading={setIsLoading} />\r\n        </MyBox>\r\n    );\r\n}","import { OrderByModel } from \"../components/core/TableModel\";\r\n\r\nexport class ResponseDataModel<T> {\r\n    data: T | null;\r\n    message: string | undefined;\r\n    statusCode: number | undefined;\r\n\r\n    constructor(response: any) {\r\n        let data = response.data;\r\n        this.data = data.data;\r\n        this.message = data.message;\r\n        this.statusCode = data.statusCode;\r\n    }\r\n}\r\n\r\nexport class TableColumn {\r\n    title: string\r\n    dataIndex: string\r\n    key: string\r\n    render: any\r\n    className: string | undefined\r\n    width: number | undefined\r\n\r\n    label: string | undefined\r\n    value: string | undefined\r\n    disabled: boolean | undefined = false;\r\n\r\n    constructor(data?: any) {\r\n        this.title = data.title;\r\n        this.key = data.key;\r\n\r\n        if(data.dataIndex === undefined) {\r\n            this.dataIndex = data.key;\r\n        } else {\r\n            this.dataIndex = data.dataIndex;\r\n        }\r\n\r\n        this.render = data.render;\r\n        this.className = data.className;\r\n        this.width = data.width;\r\n        this.label = data.title;\r\n        this.value = data.key;\r\n\r\n        if(this.key === \"stt\" || this.key === \"action\") {\r\n            this.disabled = true;\r\n        }\r\n\r\n        if (data.disabled !== undefined) {\r\n            this.disabled = data.disabled;\r\n        }\r\n    }\r\n}\r\n\r\nexport class PaginationRequest {\r\n    pageNumber: number = 1;\r\n    pageSize: number = 10;\r\n    orderBy: OrderByModel\r\n\r\n    constructor(pageNumber: number, pageSize: number, orderBy: OrderByModel) {\r\n        this.pageNumber = pageNumber;\r\n        this.pageSize = pageSize;\r\n        this.orderBy = orderBy;\r\n    }\r\n\r\n    generateQueryString(): string {\r\n        // console.log(this);\r\n        if(this === undefined) return \"\";\r\n        \r\n        return `pageNumber=${this.pageNumber}&pageSize=${this.pageSize}&orderBy=${this.orderBy.genQueryOrderBy()}`;\r\n    }\r\n}"],"names":["PageInfoModel","data","pageNumber","pageSize","total","showPagination","undefined","pageInfo","this","totalCount","currentPage","setPageInfo","orderBy","typeOrder","OrderByModel","column","desc","esc","setOrderBy","TableComponent","props","loading","dataSource","scroll","rowClassName","loadData","useState","columnProps","setColumnProps","timer","setTimer","useEffect","interval","setInterval","clearInterval","renderColumn","useCallback","map","index","key","className","width","title","dataIndex","render","gutter","span","type","value","isLoading","onClick","onChange","setColumn","options","disabled","checked","setDesc","checkedChildren","unCheckedChildren","style","display","current","page","handleChangePage","y","bordered","pagination","size","columns","UIFormatDateVNComponent","dateStr","moment","timeLocal","format","UIFormatDateTimeVNComponent","ApiDocComponent","setIsLoading","setData","TableColumn","row","Fn","method","color","to","projectKey","folderKey","Text","ApiDocService","then","rs","isSuccess","pagedData","finally","MyButton","ModifyComponent","item","setItem","name","setName","keyEdit","setKeyEdit","visible","setVisible","loadDataDetail","DocumentService","headers","onClose","open","layout","onSubmitCapture","filter","obj","body","edit","add","label","setValue","HeaderComponent","htmlType","Swal","isConfirmed","IndexComponent","search","useLocation","URLSearchParams","get","folderChoose","setFolderChoose","useParams","visibleEdit","setVisibleEdit","PaginationRequest","MyBox","onDoubleClick","genQueryOrderBy"],"sourceRoot":""}
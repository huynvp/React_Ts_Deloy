{"version":3,"file":"static/js/431.60e074c8.chunk.js","mappings":"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","sources":["components/core/Input.tsx","components/core/MyButton.tsx","components/tool/task/sprintManage/DetailComponent.tsx","services/taskService.ts","../node_modules/rc-util/es/getScrollBarSize.js"],"sourcesContent":["import { Input, Form, DatePicker, InputNumber, Row, Col, Select } from \"antd\";\nimport moment from \"moment\";\n\n// ************************* Input ****************************\nexport function MyInput(props: any) {\n    function handleChangeInput(value: any) {\n        if (props.setValue !== undefined) {\n            props.setValue(value.target.value);\n        }\n    }\n\n    return (\n        <Input\n            onClick={props.onClick}\n            value={props.value}\n            onChange={handleChangeInput}\n            required={props.required}\n            readOnly={props.readOnly} />\n    );\n}\n\nexport function MyFormItemInput(props: any) {\n    return (\n        <Form.Item label={props.label}>\n            <MyInput\n                onClick={props.onClick}\n                value={props.value}\n                setValue={props.setValue}\n                required={props.required}\n                readOnly={props.readOnly} />\n        </Form.Item>\n    );\n}\n\n// *************************** Datepicker **************************\nexport function MyFormItemDatePicker(props: any) {\n    function handleChangeOption(value: any) {\n        if (props.setValue !== undefined) {\n            props.setValue(value);\n        }\n    }\n\n    function customeFormat(value: any) {\n        return moment(value).format(\"DD/MM/YYYY\");\n    }\n\n    return (\n        <Form.Item label={props.label}>\n            <DatePicker\n                value={props.value}\n                onChange={handleChangeOption}\n                format={customeFormat}\n                inputReadOnly={props.readOnly} />\n        </Form.Item>\n    );\n}\n\n// *************************** Datetimepicker **************************\nexport function MyFormItemDateTimePicker(props: any) {\n    function handleChangeOption(value: any) {\n        if (props.setValue !== undefined) {\n            props.setValue(value);\n        }\n    }\n\n    function customeFormat(value: any) {\n        return moment(value).format(\"DD/MM/YYYY HH:mm:ss\");\n    }\n\n    return (\n        <Form.Item label={props.label}>\n            <DatePicker\n                showTime\n                value={props.value}\n                onChange={handleChangeOption}\n                format={customeFormat}\n                disabled={props.readOnly} />\n        </Form.Item>\n    );\n}\n\n// *************************** Number **************************\nexport function MyFormItemInputNumber(props: any) {\n    function handleChangeInput(value: any) {\n        if (props.setValue !== undefined) {\n            props.setValue(value);\n        }\n    }\n\n    return (\n        <InputNumber\n            min={props.min}\n            max={props.max}\n            value={props.value}\n            onChange={handleChangeInput} />\n    );\n}\n\nexport function MyFormItemInputNumberColSpan(props: any) {\n    return (\n        <div>\n            <Row className={props.className}>\n                <Col span={props.colSpan1}>\n                    <span>{props.label}</span>\n                </Col>\n                <Col span={props.colSpan2}>\n                    <MyFormItemInputNumber\n                        min={props.min}\n                        max={props.max}\n                        value={props.value}\n                        setValue={props.setValue} />\n                </Col>\n            </Row>\n        </div>\n\n    );\n}\n\n// *************************** Select **************************\nexport function MyFormItemSelect(props: any) {\n    function handleChangeOption(value: any) {\n        if (props.setValue !== undefined) {\n            props.setValue(value);\n        }\n\n        if (props.onChange !== undefined) {\n            props.onChange(value);\n        }\n    }\n\n    return (\n        <Form.Item label={props.label}>\n            <Select\n                options={props.options}\n                value={props.value}\n                onChange={handleChangeOption} />\n        </Form.Item>\n    );\n}\n\n\n// *************************** TextArea **************************\nexport function MyFormItemTextArea(props: any) {\n    function handleChangeOption(value: any) {\n        if (props.setValue !== undefined) {\n            props.setValue(value.target.value);\n        }\n    }\n\n    const { TextArea } = Input;\n    return (\n        <Form.Item label={props.label}>\n            <TextArea\n                value={props.value}\n                onChange={handleChangeOption} />\n        </Form.Item>\n    );\n}\n\n// *************************** Password **************************\nexport function MyFormItemInputPassword(props: any) {\n    function handleChangeOption(value: any) {\n        if (props.onChange !== undefined) {\n            props.onChange(value.target.value);\n        }\n\n        if (props.setValue !== undefined) {\n            props.setValue(value.target.value);\n        }\n    }\n\n    const { Password } = Input;\n    return (\n        <Form.Item label={props.label}>\n            <Password\n                value={props.value}\n                onChange={handleChangeOption} />\n        </Form.Item>\n    );\n}\n\n// *************************** Search **************************\nexport function MyFormItemInputSearch(props: any) {\n    function handleChangeSearch(value: any) {\n        if (props.setValue !== undefined) {\n            props.setValue(value.target.value);\n        }\n    }\n\n    const { Search } = Input;\n    return (\n        <Form.Item label={props.label}>\n            <Search\n                loading={props.loading}\n                onSearch={props.onSearch}\n                value={props.value}\n                onChange={handleChangeSearch} />\n        </Form.Item>\n    );\n}","import { Button } from 'antd';\n// import Loading from './Loading';\nimport './UIStyle.css';\n\nexport function MyButton(props: any) {\n    let htmlType = props.htmlType !== undefined ? props.htmlType : \"button\";\n\n    function onClick() {\n        if (props.onClick !== undefined) {\n            props.onClick();\n        }\n    }\n\n    return (\n        <Button\n            disabled={props.disabled}\n            loading={props.isLoading}\n            htmlType={htmlType}\n            className={`btn_${props.type} ${props.className}`}\n            onClick={onClick}>\n            {/* <Loading isLoading={props.isLoading} />  */}\n            {props.value}\n        </Button>\n    );\n}","import { Col, Drawer, Form, Row } from \"antd\";\nimport moment from \"moment\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { Fn } from \"../../../../helper/function\";\nimport { TaskSprintManageService } from \"../../../../services/taskService\";\nimport { MyFormItemDatePicker, MyFormItemInput, MyFormItemSelect } from \"../../../core/Input\";\nimport { MyButton } from \"../../../core/MyButton\";\n\nexport default function ModifyComponent(props: any) {\n    const [name, setName] = useState('');\n    const [dateFrom, setDateFrom] = useState(moment());\n    const [dateTo, setDateTo] = useState(moment());\n    const { setIsLoading } = props;\n\n    let loadData = useCallback(() => {\n        if (props.keyData !== undefined) {\n            setIsLoading(true);\n            TaskSprintManageService.GetDetail(props.projectKey, props.keyData, (data: any) => {\n                let row = data.data.data;\n                setName(row.name);\n                setDateFrom(moment(row.dateFrom));\n                setDateTo(moment(row.dateTo));\n            }, undefined, () => {\n                setIsLoading(false);\n            })\n        }\n    }, [props.projectKey, props.keyData, setIsLoading])\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n    function HandleOnClose() {\n        props.setVisible(false);\n        setName('');\n        setDateFrom(moment());\n        setDateTo(moment());\n\n        if (props.setKeyData !== undefined) {\n            props.setKeyData(undefined);\n        }\n    }\n\n    function HandleSubmitForm() {\n        let body = {\n            name: name,\n            dateFrom: dateFrom.format(\"yyyy-MM-DD\"),\n            dateTo: dateTo.format(\"yyyy-MM-DD\"),\n        };\n\n        setIsLoading(true);\n\n        if (props.keyData !== undefined) {\n            Edit(body);\n        } else {\n            Add(body);\n        }\n    }\n\n    function Add(body: any) {\n        TaskSprintManageService.Add(props.projectKey, body, (data: any) => {\n            Fn.PrintMsgSuccess(data);\n            HandleOnClose();\n            props.loadData();\n        }, () => {\n            props.setIsLoading(false)\n        });\n    }\n\n    function Edit(body: any) {\n        TaskSprintManageService.GetDetail(props.projectKey, props.keyData, (data: any) => {\n            body = Fn.GetTimestamp(data, body);\n            TaskSprintManageService.Edit(props.projectKey, props.keyData, body, (data: any) => {\n                Fn.PrintMsgSuccess(data);\n                HandleOnClose();\n                props.loadData();\n            }, () => {\n                props.setIsLoading(false)\n            });\n        }, () => {\n            props.setIsLoading(false)\n        });\n    }\n\n    function handleDeleteSprint() {\n        Swal.fire({\n            title: \"Xác nhận xóa\",\n            text: \"Bạn có muốn xóa sprint này không?\",\n            showDenyButton: true,\n            confirmButtonText: \"Có\",\n            denyButtonText: \"Không\",\n        }).then((result: any) => {\n            if (result.isConfirmed) {\n                doDeleteSprint()\n            }\n        })\n    }\n\n    function doDeleteSprint() {\n        props.setIsLoading(true);\n        TaskSprintManageService.GetDetail(props.projectKey, props.keyData, (data: any) => {\n            TaskSprintManageService.Delete(props.projectKey, props.keyData, Fn.GetTimestamp(data), (data: any) => {\n                Fn.PrintMsgSuccess(data);\n                HandleOnClose();\n                props.loadData();\n            }, () => {\n                props.setIsLoading(false);\n            });\n        }, () => {\n            props.setIsLoading(false);\n        })\n    }\n\n    return (\n        <Drawer\n            title=\"Chi tiết\"\n            open={props.visible}\n            onClose={HandleOnClose}>\n\n            <Form layout=\"vertical\" onSubmitCapture={HandleSubmitForm}>\n                <MyFormItemInput\n                    label=\"Tên giai đoạn\"\n                    value={name}\n                    setValue={setName} />\n\n                <MyFormItemDatePicker\n                    label=\"Ngày bắt đầu\"\n                    value={dateFrom}\n                    setValue={setDateFrom} />\n\n                <MyFormItemDatePicker\n                    label=\"Ngày kết thúc\"\n                    value={dateTo}\n                    setValue={setDateTo} />\n\n                <MyFormItemSelect label=\"Trạng thái\"/>\n\n                <Row gutter={24}>\n                    <Col span=\"12\">\n                        <MyButton\n                            isLoading={props.isLoading}\n                            htmlType=\"submit\"\n                            type=\"success\"\n                            value={props.keyData !== undefined ? \"Chỉnh sửa\" : \"Thêm mới\"} />\n                    </Col>\n                    <Col>\n                        <MyButton\n                            isLoading={props.isLoading}\n                            type=\"danger\"\n                            disabled={props.keyData === undefined}\n                            onClick={handleDeleteSprint}\n                            value=\"Xóa sprint\" />\n                    </Col>\n                </Row>\n            </Form>\n        </Drawer>\n    );\n}","import { MyAxios } from \"../helper/myaxios\";\nimport { PaginationRequest } from \"../models/baseModel\";\n\nexport class TaskProjectManageService {\n    static GetList(paginationRequest: PaginationRequest, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects?${paginationRequest.generateQueryString()}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static GetDetail(key: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${key}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static Search(q: string, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/query?q=${q}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static Add(body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects`;\n        console.log(body);\n\n        return MyAxios.Post(url, body, then, exp, final);\n    }\n\n    static Edit(key: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${key}`;\n        return MyAxios.Put(url, body, then, exp, final);\n    }\n\n    static Delete(key: string | undefined, timestamp: string, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${key}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxios.Delete(url, then, exp, final);\n    }\n}\n\nexport class TaskSprintManageService {\n    static GetList(projectKey: string | undefined, paginationRequest: PaginationRequest | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/sprints${paginationRequest === undefined ? \"\" : \"?\" + paginationRequest?.generateQueryString()}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static GetDetail(projectKey: string | undefined, sprintKey: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/sprints/${sprintKey}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static Add(projectKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/sprints`;\n        return MyAxios.Post(url, body, then, exp, final);\n    }\n\n    static Edit(projectKey: string | undefined, sprintKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/sprints/${sprintKey}`;\n        return MyAxios.Put(url, body, then, exp, final);\n    }\n\n    static Delete(projectKey: string | undefined, sprintKey: string | undefined, timestamp: string, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/sprints/${sprintKey}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxios.Delete(url, then, exp, final);\n    }\n}","/* eslint-disable no-param-reassign */\nvar cached;\nexport default function getScrollBarSize(fresh) {\n  if (typeof document === 'undefined') {\n    return 0;\n  }\n\n  if (fresh || cached === undefined) {\n    var inner = document.createElement('div');\n    inner.style.width = '100%';\n    inner.style.height = '200px';\n    var outer = document.createElement('div');\n    var outerStyle = outer.style;\n    outerStyle.position = 'absolute';\n    outerStyle.top = '0';\n    outerStyle.left = '0';\n    outerStyle.pointerEvents = 'none';\n    outerStyle.visibility = 'hidden';\n    outerStyle.width = '200px';\n    outerStyle.height = '150px';\n    outerStyle.overflow = 'hidden';\n    outer.appendChild(inner);\n    document.body.appendChild(outer);\n    var widthContained = inner.offsetWidth;\n    outer.style.overflow = 'scroll';\n    var widthScroll = inner.offsetWidth;\n\n    if (widthContained === widthScroll) {\n      widthScroll = outer.clientWidth;\n    }\n\n    document.body.removeChild(outer);\n    cached = widthContained - widthScroll;\n  }\n\n  return cached;\n}\n\nfunction ensureSize(str) {\n  var match = str.match(/^(.*)px$/);\n  var value = Number(match === null || match === void 0 ? void 0 : match[1]);\n  return Number.isNaN(value) ? getScrollBarSize() : value;\n}\n\nexport function getTargetScrollBarSize(target) {\n  if (typeof document === 'undefined' || !target || !(target instanceof Element)) {\n    return {\n      width: 0,\n      height: 0\n    };\n  }\n\n  var _getComputedStyle = getComputedStyle(target, '::-webkit-scrollbar'),\n      width = _getComputedStyle.width,\n      height = _getComputedStyle.height;\n\n  return {\n    width: ensureSize(width),\n    height: ensureSize(height)\n  };\n}"],"names":["MyInput","props","onClick","value","onChange","undefined","setValue","target","required","readOnly","MyFormItemInput","label","MyFormItemDatePicker","format","moment","inputReadOnly","MyFormItemDateTimePicker","showTime","disabled","MyFormItemInputNumber","min","max","MyFormItemInputNumberColSpan","className","span","colSpan1","colSpan2","MyFormItemSelect","options","MyFormItemTextArea","TextArea","Input","MyFormItemInputPassword","Password","MyFormItemInputSearch","Search","loading","onSearch","MyButton","htmlType","isLoading","type","ModifyComponent","useState","name","setName","dateFrom","setDateFrom","dateTo","setDateTo","setIsLoading","loadData","useCallback","keyData","TaskSprintManageService","projectKey","data","row","HandleOnClose","setVisible","setKeyData","useEffect","title","open","visible","onClose","layout","onSubmitCapture","body","Fn","Edit","Add","gutter","Swal","text","showDenyButton","confirmButtonText","denyButtonText","then","result","isConfirmed","TaskProjectManageService","paginationRequest","exp","final","url","generateQueryString","MyAxios","key","q","console","log","timestamp","encodeURIComponent","sprintKey","cached","getScrollBarSize","fresh","document","inner","createElement","style","width","height","outer","outerStyle","position","top","left","pointerEvents","visibility","overflow","appendChild","widthContained","offsetWidth","widthScroll","clientWidth","removeChild","ensureSize","str","match","Number","isNaN","getTargetScrollBarSize","Element","_getComputedStyle","getComputedStyle"],"sourceRoot":""}
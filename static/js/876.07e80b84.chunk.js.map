{"version":3,"file":"static/js/876.07e80b84.chunk.js","mappings":"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","sources":["components/core/Input.tsx","components/tool/task/settings/ImportFileComponent.tsx","components/tool/task/settings/ModifyOtherSettingComponent.tsx","components/tool/task/settings/OtherComponent.tsx","components/tool/task/settings/ModifyStatusSettingComponent.tsx","components/tool/task/settings/StatusComponent.tsx","components/tool/task/settings/SettingComponent.tsx","helper/function.ts","services/taskService.ts"],"sourcesContent":["import { Input, Form, DatePicker, InputNumber, Row, Col, Select, Switch, Checkbox } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nexport class MyInput {\r\n    // ************************* Input ****************************\r\n    static Input(props: any) {\r\n        function handleChangeInput(value: any) {\r\n            if (props.onChange !== undefined) {\r\n                props.onChange(value.target.value);\r\n            }\r\n\r\n            if (props.setValue !== undefined) {\r\n                props.setValue(value.target.value);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Input\r\n                onClick={props.onClick}\r\n                value={props.value}\r\n                onChange={handleChangeInput}\r\n                required={props.required}\r\n                readOnly={props.readOnly} />\r\n        );\r\n    }\r\n}\r\n\r\nexport class MyFormItem {\r\n    static Input(props: any) {\r\n        return (\r\n            <Form.Item label={props.label}>\r\n                <MyInput.Input\r\n                    onClick={props.onClick}\r\n                    onChange={props.onChange}\r\n                    value={props.value}\r\n                    setValue={props.setValue}\r\n                    required={props.required}\r\n                    readOnly={props.readOnly} />\r\n            </Form.Item>\r\n        );\r\n    }\r\n\r\n    // *************************** Datepicker **************************\r\n    static DatePicker(props: any) {\r\n        function handleChangeOption(value: any) {\r\n            if (props.setValue !== undefined) {\r\n                props.setValue(value);\r\n            }\r\n        }\r\n\r\n        function customeFormat(value: any) {\r\n            return moment(value).format(\"DD/MM/YYYY\");\r\n        }\r\n        \r\n        return (\r\n            <Form.Item label={props.label}>\r\n                <DatePicker\r\n                    value={moment(props.value)}\r\n                    onChange={handleChangeOption}\r\n                    format={customeFormat}\r\n                    inputReadOnly={props.readOnly} />\r\n            </Form.Item>\r\n        );\r\n    }\r\n\r\n    // *************************** Datetimepicker **************************\r\n    static DateTimePicker(props: any) {\r\n        function handleChangeOption(value: any) {\r\n            if (props.setValue !== undefined) {\r\n                props.setValue(value);\r\n            }\r\n        }\r\n\r\n        function customeFormat(value: any) {\r\n            return moment(value).format(\"DD/MM/YYYY HH:mm:ss\");\r\n        }\r\n\r\n        return (\r\n            <Form.Item label={props.label}>\r\n                <DatePicker\r\n                    showTime\r\n                    value={moment(props.value)}\r\n                    onChange={handleChangeOption}\r\n                    format={customeFormat}\r\n                    disabled={props.readOnly} />\r\n            </Form.Item>\r\n        );\r\n    }\r\n\r\n    // *************************** Number **************************\r\n    static Number(props: any) {\r\n        function handleChangeInput(value: any) {\r\n            if (props.setValue !== undefined) {\r\n                props.setValue(value);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Form.Item label={props.label}>\r\n                <InputNumber\r\n                    min={props.min}\r\n                    max={props.max}\r\n                    value={props.value}\r\n                    onChange={handleChangeInput} />\r\n            </Form.Item>\r\n        );\r\n    }\r\n\r\n    static NumberColSpan(props: any) {\r\n        return (\r\n            <div>\r\n                <Row className={props.className}>\r\n                    <Col span={props.colSpan1}>\r\n                        <span>{props.label}</span>\r\n                    </Col>\r\n                    <Col span={props.colSpan2}>\r\n                        <MyFormItem.Number\r\n                            min={props.min}\r\n                            max={props.max}\r\n                            value={props.value}\r\n                            setValue={props.setValue} />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // *************************** Select **************************\r\n    static Select(props: any) {\r\n        function handleChangeOption(value: any) {\r\n            if (props.setValue !== undefined) {\r\n                props.setValue(value);\r\n            }\r\n\r\n            if (props.onChange !== undefined) {\r\n                props.onChange(value);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Form.Item label={props.label}>\r\n                <Select\r\n                    options={props.options}\r\n                    value={props.value}\r\n                    onChange={handleChangeOption} />\r\n            </Form.Item>\r\n        );\r\n    }\r\n\r\n\r\n    // *************************** TextArea **************************\r\n    static TextArea(props: any) {\r\n        function handleChangeOption(value: any) {\r\n            if (props.setValue !== undefined) {\r\n                props.setValue(value.target.value);\r\n            }\r\n        }\r\n\r\n        const { TextArea } = Input;\r\n        return (\r\n            <Form.Item label={props.label}>\r\n                <TextArea\r\n                    value={props.value}\r\n                    onChange={handleChangeOption} />\r\n            </Form.Item>\r\n        );\r\n    }\r\n\r\n    // *************************** Password **************************\r\n    static Password(props: any) {\r\n        function handleChangeOption(value: any) {\r\n            if (props.onChange !== undefined) {\r\n                props.onChange(value.target.value);\r\n            }\r\n\r\n            if (props.setValue !== undefined) {\r\n                props.setValue(value.target.value);\r\n            }\r\n        }\r\n\r\n        const { Password } = Input;\r\n        return (\r\n            <Form.Item label={props.label}>\r\n                <Password\r\n                    value={props.value}\r\n                    onChange={handleChangeOption} />\r\n            </Form.Item>\r\n        );\r\n    }\r\n\r\n    // *************************** Search **************************\r\n    static Search(props: any) {\r\n        function handleChangeSearch(value: any) {\r\n            if (props.setValue !== undefined) {\r\n                props.setValue(value.target.value);\r\n            }\r\n        }\r\n\r\n        const { Search } = Input;\r\n        return (\r\n            <Form.Item label={props.label}>\r\n                <Search\r\n                    loading={props.loading}\r\n                    onSearch={props.onSearch}\r\n                    value={props.value}\r\n                    onChange={handleChangeSearch} />\r\n            </Form.Item>\r\n        );\r\n    }\r\n\r\n    // *************************** Swith **************************\r\n    static Switch(props: any) {\r\n        function handleChangeSearch(value: any) {\r\n            if (props.setValue !== undefined) {\r\n                if (props.readOnly !== true) {\r\n                    props.setValue(value);\r\n                }\r\n            }\r\n                \r\n            if (props.onChange !== undefined) {\r\n                props.onChange(value);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Form.Item label={props.label}>\r\n                <Switch\r\n                    loading={props.loading}\r\n                    checked={props.value}\r\n                    onChange={handleChangeSearch} />\r\n            </Form.Item>\r\n        );\r\n    }\r\n\r\n    // *************************** Swith **************************\r\n    static Checkbox(props: any) {\r\n        function handleChangeSearch(value: any) {\r\n            if (props.setValue !== undefined) {\r\n                if (props.readOnly !== true) {\r\n                    props.setValue(value.target.checked);\r\n                }\r\n            }\r\n\r\n            if (props.onChange !== undefined) {\r\n                props.onChange(value.target.checked);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Checkbox\r\n                checked={props.value}\r\n                onChange={handleChangeSearch}>{props.label}</Checkbox>\r\n        );\r\n    }\r\n\r\n    // *************************** Swith **************************\r\n    static File(props: any) {\r\n        function handleChange(value: any) {\r\n            if (props.setValue !== undefined) {\r\n                props.setValue(value.target.files[0]);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Form.Item label={props.label}>\r\n                <Input\r\n                    type=\"file\"\r\n                    // value={props.value}\r\n                    onChange={handleChange} />\r\n            </Form.Item>\r\n        );\r\n    }\r\n}","import { Box } from \"../../../core/MyBox\";\r\nimport { MyFormItem } from \"../../../core/Input\";\r\nimport { useState } from \"react\";\r\nimport { MyButton } from \"../../../core/MyButton\";\r\nimport { SettingService } from \"../../../../services/taskService\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Fn } from \"../../../../helper/function\";\r\n\r\nexport default function ImportFileComponent(props: any) {\r\n    const { setIsLoading } = props;\r\n    const [file, setFile] = useState<string | Blob>();\r\n    const projectKey = useParams().key;\r\n    function handleOnClick() {\r\n        doUpload();\r\n    }\r\n\r\n    function doUpload() {\r\n        setIsLoading(true);\r\n        const formData = new FormData();\r\n        if (file) {\r\n            formData.append(\"file\", file);\r\n        }\r\n\r\n        SettingService.Import(projectKey, formData)\r\n            .then((rs: any) => {\r\n                if (rs.isSuccess) {\r\n                    Fn.PrintMsgSuccess(rs);\r\n                }\r\n            })\r\n            .finally(() => setIsLoading(false));\r\n    }\r\n\r\n    function handleOnClickExport() {\r\n        setIsLoading(true);\r\n        SettingService.Export(projectKey)\r\n            .then((rs: any) => {\r\n                if (rs.isSuccess) {\r\n                    var blob = new Blob([rs.data], { type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" });\r\n                    var url = URL.createObjectURL(blob);\r\n                    window.open(url);\r\n                }\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            <MyButton\r\n                type=\"primary\"\r\n                onClick={handleOnClickExport}\r\n                value=\"Export file\" />\r\n\r\n            <MyButton\r\n                type=\"success\"\r\n                onClick={handleOnClick}\r\n                value=\"Import file\"\r\n                disabled={file === undefined} />\r\n\r\n            <MyFormItem.File\r\n                value={file}\r\n                setValue={setFile} />\r\n        </Box>\r\n    )\r\n}","import { Drawer, Form } from \"antd\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Fn } from \"../../../../helper/function\";\r\nimport { SettingService } from \"../../../../services/taskService\";\r\nimport { MyFormItem } from \"../../../core/Input\";\r\nimport { MyButton } from \"../../../core/MyButton\";\r\n\r\nexport default function ModifyOtherSettingComponent(props: any) {\r\n    const [value, setValue] = useState('');\r\n    const { isLoading, setIsLoading, projectKey, keyData, visible, setVisible, type, loadData } = props;\r\n    const loadDataDetail = useCallback(() => {\r\n        if (keyData !== undefined) {\r\n            setIsLoading(true);\r\n            SettingService.GetDetailSettingStatus(projectKey, keyData)\r\n                .then((rs: any) => {\r\n                    if (rs.isSuccess) {\r\n                        setValue(rs.data.value);\r\n                    }\r\n                })\r\n                .finally(() => setIsLoading(false));\r\n        }\r\n    }, [projectKey, keyData, setIsLoading]);\r\n\r\n    useEffect(() => {\r\n        loadDataDetail();\r\n    }, [loadDataDetail]);\r\n\r\n    function onClose() {\r\n        setVisible(false);\r\n    }\r\n\r\n    function handleSubmitForm() {\r\n        var body = {\r\n            value: value,\r\n            type: type\r\n        };\r\n\r\n        setIsLoading(true);\r\n        if (keyData !== undefined) {\r\n            Edit(body);\r\n        } else {\r\n            Add(body);\r\n        }\r\n    }\r\n\r\n    function Add(body: any) {\r\n        SettingService.AddSettingStatus(projectKey, body)\r\n            .then((rs: any) => {\r\n                if (rs.isSuccess) {\r\n                    Fn.PrintMsgSuccess(rs);\r\n                    loadData();\r\n                }\r\n            })\r\n            .finally(() => setIsLoading(false));\r\n    }\r\n\r\n    function Edit(body: any) {\r\n        SettingService.GetDetailSettingStatus(projectKey, keyData)\r\n            .then((rs: any) => {\r\n                if (rs.isSuccess) {\r\n                    body = Fn.GetTimestamp(rs, body);\r\n                    SettingService.EditSettingStatus(projectKey, keyData, body)\r\n                        .then((rs: any) => {\r\n                            if (rs.isSuccess) {\r\n                                Fn.PrintMsgSuccess(rs);\r\n                                loadData();\r\n                            }\r\n                        })\r\n                        .finally(() => setIsLoading(false));\r\n                } else setIsLoading(false);\r\n            })\r\n    }\r\n\r\n    function handleClickDelete() {\r\n        Swal.fire({\r\n            title: \"Xác nhận xóa\",\r\n            text: 'Bạn có muốn xóa không?',\r\n        }).then((confirm) => {\r\n            if (confirm.isConfirmed) {\r\n                Delete();\r\n            }\r\n        })\r\n    }\r\n\r\n    function Delete() {\r\n        setIsLoading(true);\r\n        SettingService.GetDetailSettingStatus(projectKey, keyData)\r\n            .then((rs: any) => {\r\n                if (rs.isSuccess) {\r\n                    SettingService.DeleteSettingStatus(projectKey, keyData, Fn.GetTimestamp(rs))\r\n                        .then((rs: any) => {\r\n                            if (rs.isSuccess) {\r\n                                Fn.PrintMsgSuccess(rs);\r\n                                onClose();\r\n                                loadData();\r\n                            }\r\n                        })\r\n                        .finally(() => setIsLoading(false))\r\n                } else setIsLoading(false);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Drawer\r\n            open={visible}\r\n            onClose={onClose}\r\n            title={keyData !== undefined ? \"Chỉnh sửa\" : \"Thêm mới\"}>\r\n            <Form\r\n                layout=\"vertical\"\r\n                onSubmitCapture={handleSubmitForm}>\r\n                <MyFormItem.Input\r\n                    label=\"Giá trị\"\r\n                    value={value}\r\n                    setValue={setValue} />\r\n                <MyButton\r\n                    htmlType=\"submit\"\r\n                    isLoading={isLoading}\r\n                    type=\"success\"\r\n                    value={keyData !== undefined ? \"Chỉnh sửa\" : \"Thêm mới\"} />\r\n                <MyButton\r\n                    type=\"danger\"\r\n                    isLoading={isLoading}\r\n                    onClick={handleClickDelete}\r\n                    value=\"Xóa\" />\r\n            </Form>\r\n        </Drawer>\r\n    );\r\n}","import { Col, Row } from \"antd\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { SettingService } from \"../../../../services/taskService\";\r\nimport { Box } from \"../../../core/MyBox\";\r\nimport { MyButton } from \"../../../core/MyButton\";\r\nimport ModifyOtherSettingComponent from \"./ModifyOtherSettingComponent\";\r\n\r\nexport default function OtherComponent(props: any) {\r\n    const projectKey = useParams().key;\r\n    const [dataSource, setDataSource] = useState([]);\r\n    const [visible, setVisible] = useState(false);\r\n    const [visibleEdit, setVisibleEdit] = useState(false);\r\n    const [keyEdit, setKeyEidt] = useState<string | undefined>(undefined);\r\n\r\n    const { isLoading, setIsLoading, type } = props;\r\n\r\n    let loadData = useCallback(() => {\r\n        setIsLoading(true);\r\n        SettingService.GetListSettingStatus(projectKey, type)\r\n            .then((rs: any) => {\r\n                if (rs.isSuccess) {\r\n                    setDataSource(rs.data);\r\n                }\r\n            })\r\n            .finally(() => setIsLoading(false));\r\n    }, [projectKey, type, setIsLoading]);\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n    }, [loadData]);\r\n\r\n    function handleClickAdd() {\r\n        setVisible(true);\r\n    }\r\n\r\n    function handleClickEdit(key: string | undefined) {\r\n        setVisibleEdit(true);\r\n        setKeyEidt(key);\r\n    }\r\n\r\n    function RenderData() {\r\n        return dataSource.map((data: any, index: number) => {\r\n            return (\r\n                <Box key={index}>\r\n                    <Row gutter={12}>\r\n                        <Col span={12}>\r\n                            {data.value}\r\n                        </Col>\r\n                        <Col span={12} style={{ textAlign: \"right\" }}>\r\n                            <MyButton onClick={() => {\r\n                                handleClickEdit(data.key)\r\n                            }} value=\"Chỉnh sửa\" />\r\n                        </Col>\r\n                    </Row>\r\n                </Box>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            <MyButton\r\n                type=\"primary\"\r\n                value=\"Thêm mới\"\r\n                onClick={handleClickAdd} />\r\n            {RenderData()}\r\n\r\n            <ModifyOtherSettingComponent\r\n                projectKey={projectKey}\r\n                type={type}\r\n                visible={visible}\r\n                setVisible={setVisible}\r\n                isLoading={isLoading}\r\n                setIsLoading={setIsLoading}\r\n                loadData={loadData} />\r\n\r\n            <ModifyOtherSettingComponent\r\n                projectKey={projectKey}\r\n                type={type}\r\n                visible={visibleEdit}\r\n                setVisible={setVisibleEdit}\r\n                isLoading={isLoading}\r\n                setIsLoading={setIsLoading}\r\n                keyData={keyEdit}\r\n                loadData={loadData} />\r\n        </Box>\r\n    );\r\n}","import { Drawer, Form } from \"antd\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Fn } from \"../../../../helper/function\";\r\nimport { SettingService } from \"../../../../services/taskService\";\r\nimport { MyFormItem } from \"../../../core/Input\";\r\nimport { MyButton } from \"../../../core/MyButton\";\r\n\r\nexport default function ModifyStatusSettingComponent(props: any) {\r\n    const [value, setValue] = useState('');\r\n    const [type, setType] = useState('');\r\n    const [isNew, setIsNew] = useState(false);\r\n    const [isClosed, setIsClosed] = useState(false);\r\n\r\n    const { title, isLoading, setIsLoading, projectKey, keyData, visible, setVisible, loadData } = props;\r\n\r\n    const options = [\r\n        {\r\n            key: \"1\",\r\n            label: \"Trạng thái dự án\",\r\n            value: 1\r\n        },\r\n        {\r\n            key: \"2\",\r\n            label: \"Trạng thái sprint\",\r\n            value: 2\r\n        },\r\n        {\r\n            key: \"3\",\r\n            label: \"Trạng thái công việc\",\r\n            value: 3\r\n        },\r\n        {\r\n            key: \"4\",\r\n            label: \"Trạng thái vấn đề\",\r\n            value: 4\r\n        }\r\n    ]\r\n\r\n    let loadDataDetail = useCallback(() => {\r\n        if (keyData !== undefined) {\r\n            setIsLoading(true);\r\n            SettingService.GetDetailSettingStatus(projectKey, keyData)\r\n                .then((rs: any) => {\r\n                    if (rs.isSuccess) {\r\n                        const row = rs.data;\r\n                        setValue(row.value);\r\n                        setType(row.type);\r\n                        setIsNew(row.isNew);\r\n                        setIsClosed(row.isClosed);\r\n                    }\r\n                })\r\n                .finally(() => setIsLoading(false));\r\n        }\r\n    }, [keyData, projectKey, setIsLoading]);\r\n\r\n    useEffect(() => {\r\n        loadDataDetail();\r\n    }, [loadDataDetail])\r\n\r\n    function HandleCloseDrawer() {\r\n        setVisible(false);\r\n    }\r\n\r\n    function handleSubmitForm() {\r\n        let body = {\r\n            value: value,\r\n            type: type,\r\n            isNew: isNew,\r\n            isClosed: isClosed\r\n        };\r\n\r\n        setIsLoading(true);\r\n        if (keyData === undefined) {\r\n            Add(body);\r\n        } else {\r\n            Edit(body);\r\n        }\r\n    }\r\n\r\n    function Add(body: any) {\r\n        SettingService.AddSettingStatus(projectKey, body)\r\n            .then((rs: any) => {\r\n                if (rs.isSuccess) {\r\n                    Fn.PrintMsgSuccess(rs);\r\n                    loadData();\r\n                    HandleCloseDrawer();\r\n                }\r\n            })\r\n            .finally(() => { setIsLoading(false) });\r\n    }\r\n\r\n    function Edit(body: any) {\r\n        SettingService.GetDetailSettingStatus(projectKey, keyData)\r\n            .then((rs: any) => {\r\n                if (rs.isSuccess) {\r\n                    body = Fn.GetTimestamp(rs, body);\r\n                    SettingService.EditSettingStatus(projectKey, keyData, body)\r\n                        .then((rs: any) => {\r\n                            if (rs.isSuccess) {\r\n                                Fn.PrintMsgSuccess(rs);\r\n                                loadData();\r\n                            }\r\n                        })\r\n                        .finally(() => setIsLoading(false));\r\n                } else setIsLoading(false);\r\n            })\r\n    }\r\n\r\n    function HandleClickDelete() {\r\n        Swal.fire({\r\n            title: \"Bạn có muốn xóa không\",\r\n            text: \"Bạn có muốn xóa không\",\r\n            showConfirmButton: true,\r\n            showDenyButton: true,\r\n        }).then((result: any) => {\r\n            if (result.isConfirmed) {\r\n                Delete();\r\n            }\r\n        })\r\n    }\r\n\r\n    function Delete() {\r\n        setIsLoading(true);\r\n        SettingService.GetDetailSettingStatus(projectKey, keyData)\r\n            .then((rs: any) => {\r\n                if (rs.isSuccess) {\r\n                    SettingService.DeleteSettingStatus(projectKey, keyData, Fn.GetTimestamp(rs))\r\n                        .then((rs: any) => {\r\n                            if (rs.isSuccess) {\r\n                                Fn.PrintMsgSuccess(rs);\r\n                                loadData();\r\n                                HandleCloseDrawer();\r\n                            }\r\n                        })\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Drawer\r\n            title={title}\r\n            open={visible}\r\n            onClose={HandleCloseDrawer}>\r\n            <Form\r\n                layout=\"vertical\"\r\n                onSubmitCapture={handleSubmitForm}>\r\n                <MyFormItem.Input\r\n                    label=\"Giá trị\"\r\n                    value={value}\r\n                    setValue={setValue} />\r\n\r\n                <MyFormItem.Select\r\n                    label=\"Loại trạng thái\"\r\n                    options={options}\r\n                    value={type}\r\n                    setValue={setType} />\r\n\r\n                <MyFormItem.Switch\r\n                    label=\"Trạng thái mới\"\r\n                    value={isNew}\r\n                    setValue={setIsNew} />\r\n\r\n                <MyFormItem.Switch\r\n                    label=\"Trạng thái đóng\"\r\n                    value={isClosed}\r\n                    setValue={setIsClosed} />\r\n\r\n                <MyButton\r\n                    type=\"success\"\r\n                    htmlType=\"submit\"\r\n                    isLoading={isLoading}\r\n                    value={keyData !== undefined ? \"Sửa\" : \"Thêm\"} />\r\n\r\n                <MyButton\r\n                    type=\"danger\"\r\n                    value=\"Xóa\"\r\n                    isLoading={isLoading}\r\n                    onClick={HandleClickDelete} />\r\n            </Form>\r\n        </Drawer>\r\n    );\r\n}","import { Badge, Col, Row } from \"antd\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { SettingService } from \"../../../../services/taskService\";\r\nimport { Box } from \"../../../core/MyBox\";\r\nimport { CheckCircleTwoTone } from '@ant-design/icons';\r\nimport { MyButton } from \"../../../core/MyButton\";\r\nimport ModifyStatusSettingComponent from \"./ModifyStatusSettingComponent\";\r\n\r\nexport default function StatusComponent(props: any) {\r\n    const projectKey = useParams().key;\r\n    const [dataSource, setDataSource] = useState([]);\r\n    const [visible, setVisible] = useState(false);\r\n    const [keyEdit, setKeyEdit] = useState<string | undefined>();\r\n    const [visibleEdit, setVisibleEdit] = useState(false);\r\n\r\n    const { isLoading, setIsLoading } = props;\r\n    const loadData = useCallback(() => {\r\n        setIsLoading(true);\r\n        SettingService.GetListSettingStatus(projectKey, \"1,2,3,4\")\r\n            .then((rs: any) => {\r\n                if (rs.isSuccess) {\r\n                    setDataSource(rs.data);\r\n                }\r\n            })\r\n            .finally(() => setIsLoading(false));\r\n    }, [projectKey, setIsLoading]);\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n    }, [loadData]);\r\n\r\n    function handleClickAdd() {\r\n        setVisible(true);\r\n    }\r\n\r\n    function handleClickDetail(key: string | undefined) {\r\n        setKeyEdit(key);\r\n        setVisibleEdit(true);\r\n    }\r\n\r\n    function RenderType(type: number) {\r\n        let valueType = \"\";\r\n        let colorType = \"\";\r\n        switch (type) {\r\n            case 1:\r\n                valueType = \"Trạng thái dự án\";\r\n                colorType = \"blue\"\r\n                break;\r\n            case 2:\r\n                valueType = \"Trạng thái sprint\";\r\n                colorType = \"red\"\r\n                break;\r\n            case 3:\r\n                valueType = \"Trạng thái công việc\";\r\n                colorType = \"yellow\"\r\n                break;\r\n            case 4:\r\n                valueType = \"Trạng thái vấn đề\";\r\n                colorType = \"green\"\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return (\r\n            <Badge color={colorType} text={valueType} />\r\n        );\r\n    }\r\n    function RenderData() {\r\n        return dataSource.map((data: any, index: number) => {\r\n            return (\r\n                <Col span={4} key={index} onClick={() => {\r\n                    handleClickDetail(data.key);\r\n                }}>\r\n                    <Box>\r\n                        <p>Value: {data.value}</p>\r\n                        <p>Loại: {RenderType(data.type)}</p>\r\n                        <p>Trạng thái mới: {data.isNew ? <CheckCircleTwoTone twoToneColor=\"#52c41a\" /> : \"\"} </p>\r\n                        <p>Trạng thái đóng: {data.isClosed ? <CheckCircleTwoTone twoToneColor=\"#52c41a\" /> : \"\"}</p>\r\n                    </Box>\r\n                </Col>\r\n            );\r\n        });\r\n    }\r\n    return (\r\n        <Box title=\"Quản lý trạng thái\">\r\n            <MyButton type=\"primary\" value=\"Thêm trạng thái\" onClick={handleClickAdd} />\r\n            <Row gutter={12}>\r\n                {RenderData()}\r\n            </Row>\r\n            <ModifyStatusSettingComponent\r\n                title=\"Thêm mới trạng thái\"\r\n                projectKey={projectKey}\r\n                visible={visible}\r\n                setVisible={setVisible}\r\n                loadData={loadData}\r\n                isLoading={isLoading}\r\n                setIsLoading={setIsLoading} />\r\n\r\n            <ModifyStatusSettingComponent\r\n                title=\"Sửa đổi trạng thái\"\r\n                keyData={keyEdit}\r\n                projectKey={projectKey}\r\n                visible={visibleEdit}\r\n                setVisible={setVisibleEdit}\r\n                loadData={loadData}\r\n                isLoading={isLoading}\r\n                setIsLoading={setIsLoading} />\r\n        </Box>\r\n    )\r\n}","import { Tabs } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { MyBox } from \"../../../core/MyBox\";\r\nimport ImportFileComponent from \"./ImportFileComponent\";\r\nimport OtherComponent from \"./OtherComponent\";\r\nimport StatusComponent from \"./StatusComponent\";\r\n\r\nexport default function SettingComponent() {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const items: any = [\r\n        {\r\n            label: \"Trạng thái\",\r\n            key: \"item_1\",\r\n            children: (\r\n                <StatusComponent\r\n                    isLoading={isLoading}\r\n                    setIsLoading={setIsLoading} />\r\n            )\r\n        },\r\n        {\r\n            label: \"Độ ưu tiên\",\r\n            key: \"item_2\",\r\n            children: (\r\n                <OtherComponent\r\n                    isLoading={isLoading}\r\n                    setIsLoading={setIsLoading}\r\n                    type={5} />\r\n            )\r\n        },\r\n        {\r\n            label: \"Mức độ ảnh hưởng\",\r\n            key: \"item_3\",\r\n            children: (\r\n                <OtherComponent\r\n                    isLoading={isLoading}\r\n                    setIsLoading={setIsLoading}\r\n                    type={6} />\r\n            )\r\n        },\r\n        {\r\n            label: \"Quản lý tag\",\r\n            key: \"item_4\",\r\n            children: (\r\n                <OtherComponent\r\n                    isLoading={isLoading}\r\n                    setIsLoading={setIsLoading}\r\n                    type={7} />\r\n            )\r\n        },\r\n        {\r\n            label: \"Loại vấn đề\",\r\n            key: \"item_5\",\r\n            children: (\r\n                <OtherComponent\r\n                    isLoading={isLoading}\r\n                    setIsLoading={setIsLoading}\r\n                    type={8} />\r\n            )\r\n        },\r\n        {\r\n            label: \"Xuất file\",\r\n            key: \"item_6\",\r\n            children: (\r\n                <ImportFileComponent\r\n                    isLoading={isLoading}\r\n                    setIsLoading={setIsLoading} />\r\n            )\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <MyBox\r\n            title=\"Cài đặt dự án\"\r\n            isLoading={isLoading}>\r\n            <Tabs defaultActiveKey=\"item_1\" centered items={items} />\r\n        </MyBox>\r\n    )\r\n}","import { message } from \"antd\";\r\nimport { PageInfoModel } from \"../components/core/TableModel\";\r\n\r\nexport class Fn {\r\n    static PrintMsg(err: any | null) {\r\n        if (err.response === undefined) {\r\n            return err.response;\r\n        }\r\n        return err.response.data.message;\r\n    };\r\n\r\n    static PrintMsgErr(err: any | null) {\r\n        message.error(this.PrintMsg(err));\r\n    };\r\n\r\n    static PrintMsgSuccess(data: any) {\r\n        message.success(data.message);\r\n    };\r\n\r\n    static FormatInputMoney(data: string | null) {\r\n        return `${data}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    }\r\n\r\n    static ParseInputMoney(data: string) {\r\n        return data.replace(/\\s?|(,*)/g, '');\r\n    }\r\n\r\n    static FormatMoney(money: number) {\r\n        return new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(money);\r\n    }\r\n\r\n    static FormatNumber(money: number) {\r\n        return new Intl.NumberFormat('vi-VN').format(money);\r\n    }\r\n\r\n    static GetIndexInArray = (datas: any, keySearch: string, value: string) => { // -1 khong tim thay\r\n        var result = -1;\r\n        for (var i = 0; i < datas.length; i++) {\r\n            if (datas[i][keySearch] === value) {\r\n                result = i;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static GetIndexInArrayStr = (datas: any, value: string) => { // -1 khong tim thay\r\n        var result = -1;\r\n        for (var i = 0; i < datas.length; i++) {\r\n            if (datas[i].trim() === value.trim()) {\r\n                result = i;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static SetPageInfo = (data: any, setTotal: any, setPageNumber: any, setPageSize: any) => {\r\n        var pageInfo = data.data.data.pageInfo;\r\n        setTotal(pageInfo.totalCount);\r\n        setPageNumber(pageInfo.currentPage);\r\n        setPageSize(pageInfo.pageSize);\r\n    }\r\n\r\n    static GetTimestamp = (data?: any, body?: any) => {\r\n        try {\r\n            if (body === null || body === undefined) {\r\n                return data.data.timestamp;\r\n            }\r\n            body.timestamp = data.data.timestamp;\r\n            return body;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    static RenderSTT(_data: any, _row: any, index: number, pageInfo: PageInfoModel) {\r\n        return ((pageInfo.pageNumber - 1) * pageInfo.pageSize) + index + 1;\r\n    }\r\n\r\n\r\n\r\n    // no use\r\n    static PrintMsgSuccess_no_use(data: any) {\r\n        message.success(data.data.message);\r\n    };\r\n    static GetTimestamp_no_use = (data?: any, body?: any) => {\r\n        try {\r\n            if (body === null || body === undefined) {\r\n                return data.data.data.timestamp;\r\n            }\r\n            body.timestamp = data.data.data.timestamp;\r\n            return body;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}","import { MethodHttp, MyHttp } from \"../helper/myaxios\";\r\nimport { PaginationRequest } from \"../models/baseModel\";\r\n\r\nclass TaskProjectManageService {\r\n    static GetQrCode(key: string) {\r\n        return `${MyHttp.BaseURL}/user/qrCode?data=taskManage_projectManage_${key}`;\r\n    }\r\n\r\n    static GetStatistic() {\r\n        var url = `v2/tools/taskManages/projects/statistic`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetLog(projectKey: string | undefined, paginationRequest: PaginationRequest) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/logs?${paginationRequest.generateQueryString()}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetClone(projectKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/duplicate`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static ProcessClone(projectKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/duplicate`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static GetList(paginationRequest: PaginationRequest, showClosedProject: boolean) {\r\n        var url = `v2/tools/taskManages/projects?${paginationRequest.generateQueryString()}&showIsClosed=${showClosedProject}`;\r\n        return MyHttp.SendReq(url, \"GET\");\r\n    }\r\n\r\n    static GetDetail(key: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Search(q: string) {\r\n        var url = `v2/tools/taskManages/projects/query?query=${q}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Add(body: any) {\r\n        var url = `v2/tools/taskManages/projects`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Edit(key: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static Delete(key: string | undefined, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n}\r\n\r\nclass TaskSprintManageService {\r\n    static GetList(projectKey: string | undefined, paginationRequest: PaginationRequest) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints${paginationRequest === undefined ? \"\" : \"?\" + paginationRequest.generateQueryString()}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(projectKey: string | undefined, sprintKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Add(projectKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Edit(projectKey: string | undefined, sprintKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static Delete(projectKey: string | undefined, sprintKey: string | undefined, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n}\r\n\r\nclass TaskToDoListService {\r\n    static GetList(projectKey: string | undefined, sprintKey: string | undefined, paginationRequest: PaginationRequest | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}/toDoLists?${paginationRequest?.generateQueryString()}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(projectKey: string | undefined, sprintKey: string | undefined, key: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}/toDoLists/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Add(projectKey: string | undefined, sprintKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}/toDoLists`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Edit(projectKey: string | undefined, sprintKey: string | undefined, key: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}/toDoLists/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static Delete(projectKey: string | undefined, sprintKey: string | undefined, key: string | undefined, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}/toDoLists/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n}\r\n\r\nclass SettingService {\r\n    static GetListSettingStatus(projectKey: string | undefined, type: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings?type=${type}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetailSettingStatus(projectKey: string | undefined, settingKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/${settingKey}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static AddSettingStatus(projectKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static EditSettingStatus(projectKey: string | undefined, settingKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/${settingKey}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static DeleteSettingStatus(projectKey: string | undefined, settingKey: string | undefined, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/${settingKey}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n\r\n    static SearchByType(projectKey: string | undefined, type: number) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/query?type=${type}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Import(projectKey: string | undefined, formData: FormData) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/import`;\r\n        return MyHttp.SendReq(url, \"Post\", formData, true);\r\n    }\r\n\r\n    static Export(projectKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/export`;\r\n        return MyHttp.SendReq(url, \"Get\", undefined, true);\r\n    }\r\n}\r\n\r\nclass VariableService {\r\n    static GetList(projectKey: string | undefined, paginationRequest: PaginationRequest) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/variables?${paginationRequest.generateQueryString()}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(projectKey: string | undefined, key: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/variables/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Add(projectKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/variables`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Edit(projectKey: string | undefined, key: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/variables/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static Delete(projectKey: string | undefined, key: string | undefined, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/variables/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n\r\n    static GetHistory(projectKey: string | undefined, key: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/variables/${key}/histories`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n}\r\n\r\nclass DocumentService {\r\n    static GetList(projectKey: string | undefined, paginationRequest: PaginationRequest) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders?${paginationRequest.generateQueryString()}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(projectKey: string | undefined, key: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Add(projectKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Edit(projectKey: string | undefined, key: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static Delete(projectKey: string | undefined, key: string | undefined, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n}\r\n\r\nclass ApiDocService {\r\n    static GetList(projectKey: string | undefined, folderKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(projectKey: string | undefined, folderKey: string | undefined, key: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Add(projectKey: string | undefined, folderKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Edit(projectKey: string | undefined, folderKey: string | undefined, key: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static Delete(projectKey: string | undefined, folderKey: string | undefined, key: string | undefined, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n\r\n    static ExecApi(projectKey: string | undefined, folderKey: string | undefined, apiDocKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${apiDocKey}/exec`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Query(projectKey: string | undefined, q: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/apis/query?q=${q}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n}\r\n\r\nclass ApiDocResponseService {\r\n    static Getlist(projectKey: string | undefined, folderKey: string | undefined, apiDocKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${apiDocKey}/responses`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(projectKey: string | undefined, folderKey: string | undefined, apiDocKey: string | undefined, key: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${apiDocKey}/responses/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static SaveResponse(projectKey: string | undefined, folderKey: string | undefined, apiDocKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${apiDocKey}/responses`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Delete(projectKey: string | undefined, folderKey: string | undefined, apiDocKey: string | undefined, key: string | undefined, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/folders/${folderKey}/apis/${apiDocKey}/responses/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n}\r\n\r\nclass WorkflowService {\r\n    static GetList(paginationRequest: PaginationRequest) {\r\n        var url = `v2/tools/taskManages/workflows?${paginationRequest.generateQueryString()}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(projectKey: string, key: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Add(projectKey: string, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Edit(projectKey: string, key: string, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static Delete(projectKey: string, key: string, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n}\r\n\r\nclass WorkflowDetailService {\r\n    static GetList(paginationRequest: PaginationRequest, projectKey: string | undefined, workflowKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/details?${paginationRequest.generateQueryString()}&orders=true`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(projectKey: string, workflowKey: string, key: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/details/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Add(projectKey: string, workflowKey: string, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/details`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Edit(projectKey: string, workflowKey: string, key: string, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/details/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static Delete(projectKey: string, workflowKey: string, key: string, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/details/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n\r\n    static SwapOrder(key: string, projectKey: string | undefined, workflowKey: string | undefined, isNext: boolean) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/details/${key}/swapOrders?isNext=${isNext}`;\r\n        return MyHttp.SendReq(url, \"Post\");\r\n    }\r\n}\r\n\r\nclass WorkflowRunService {\r\n    static GetList(paginationRequest: PaginationRequest, projectKey: string | undefined, workflowKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/histories?${paginationRequest.generateQueryString()}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static GetDetail(key: string | undefined, projectKey: string | undefined, workflowKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/histories/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static Add(body: any, projectKey: string | undefined, workflowKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/histories`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static Edit(key: string | undefined, body: any, projectKey: string | undefined, workflowKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/histories/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n\r\n    static Delete(key: string | undefined, timestamp: string, projectKey: string | undefined, workflowKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/histories/${key}?timestamp=${encodeURIComponent(timestamp)}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n\r\n    static ExecApi(key: string | undefined, projectKey: string | undefined, workflowKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/workflows/${workflowKey}/histories/${key}/exec`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n}\r\n\r\nclass DocumentApiPublicService {\r\n    static GetList(paginationRequest: PaginationRequest, projectKey: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/documentApi/public?${paginationRequest.generateQueryString()}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n    static GetDetail(projectKey: string | undefined, key: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/documentApi/public/${key}`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n    static Add(projectKey: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/documentApi/public`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n    static Edit(projectKey: string | undefined, key: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/documentApi/public/${key}`;\r\n        return MyHttp.SendReq(url, \"Put\", body);\r\n    }\r\n    static Delete(projectKey: string | undefined, key: string | undefined, timestamp: string) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/documentApi/public/${key}?timestamp=${encodeURIComponent((timestamp))}`;\r\n        return MyHttp.SendReq(url, \"Delete\");\r\n    }\r\n\r\n    static GetListDetail(projectKey: string | undefined, key: string | undefined) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/documentApi/public/${key}/details`;\r\n        return MyHttp.SendReq(url, \"Get\");\r\n    }\r\n\r\n    static UpdateDetail(projectKey: string | undefined, key: string | undefined, body: any) {\r\n        var url = `v2/tools/taskManages/projects/${projectKey}/documentApi/public/${key}/details`;\r\n        return MyHttp.SendReq(url, \"Post\", body);\r\n    }\r\n\r\n    static GetListPublicDocument(key: string | undefined, replaceVar: boolean) {\r\n        return MyHttp.SendReqV2({\r\n            url: `v2/tools/taskManages/publicDocuments/${key}?replaceVar=${replaceVar}`,\r\n            method: MethodHttp.Get,\r\n            isNoAuth: true\r\n        });\r\n    }\r\n\r\n    static GetListPublicDocumentResponse(documentPublicKey: string | undefined, apiKey: string | undefined) {\r\n        return MyHttp.SendReqV2({\r\n            url: `v2/tools/taskManages/publicDocuments/${documentPublicKey}/responses/${apiKey}`,\r\n            method: MethodHttp.Get,\r\n            isNoAuth: true\r\n        });\r\n    }\r\n}\r\n\r\nexport {\r\n    TaskProjectManageService,\r\n    TaskSprintManageService,\r\n    TaskToDoListService,\r\n    SettingService,\r\n    VariableService,\r\n    DocumentService,\r\n    ApiDocService,\r\n    ApiDocResponseService,\r\n    WorkflowService,\r\n    WorkflowDetailService,\r\n    WorkflowRunService,\r\n    DocumentApiPublicService\r\n}"],"names":["MyInput","props","onClick","value","onChange","undefined","target","setValue","required","readOnly","MyFormItem","label","Input","moment","format","inputReadOnly","showTime","disabled","min","max","className","span","colSpan1","colSpan2","Number","options","TextArea","Password","Search","loading","onSearch","checked","type","files","ImportFileComponent","setIsLoading","useState","file","setFile","projectKey","useParams","key","MyButton","SettingService","then","rs","isSuccess","blob","Blob","data","url","URL","createObjectURL","window","open","finally","formData","FormData","append","Fn","doUpload","ModifyOtherSettingComponent","isLoading","keyData","visible","setVisible","loadData","loadDataDetail","useCallback","onClose","useEffect","title","layout","onSubmitCapture","body","Edit","Add","htmlType","Swal","text","confirm","isConfirmed","OtherComponent","dataSource","setDataSource","visibleEdit","setVisibleEdit","keyEdit","setKeyEidt","map","index","gutter","style","textAlign","ModifyStatusSettingComponent","setType","isNew","setIsNew","isClosed","setIsClosed","row","HandleCloseDrawer","showConfirmButton","showDenyButton","result","StatusComponent","setKeyEdit","RenderType","valueType","colorType","color","CheckCircleTwoTone","twoToneColor","SettingComponent","items","children","MyBox","defaultActiveKey","centered","err","response","message","this","PrintMsg","replace","money","Intl","NumberFormat","currency","_data","_row","pageInfo","pageNumber","pageSize","GetIndexInArray","datas","keySearch","i","length","GetIndexInArrayStr","trim","SetPageInfo","setTotal","setPageNumber","setPageSize","totalCount","currentPage","GetTimestamp","timestamp","error","console","log","GetTimestamp_no_use","TaskProjectManageService","MyHttp","paginationRequest","generateQueryString","showClosedProject","q","encodeURIComponent","TaskSprintManageService","sprintKey","TaskToDoListService","settingKey","VariableService","DocumentService","ApiDocService","folderKey","apiDocKey","ApiDocResponseService","WorkflowService","WorkflowDetailService","workflowKey","isNext","WorkflowRunService","DocumentApiPublicService","replaceVar","method","MethodHttp","isNoAuth","documentPublicKey","apiKey"],"sourceRoot":""}
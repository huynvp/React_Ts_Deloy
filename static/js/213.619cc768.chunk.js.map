{"version":3,"file":"static/js/213.619cc768.chunk.js","mappings":"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","sources":["components/core/UI_FormatComponent.tsx","components/tool/task/projectManage/CloneComponent.tsx","services/taskService.ts"],"sourcesContent":["import moment from \"moment\";\n\nexport function UIFormatDateVNComponent(props: any) {\n    let dateStr = \"\";\n    if (props.value !== undefined && props.value !== '' && props.value !== null) {\n        dateStr = moment(props.value).format(\"DD/MM/YYYY\");\n    } else {\n        dateStr = \"\";\n    }\n\n    return (\n        <span>{dateStr}</span>\n    );\n}\n\nexport function UIFormatDateTimeVNComponent(props: any) {\n    let dateStr = \"\";\n    if (props.value !== undefined && props.value !== '' && props.value !== null) {\n        dateStr = moment(props.value).format(\"DD/MM/YYYY HH:mm:ss\");\n    } else {\n        dateStr = \"\";\n    }\n\n    return (\n        <span>{dateStr}</span>\n    );\n}","import { Col, Row } from \"antd\";\nimport { useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Fn } from \"../../../../helper/function\";\nimport { TaskProjectManageService } from \"../../../../services/taskService\";\nimport { MyFormItem } from \"../../../core/Input\";\nimport { Box, MyBox } from \"../../../core/MyBox\";\nimport { MyButton } from \"../../../core/MyButton\";\nimport { UIFormatDateVNComponent } from \"../../../core/UI_FormatComponent\";\n\nexport default function CloneComponent() {\n    let projectKey = useParams().key;\n    \n    const navigate = useNavigate();\n    const [isLoading, setIsLoading] = useState(false);\n    const [otp, setOtp] = useState('');\n    const [projectName, setProjectName] = useState('');\n    const [projectContent, setProjectContent] = useState('');\n    const [projectTag, setProjectTag] = useState('');\n    const [projectParent, setProjectParent] = useState('');\n    const [projectStatus, setProjectStatus] = useState(0);\n    const [sprints, setSprints] = useState([]);\n\n    const [settingType1, setSettingType1] = useState([]);\n    const [settingType2, setSettingType2] = useState([]);\n    const [settingType3, setSettingType3] = useState([]);\n    const [settingType4, setSettingType4] = useState([]);\n    const [settingType5, setSettingType5] = useState([]);\n    const [settingType6, setSettingType6] = useState([]);\n    const [settingType7, setSettingType7] = useState([]);\n    const [settingType8, setSettingType8] = useState([]);\n\n    function handleClickGetClone() {\n        setIsLoading(true);\n        TaskProjectManageService.GetClone(projectKey, (data: any) => {\n            console.log(data.data.data.projectDetail);\n            let projectDetail = data.data.data.projectDetail;\n            setProjectName(projectDetail.name);\n            setProjectContent(projectDetail.content);\n            setProjectTag(projectDetail.tag.toString(\",\"));\n            setProjectParent(projectDetail.parentProject?.name);\n            setProjectStatus(projectDetail.status);\n            setSprints(data.data.data.sprints);\n\n            for (let index = 0; index < data.data.data.settings.length; index++) {\n                const element = data.data.data.settings[index];\n                if (element.type === 1) {\n                    setSettingType1(element.datas);\n                }\n\n                if (element.type === 2) {\n                    setSettingType2(element.datas);\n                }\n\n                if (element.type === 3) {\n                    setSettingType3(element.datas);\n                }\n\n                if (element.type === 4) {\n                    setSettingType4(element.datas);\n                }\n\n                if (element.type === 5) {\n                    setSettingType5(element.datas);\n                }\n\n                if (element.type === 6) {\n                    setSettingType6(element.datas);\n                }\n\n                if (element.type === 7) {\n                    setSettingType7(element.datas);\n                }\n\n                if (element.type === 8) {\n                    setSettingType8(element.datas);\n                }\n            }\n        }, undefined, () => {\n            setIsLoading(false);\n        })\n    }\n\n    function handleConfirmClone() {\n        let body = {\n            otp: otp\n        };\n        setIsLoading(true);\n        TaskProjectManageService.ProcessClone(projectKey, body, (data: any) => {\n            Fn.PrintMsgSuccess(data);\n            navigate(`/tools/tasks/projects/edit/${data.data.data.projectKeyNew}`);\n        }, undefined, () => {\n            setIsLoading(false);\n        })\n    }\n\n    function RenderSprints() {\n        return sprints.map((data: any, index: number) => {\n            return (\n                <Box key={index}>\n                    <p>\n                        <strong>Giai đoạn {index + 1}: </strong> {data.name}\n                    </p>\n                    <p>\n                        <strong>Thời gian: </strong>\n                        <UIFormatDateVNComponent value={data.dateFrom} /> -\n                        <UIFormatDateVNComponent value={data.dateTo} />\n                    </p>\n                </Box>\n            )\n        })\n    }\n\n    function RenderList(datas: any) {\n        return datas.map((data: any, index: number) => {\n            if (data.isNew !== null) {\n                return (\n                    <li key={index}>{data.value} - Trạng thái mới: {data.isNew ? \"True\" : \"\"} - Trạng thái đóng: {data.isClosed ? \"True\" : \"\"}</li>\n                );\n            } else {\n                return (\n                    <li key={index}>{data.value}</li>\n                );\n            }\n        })\n    }\n\n    return (\n        <MyBox\n            isLoading={isLoading}\n            title=\"Clone dự án\">\n            <Box showBox={false}>\n                <MyButton\n                    type=\"primary\"\n                    isLoading={isLoading}\n                    onClick={handleClickGetClone}\n                    value=\"Get data clone\" />\n            </Box>\n            <Box showBox={false}>\n                <Row gutter={24}>\n                    <Col span={12}>\n                        <MyFormItem.Input\n                            label=\"Nhập OTP\"\n                            value={otp}\n                            setValue={setOtp} />\n                    </Col>\n                    <Col span={12}>\n                        <MyButton\n                            type=\"primary\"\n                            isLoading={isLoading}\n                            onClick={handleConfirmClone}\n                            value=\"Xác nhận clone dự án\" />\n                    </Col>\n                </Row>\n            </Box>\n            <Box>\n                <h2>Chi tiết dự án</h2>\n                <Row gutter={12}>\n                    <Col span={12}>\n                        <strong>Tên dự án: </strong>{projectName}\n                    </Col>\n\n                    <Col span={12}>\n                        <strong>Tag: </strong> {projectTag}\n                    </Col>\n\n                    <Col span={24}>\n                        <strong>Nội dung: </strong>{projectContent}\n                    </Col>\n\n                    <Col span={12}>\n                        <strong>Dự án cha: </strong> {projectParent}\n                    </Col>\n\n                    <Col span={12}>\n                        <strong>Trạng thái: </strong> {projectStatus}\n                    </Col>\n                </Row>\n            </Box>\n\n            <Box>\n                <h2>Danh sách các giai đoạn dự án</h2>\n                {RenderSprints()}\n            </Box>\n\n            <Box>\n                <h2>Danh sách cài đặt dự án</h2>\n                <Row gutter={12}>\n                    <Col span={24}>\n                        <h3>Danh sách trạng thái dự án</h3>\n                        <ul>\n                            {RenderList(settingType1)}\n                        </ul>\n                    </Col>\n\n                    <Col span={24}>\n                        <h3>Danh sách trạng thái giai đoạn</h3>\n                        <ul>\n                            {RenderList(settingType2)}\n                        </ul>\n                    </Col>\n\n                    <Col span={24}>\n                        <h3>Danh sách trạng thái công việc</h3>\n                        <ul>\n                            {RenderList(settingType3)}\n                        </ul>\n                    </Col>\n\n                    <Col span={24}>\n                        <h3>Danh sách trạng thái vấn đề</h3>\n                        <ul>\n                            {RenderList(settingType4)}\n                        </ul>\n                    </Col>\n\n                    <Col span={24}>\n                        <h3>Danh sách độ ưu tiên</h3>\n                        <ul>\n                            {RenderList(settingType5)}\n                        </ul>\n                    </Col>\n\n                    <Col span={24}>\n                        <h3>Danh sách mức độ ảnh hưởng</h3>\n                        <ul>\n                            {RenderList(settingType6)}\n                        </ul>\n                    </Col>\n\n                    <Col span={24}>\n                        <h3>Danh sách Tag</h3>\n                        <ul>\n                            {RenderList(settingType7)}\n                        </ul>\n                    </Col>\n\n                    <Col span={24}>\n                        <h3>Danh sách loại vấn đề</h3>\n                        <ul>\n                            {RenderList(settingType8)}\n                        </ul>\n                    </Col>\n                </Row>\n            </Box>\n        </MyBox >\n    )\n}","import { MyAxios } from \"../helper/myaxios\";\nimport { PaginationRequest } from \"../models/baseModel\";\n\nexport class TaskProjectManageService {\n    static GetQrCode(key: string) {\n        var url = `${MyAxios.BaseURL}/user/qrCode?data=taskManage_projectManage_${key}`;\n        return url;\n    }\n\n    static GetClone(projectKey: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/duplicate`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static ProcessClone(projectKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/duplicate`;\n        return MyAxios.Post(url, body, then, exp, final);\n    }\n\n    static GetList(paginationRequest: PaginationRequest, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects?${paginationRequest.generateQueryString()}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static GetDetail(key: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${key}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static Search(q: string, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/query?q=${q}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static Add(body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects`;\n        console.log(body);\n\n        return MyAxios.Post(url, body, then, exp, final);\n    }\n\n    static Edit(key: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${key}`;\n        return MyAxios.Put(url, body, then, exp, final);\n    }\n\n    static Delete(key: string | undefined, timestamp: string, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${key}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxios.Delete(url, then, exp, final);\n    }\n}\n\nexport class TaskSprintManageService {\n    static GetList(projectKey: string | undefined, paginationRequest: PaginationRequest | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/sprints${paginationRequest === undefined ? \"\" : \"?\" + paginationRequest?.generateQueryString()}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static GetDetail(projectKey: string | undefined, sprintKey: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/sprints/${sprintKey}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static Add(projectKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/sprints`;\n        return MyAxios.Post(url, body, then, exp, final);\n    }\n\n    static Edit(projectKey: string | undefined, sprintKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/sprints/${sprintKey}`;\n        return MyAxios.Put(url, body, then, exp, final);\n    }\n\n    static Delete(projectKey: string | undefined, sprintKey: string | undefined, timestamp: string, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/sprints/${sprintKey}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxios.Delete(url, then, exp, final);\n    }\n}\n\nexport class SettingService {\n    static GetListSettingStatus(projectKey: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/settingStatus`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static GetDetailSettingStatus(projectKey: string | undefined, settingKey: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/settingStatus/${settingKey}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static AddSettingStatus(projectKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/settingStatus`;\n        return MyAxios.Post(url, body, then, exp, final);\n    }\n\n    static EditSettingStatus(projectKey: string | undefined, settingKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/settingStatus/${settingKey}`;\n        return MyAxios.Put(url, body, then, exp, final);\n    }\n\n    static DeleteSettingStatus(projectKey: string | undefined, settingKey: string | undefined, timestamp: string, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/settingStatus/${settingKey}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxios.Delete(url, then, exp, final);\n    }\n    // Other\n    static GetListSettingOther(projectKey: string | undefined, type: number, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/settingOther?type=${type}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static GetDetailSettingOther(projectKey: string | undefined, settingKey: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/settingOther/${settingKey}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static AddSettingOther(projectKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/settingOther`;\n        return MyAxios.Post(url, body, then, exp, final);\n    }\n\n    static EditSettingOther(projectKey: string | undefined, settingKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/settingOther/${settingKey}`;\n        return MyAxios.Put(url, body, then, exp, final);\n    }\n\n    static DeleteSettingOther(projectKey: string | undefined, settingKey: string | undefined, timestamp: string, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/settingOther/${settingKey}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxios.Delete(url, then, exp, final);\n    }\n\n    static SearchByType(projectKey: string | undefined, type: number, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/settings/query?type=${type}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n}\n\nexport class VariableService {\n    static GetList(projectKey: string | undefined, paginationRequest: PaginationRequest, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/workflow/variables?${paginationRequest.generateQueryString()}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static GetDetail(projectKey: string | undefined, key: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/workflow/variables/${key}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static Add(projectKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/workflow/variables`;\n        return MyAxios.Post(url, body, then, exp, final);\n    }\n\n    static Edit(projectKey: string | undefined, key: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/workflow/variables/${key}`;\n        return MyAxios.Put(url, body, then, exp, final);\n    }\n\n    static Delete(projectKey: string | undefined, key: string | undefined, timestamp:string, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/workflow/variables/${key}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxios.Delete(url, then, exp, final);\n    }\n}"],"names":["UIFormatDateVNComponent","props","dateStr","undefined","value","moment","format","UIFormatDateTimeVNComponent","CloneComponent","projectKey","useParams","key","navigate","useNavigate","useState","isLoading","setIsLoading","otp","setOtp","projectName","setProjectName","projectContent","setProjectContent","projectTag","setProjectTag","projectParent","setProjectParent","projectStatus","setProjectStatus","sprints","setSprints","settingType1","setSettingType1","settingType2","setSettingType2","settingType3","setSettingType3","settingType4","setSettingType4","settingType5","setSettingType5","settingType6","setSettingType6","settingType7","setSettingType7","settingType8","setSettingType8","RenderList","datas","map","data","index","isNew","isClosed","title","showBox","type","onClick","TaskProjectManageService","console","log","projectDetail","name","content","tag","toString","parentProject","status","settings","length","element","gutter","span","label","setValue","body","Fn","projectKeyNew","dateFrom","dateTo","MyAxios","then","exp","final","url","paginationRequest","generateQueryString","q","timestamp","encodeURIComponent","TaskSprintManageService","sprintKey","SettingService","settingKey","VariableService"],"sourceRoot":""}
{"version":3,"file":"static/js/838.bc4a888f.chunk.js","mappings":"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","sources":["components/manage/storedManage/Link_ModifyComponent.tsx","components/manage/storedManage/Link_IndexComponent.tsx"],"sourcesContent":["import { Drawer, Form } from \"antd\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Fn } from \"../../../helper/function\";\nimport { StoredManageService } from \"../../../services/adminService\";\nimport { MyButton } from \"../../core/MyButton\";\nimport SearchComponent from \"../../core/SearchComponent\";\n\nexport default function ManageLinkStoredModifyComponent(props: any) {\n    const [storedOrigin, setStoredOrigin] = useState('');\n    const [storedOriginKey, setStoredOriginKey] = useState('');\n    const [storedDest, setStoredDest] = useState('');\n    const [storedDestKey, setStoredDestKey] = useState('');\n\n    const [dataSearchOrigin, setDataSearchOrigin] = useState([]);\n    const [dataSearchDest, setDataSearchDest] = useState([]);\n    const { setIsLoading } = props;\n\n    const loadData = useCallback(() => {\n        setIsLoading(true);\n        StoredManageService.GetDetailLinkStored(props.keyData, (data: any) => {\n            let row = data.data.data;\n            setStoredOrigin(row.storedOrigin.name);\n            setStoredOriginKey(row.storedOrigin.key);\n            setStoredDest(row.storedDest.name);\n            setStoredDestKey(row.storedDest.key);\n        }, undefined, () => {\n            setIsLoading(false);\n        })\n    }, [props.keyData, setIsLoading]);\n\n    useEffect(() => {\n        if (props.keyData === undefined) {\n            return;\n        }\n        loadData();\n    }, [loadData, props.keyData]);\n\n    function onCloseDrawer() {\n        props.setVisible(false);\n        if (props.keyData !== undefined) {\n            props.setKeyData(undefined);\n        }\n    }\n\n    function handleSubmitForm() {\n        var body = {\n            storedOriginKey: storedOriginKey,\n            storedDestKey: storedDestKey\n        };\n        props.setIsLoading(true);\n\n        if (props.keyData === undefined) {\n            add(body);\n        } else {\n            edit(body);\n        }\n    }\n\n    function add(body: any) {\n        StoredManageService.AddLinkStored(body, (data: any) => {\n            Fn.PrintMsgSuccess(data);\n            props.loadData();\n        }, () => {\n            props.setIsLoading(false);\n        })\n    }\n\n    function edit(body: any) {\n        StoredManageService.GetDetailLinkStored(props.keyData, (data: any) => {\n            body = Fn.GetTimestamp(data, body);\n            StoredManageService.EditLinkStored(props.keyData, body, (data: any) => {\n                Fn.PrintMsgSuccess(data);\n                props.loadData();\n            }, () => {\n                props.setIsLoading(false);\n            })\n        }, () => {\n            props.setIsLoading(false);\n        })\n    }\n\n    function handleSearchStoredOrigin(params: any) {\n        props.setIsLoading(true);\n        StoredManageService.SearchName(params, (data: any) => {\n            setDataSearchOrigin(data.data.data);\n        }, undefined, () => {\n            props.setIsLoading(false);\n        })\n    }\n\n    function handleSearchStoredDest(params: any) {\n        props.setIsLoading(true);\n        StoredManageService.SearchName(params, (data: any) => {\n            setDataSearchDest(data.data.data);\n        }, undefined, () => {\n            props.setIsLoading(false);\n        })\n    }\n\n    return (\n        <div>\n            <Drawer\n                title={props.keyData === undefined ? \"Thêm mới liên kết\" : \"Chỉnh sửa liên kết\"}\n                visible={props.visible}\n                onClose={onCloseDrawer}>\n                <Form layout=\"vertical\">\n                    <SearchComponent\n                        label=\"Stored nguồn\"\n                        onSearch={handleSearchStoredOrigin}\n                        dataSearch={dataSearchOrigin}\n                        resultKey={storedOriginKey}\n                        resultName={storedOrigin}\n                        setResultKey={setStoredOriginKey}\n                        setResultName={setStoredOrigin}\n                        isLoading={props.isLoading} />\n\n                    <SearchComponent\n                        label=\"Stored đích\"\n                        onSearch={handleSearchStoredDest}\n                        dataSearch={dataSearchDest}\n                        resultKey={storedDestKey}\n                        resultName={storedDest}\n                        setResultKey={setStoredDestKey}\n                        setResultName={setStoredDest}\n                        isLoading={props.isLoading} />\n\n\n                    <MyButton\n                        value={props.keyData === undefined ? \"Thêm\" : \"Chỉnh sửa\"}\n                        onClick={handleSubmitForm}\n                        type=\"success\" />\n                </Form>\n            </Drawer>\n        </div>\n    );\n}","import { useCallback, useEffect, useState } from \"react\";\nimport { Button, Popconfirm } from 'antd';\nimport { StoredManageService } from \"../../../services/adminService\";\nimport { Fn } from \"../../../helper/function\";\nimport { MyButton } from \"../../core/MyButton\";\nimport ManageLinkStoredModifyComponent from \"./Link_ModifyComponent\";\nimport { PaginationRequest, TableColumn } from \"../../../models/baseModel\";\nimport TableComponent from \"../../core/TableNewComponent\";\nimport { OrderByModel, PageInfoModel } from \"../../core/TableModel\";\n\nexport default function ManageLinkStoredIndexComponent() {\n    const column = [\n        new TableColumn({ title: \"STT\", key: \"stt\"}),\n        new TableColumn({ title: \"Stored nguồn\", key: \"storedOrigin\" }),\n        new TableColumn({ title: \"Stored liên kết\", key: \"storedDest\" }),\n        new TableColumn({\n            title: \"Hành động\", key: \"action\", render: (data: string, row: any) => {\n                return (\n                    <>\n                        <Button\n                            type=\"link\"\n                            onClick={() => {\n                                handleEdit(row.key);\n                            }}>\n                            Chỉnh sửa\n                        </Button>\n                        <Popconfirm\n                            title=\"Bạn có muốn xóa không?\"\n                            onConfirm={() => {\n                                handleDelete(row.key);\n                            }}>\n                            <Button type=\"link\">Xóa</Button>\n                        </Popconfirm>\n                    </>\n                )\n            }\n        }),\n    ];\n\n    const [orderBy, setOrderBy] = useState<OrderByModel>(new OrderByModel());\n    const [pageInfo, setPageInfo] = useState<PageInfoModel>(new PageInfoModel());\n\n    const [data, setData] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [visible, setVisible] = useState(false);\n    const [visibleEdit, setVisibleEdit] = useState(false);\n    const [keyEdit, setKeyEdit] = useState<string | undefined>(undefined);\n\n    const loadData = useCallback(() => {        \n        setIsLoading(true);\n        let paginationRequest = new PaginationRequest(pageInfo.pageNumber, pageInfo.pageSize, orderBy);\n        StoredManageService.GetLinkStored(undefined, paginationRequest, (data: any) => {\n            setPageInfo(new PageInfoModel(data));\n            let row = data.data.data.pagedData.map((data: any, index: number) => {\n                return {\n                    stt: index + 1,\n                    key: data.key,\n                    storedOrigin: data.storedOrigin.name,\n                    storedDest: data.storedDest.name,\n                }\n            });\n            setData(row);\n        }, undefined, () => {\n            setIsLoading(false);\n        });\n    }, [pageInfo.pageNumber, pageInfo.pageSize, orderBy]);\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n    function handleClickAdd() {\n        setVisible(true);\n    }\n\n    function handleEdit(key: string) {\n        setKeyEdit(key);\n        setVisibleEdit(true);\n    }\n\n    function handleDelete(key: string) {\n        setIsLoading(true);\n        StoredManageService.GetDetailLinkStored(key, (data: any) => {\n            StoredManageService.DeleteLinkStored(key, Fn.GetTimestamp(data), (data: any) => {\n                Fn.PrintMsgSuccess(data);\n                loadData();\n            }, () => {\n                setIsLoading(false);\n            })\n        }, () => {\n            setIsLoading(false);\n        })\n    }\n    return (\n        <div className=\"my-box\">\n            <MyButton value=\"Thêm mới\" onClick={handleClickAdd} />\n            <TableComponent\n                 pageInfo={pageInfo}\n                 setPageInfo={setPageInfo}\n                 orderBy={orderBy}\n                 setOrderBy={setOrderBy}\n                 column={column}\n                 dataSource={data}\n                 loading={isLoading}\n                 loadData={loadData}/>\n\n            <ManageLinkStoredModifyComponent\n                visible={visible}\n                setVisible={setVisible}\n                isLoading={isLoading}\n                setIsLoading={setIsLoading}\n                loadData={loadData} />\n\n            <ManageLinkStoredModifyComponent\n                keyData={keyEdit}\n                setKeyData={setKeyEdit}\n                visible={visibleEdit}\n                setVisible={setVisibleEdit}\n                isLoading={isLoading}\n                setIsLoading={setIsLoading}\n                loadData={loadData} />\n        </div>\n    );\n}"],"names":["ManageLinkStoredModifyComponent","props","useState","storedOrigin","setStoredOrigin","storedOriginKey","setStoredOriginKey","storedDest","setStoredDest","storedDestKey","setStoredDestKey","dataSearchOrigin","setDataSearchOrigin","dataSearchDest","setDataSearchDest","setIsLoading","loadData","useCallback","StoredManageService","keyData","data","row","name","key","undefined","useEffect","title","visible","onClose","setVisible","setKeyData","layout","SearchComponent","label","onSearch","params","dataSearch","resultKey","resultName","setResultKey","setResultName","isLoading","MyButton","value","onClick","body","Fn","add","edit","type","ManageLinkStoredIndexComponent","column","TableColumn","render","setKeyEdit","setVisibleEdit","onConfirm","OrderByModel","orderBy","setOrderBy","PageInfoModel","pageInfo","setPageInfo","setData","visibleEdit","keyEdit","paginationRequest","PaginationRequest","pageNumber","pageSize","pagedData","map","index","stt","className","dataSource","loading"],"sourceRoot":""}
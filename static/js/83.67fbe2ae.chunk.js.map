{"version":3,"file":"static/js/83.67fbe2ae.chunk.js","mappings":"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","sources":["components/core/UI_FormatComponent.tsx","components/manage/versionManage/ModifyComponent.tsx","components/manage/versionManage/IndexComponent.tsx","models/versionManageModel.ts"],"sourcesContent":["import moment from \"moment\";\n\nexport function UIFormatDateVNComponent(props: any) {\n    let dateStr = \"\";\n    if (props.value !== undefined && props.value !== '' && props.value !== null) {\n        dateStr = moment(props.value).format(\"DD/MM/YYYY\");\n    } else {\n        dateStr = \"\";\n    }\n\n    return (\n        <span>{dateStr}</span>\n    );\n}\n\nexport function UIFormatDateTimeVNComponent(props: any) {\n    let dateStr = \"\";\n    if (props.value !== undefined && props.value !== '' && props.value !== null) {\n        dateStr = moment(props.value).format(\"DD/MM/YYYY HH:mm:ss\");\n    } else {\n        dateStr = \"\";\n    }\n\n    return (\n        <span>{dateStr}</span>\n    );\n}","import { Col, Drawer, Form, message, Row } from \"antd\";\nimport { useCallback, useEffect, useState } from 'react';\nimport { Fn } from \"../../../helper/function\";\nimport { VersionItemResponse } from \"../../../models/versionManageModel\";\nimport { VersionManageService } from \"../../../services/adminService\";\nimport { MyFormItemDatePicker, MyFormItemInput, MyFormItemInputNumberColSpan, MyFormItemSelect, MyFormItemTextArea, MyInput } from \"../../core/Input\";\nimport { MyButton } from \"../../core/MyButton\";\nimport './logVersion.css';\nvar moment = require('moment');\n\nexport default function ManageVersionModifyComponent(props: any) {\n    const options = [\n        {\n            label: 'Frontend',\n            key: 'fr',\n            value: 1\n        },\n        {\n            label: 'Backend',\n            key: 'be',\n            value: 2\n        },\n        {\n            label: 'Database',\n            key: 'db',\n            value: 3\n        }\n    ]\n\n    const [type, setType] = useState(1);\n    const [majorVersion, setMajorVersion] = useState(0);\n    const [minorVersion, setMinorVersion] = useState(0);\n    const [pathVersion, setPathVersion] = useState(0);\n    const [preReleaseVersion, setReReleaseVersion] = useState('');\n    const [dateRelease, setDateRelease] = useState(null);\n    const [name, setName] = useState('');\n    const [_message, setMessage] = useState('');\n\n    const { setIsLoading } = props;\n\n    function handleClickButton() {\n        props.setIsLoading(true);\n        let body = {\n            type: type,\n            version: {\n                major: majorVersion,\n                minor: minorVersion,\n                patch: pathVersion,\n                preRelease: preReleaseVersion\n            },\n            name: name,\n            message: _message,\n            dateRelease: dateRelease\n        };\n        if (props.keyEdit !== undefined) {\n            edit(body);\n        } else {\n            add(body);\n        }\n    }\n\n    function add(body: any) {\n        VersionManageService.Add(body, (data: any) => {\n            Fn.PrintMsgSuccess(data);\n            props.onClose();\n            props.loadData();\n        }, () => {\n            props.setIsLoading(false);\n        })\n    }\n\n    function edit(body: any) {\n        VersionManageService.GetDetail(props.keyEdit, (data: any) => {\n            body = Fn.GetTimestamp(data, body);\n            VersionManageService.Edit(props.keyEdit, body, (data: any) => {\n                message.success(data.data.message);\n                props.onClose();\n                props.loadData();\n            }, () => {\n                props.setIsLoading(false)\n            })\n        }, () => {\n            props.setIsLoading(false)\n        })\n    }\n\n    const loadData = useCallback(() => {\n        if (props.keyEdit !== undefined) {\n            setIsLoading(true);\n            VersionManageService.GetDetail(props.keyEdit, (data: any) => {\n                let row = new VersionItemResponse(data.data.data);\n                setType(row.type);\n                setMajorVersion(row.version.major);\n                setMinorVersion(row.version.minor);\n                setPathVersion(row.version.patch);\n                setReReleaseVersion(row.version.preRelease);\n                setName(row.name);\n                setMessage(row.message);\n                setDateRelease(moment(row.dateRelease));\n            }, undefined, () => {\n                setIsLoading(false)\n            })\n        }\n    }, [props.keyEdit, setIsLoading]);\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n    return (\n        <Drawer\n            visible={props.visible}\n            onClose={props.onClose}\n            title={props.keyEdit !== undefined ? \"Chỉnh sửa log version\" : \"Thêm log version mới\"}>\n            <Form layout=\"vertical\">\n                <MyFormItemSelect\n                    label=\"Loại\"\n                    options={options}\n                    value={type}\n                    setValue={setType} />\n\n                <Form.Item label=\"Phiên bản\">\n                    <MyFormItemInputNumberColSpan\n                        className=\"row-version\"\n                        label=\"Major\"\n                        colSpan1={8}\n                        colSpan2={16}\n                        min={0}\n                        max={1000000}\n                        value={majorVersion}\n                        setValue={setMajorVersion} />\n\n                    <MyFormItemInputNumberColSpan\n                        className=\"row-version\"\n                        label=\"Minor\"\n                        colSpan1={8}\n                        colSpan2={16}\n                        min={0}\n                        max={1000000}\n                        value={minorVersion}\n                        setValue={setMinorVersion} />\n\n                    <MyFormItemInputNumberColSpan\n                        className=\"row-version\"\n                        label=\"Patch\"\n                        colSpan1={8}\n                        colSpan2={16}\n                        min={0}\n                        max={1000000}\n                        value={pathVersion}\n                        setValue={setPathVersion} />\n\n                    <Row className=\"row-version\">\n                        <Col span={8}>\n                            <span>PreRelease</span>\n                        </Col>\n                        <Col span={16}>\n                            <MyInput\n                                value={preReleaseVersion}\n                                setValue={setReReleaseVersion} />\n                        </Col>\n                    </Row>\n                </Form.Item>\n\n                <MyFormItemInput\n                    label=\"Tên\"\n                    value={name}\n                    setValue={setName} />\n\n                <MyFormItemDatePicker\n                    label=\"Ngày phát hành\"\n                    value={dateRelease}\n                    setValue={setDateRelease} />\n\n                <MyFormItemTextArea\n                    label=\"Ghi chú\"\n                    value={_message}\n                    setValue={setMessage} />\n\n                <MyButton\n                    onClick={handleClickButton}\n                    htmlType=\"submit\"\n                    type=\"success\"\n                    value={props.keyEdit !== undefined ? \"Chỉnh sửa\" : \"Thêm\"} />\n            </Form>\n        </Drawer>\n    );\n}","import { Button, message, Popconfirm, Tag } from \"antd\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { PaginationRequest, TableColumn } from \"../../../models/baseModel\";\nimport { VersionItemResponse } from \"../../../models/versionManageModel\";\nimport { VersionManageService } from \"../../../services/adminService\";\nimport { MyButton } from \"../../core/MyButton\";\nimport { OrderByModel, PageInfoModel } from \"../../core/TableModel\";\nimport TableComponent from \"../../core/TableNewComponent\";\nimport MyTitle from \"../../core/Title\";\nimport { UIFormatDateTimeVNComponent } from \"../../core/UI_FormatComponent\";\nimport ManageVersionModifyComponent from \"./ModifyComponent\";\n\nexport default function ManageVersionIndexComponent() {\n    const [isLoading, setIsLoading] = useState(false);\n    const [pageInfo, setPageInfo] = useState<PageInfoModel>(new PageInfoModel());\n    const [orderBy, setOrderBy] = useState<OrderByModel>(new OrderByModel());\n    const [typeOrderBy, setTypeOrderBy] = useState<boolean>(false);\n    const [visible, setVisible] = useState(false);\n    const [visibleEdit, setVisibleEdit] = useState(false);\n    const [keyEdit, setKeyEdit] = useState<string | undefined>(undefined);\n    const column = [\n        new TableColumn({ title: \"STT\", dataIndex: \"stt\", key: \"stt\", disabled: true }),\n        new TableColumn({\n            title: \"Loại\", dataIndex: \"type\", key: \"type\", render: (data: number, row: any) => {\n                let color = \"\";\n                let value = \"\";\n                if (data === 1) {\n                    color = \"red\";\n                    value = \"Frontend\";\n                }\n\n                if (data === 2) {\n                    color = \"green\";\n                    value = \"Backend\";\n                }\n\n                if (data === 3) {\n                    color = \"blue\";\n                    value = \"Database\";\n                }\n\n                return (\n                    <Tag color={color}>{value}</Tag>\n                )\n            }\n        }),\n        new TableColumn({ title: \"Phiên bản\", dataIndex: \"versionStr\", key: \"version\" }),\n        new TableColumn({ title: \"Tên\", dataIndex: \"name\", key: \"name\" }),\n        new TableColumn({ title: \"Ghi chú\", dataIndex: \"message\", key: \"message\" }),\n        new TableColumn({\n            title: \"Ngày phát hành\", dataIndex: \"dateRelease\", key: \"dateRelease\", render: (data: string, row: any) => {\n                return (<UIFormatDateTimeVNComponent value={data} />);\n            }\n        }),\n\n        new TableColumn({\n            title: \"Hành động\", key: \"action\", disabled: true, render: (data: any, row: any) => {\n                return (\n                    <div>\n                        <MyButton\n                            type=\"link\"\n                            value=\"Chỉnh sửa\"\n                            onClick={() => {\n                                handleClickEdit(row.key);\n                            }} />\n                        <Popconfirm\n                            title=\"Bạn có muốn xóa phiên bản này không?\"\n                            onConfirm={() => {\n                                handleDelete(row.key);\n                            }}>\n                            <Button type=\"link\">Xóa</Button>\n                        </Popconfirm>\n                    </div>\n                );\n            }\n        })\n    ];\n\n    const [data, setData] = useState([]);\n    const loadData = useCallback(() => {\n        setIsLoading(true);\n        let paginationRequest = new PaginationRequest(pageInfo.pageNumber, pageInfo.pageSize, orderBy);\n        VersionManageService.GetList(paginationRequest, (data: any) => {\n            setPageInfo(new PageInfoModel(data));\n            setData(data.data.data.pagedData.map((data: any, index: number) => {\n                return new VersionItemResponse(data, index);\n            }));\n\n        }, undefined, () => {\n            setIsLoading(false)\n        })\n    }, [pageInfo.pageNumber, pageInfo.pageSize, orderBy]);\n\n    useEffect(() => {\n        loadData();\n    }, [loadData])\n\n    function handleOnClose() {\n        setVisible(false);\n    }\n\n    function handleOnCloseEdit() {\n        setVisibleEdit(false);\n        setKeyEdit(undefined);\n    }\n\n    function handleClickAdd() {\n        setVisible(true);\n    }\n\n    function handleClickEdit(key: string) {\n        setVisibleEdit(true);\n        setKeyEdit(key);\n    }\n\n    function handleDelete(key: string) {\n        setIsLoading(true);\n        VersionManageService.GetDetail(key, (data: any) => {\n            let timestamp = new VersionItemResponse(data.data.data).timestamp;\n            VersionManageService.Delete(key, timestamp, (data: any) => {\n                message.success(data.data.message);\n                loadData();\n            }, () => {\n                setIsLoading(false)\n            })\n        }, () => {\n            setIsLoading(false)\n        });\n    }\n\n    return (\n        <div>\n            <MyTitle name=\"Quản lí phiên bản\" />\n            <MyButton\n                type=\"primary\"\n                value=\"Thêm mới\"\n                onClick={handleClickAdd} />\n\n            <TableComponent\n                pageInfo={pageInfo}\n                setPageInfo={setPageInfo}\n                orderBy={orderBy}\n                setOrderBy={setOrderBy}\n                column={column}\n                dataSource={data}\n                loadData={loadData}\n                loading={isLoading}\n                typeOrderBy={typeOrderBy}\n                setTypeOrderBy={setTypeOrderBy} />\n\n            <ManageVersionModifyComponent\n                visible={visible}\n                onClose={handleOnClose}\n                loadData={loadData}\n                isLoading={isLoading}\n                setIsLoading={setIsLoading} />\n\n            <ManageVersionModifyComponent\n                visible={visibleEdit}\n                onClose={handleOnCloseEdit}\n                loadData={loadData}\n                isLoading={isLoading}\n                setIsLoading={setIsLoading}\n                keyEdit={keyEdit} />\n        </div>\n    );\n}\n","export class AboutResponse {\n    frontEnd: VersionItemResponse[] = [];\n    backEnd: VersionItemResponse[] = [];\n    database: VersionItemResponse[] = [];\n    constructor(data?: any) {\n        if (data === undefined) {\n            this.frontEnd = [];\n            this.backEnd = [];\n            this.database = [];\n            return;\n        }\n\n        this.frontEnd = data.frontEnd.map((data: any, index: number) => {\n            return new VersionItemResponse(data);\n        });\n        this.backEnd = data.backEnd.map((data: any, index: number) => {\n            return new VersionItemResponse(data);\n        });\n        this.database = data.database.map((data: any, index: number) => {\n            return new VersionItemResponse(data);\n        });\n    }\n}\n\nexport class VersionItemResponse {\n    stt: number | null;\n    dateRelease: string | null;\n    key: string;\n    message: string;\n    name: string;\n    timestamp: string;\n    version: Version;\n    type: number;\n    preRelease: string;\n    versionStr: string;\n    constructor(data?: any, index?: number) {\n        this.stt = index !== undefined ? (index + 1) : null;\n        this.dateRelease = data.dateRelease;\n        this.key = data.key;\n        this.message = data.message;\n        this.name = data.name;\n        this.timestamp = data.timestamp;\n        this.version = data.version;\n        this.type = data.type;\n        this.preRelease = data.preRelease;\n        this.versionStr = data.versionStr;\n    }\n}\n\nexport class Version {\n    major: number\n    minor: number\n    patch: number\n    preRelease: string\n    constructor(data: any) {\n        this.major = data.major;\n        this.minor = data.minor;\n        this.patch = data.patch;\n        this.preRelease = data.preRelease;\n    }\n}"],"names":["UIFormatDateVNComponent","props","dateStr","undefined","value","moment","format","UIFormatDateTimeVNComponent","require","ManageVersionModifyComponent","useState","type","setType","majorVersion","setMajorVersion","minorVersion","setMinorVersion","pathVersion","setPathVersion","preReleaseVersion","setReReleaseVersion","dateRelease","setDateRelease","name","setName","_message","setMessage","setIsLoading","loadData","useCallback","keyEdit","VersionManageService","data","row","VersionItemResponse","version","major","minor","patch","preRelease","message","useEffect","visible","onClose","title","layout","label","options","key","setValue","className","colSpan1","colSpan2","min","max","span","MyButton","onClick","body","Fn","edit","add","htmlType","ManageVersionIndexComponent","isLoading","PageInfoModel","pageInfo","setPageInfo","OrderByModel","orderBy","setOrderBy","typeOrderBy","setTypeOrderBy","setVisible","visibleEdit","setVisibleEdit","setKeyEdit","column","TableColumn","dataIndex","disabled","render","color","onConfirm","timestamp","setData","paginationRequest","PaginationRequest","pageNumber","pageSize","pagedData","map","index","dataSource","loading","AboutResponse","frontEnd","backEnd","database","this","stt","versionStr"],"sourceRoot":""}
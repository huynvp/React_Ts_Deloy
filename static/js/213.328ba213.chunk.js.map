{"version":3,"file":"static/js/213.328ba213.chunk.js","mappings":"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","sources":["components/core/Input.tsx","components/core/UI_FormatComponent.tsx","components/tool/task/projectManage/CloneComponent.tsx","services/taskService.ts"],"sourcesContent":["import { Input, Form, DatePicker, InputNumber, Row, Col, Select, Switch } from \"antd\";\nimport moment from \"moment\";\n\nexport class MyInput {\n    // ************************* Input ****************************\n    static Input(props: any) {\n        function handleChangeInput(value: any) {\n            if (props.onChange !== undefined) {\n                props.onChange(value.target.value);\n            }\n\n            if (props.setValue !== undefined) {\n                props.setValue(value.target.value);\n            }            \n        }\n\n        return (\n            <Input\n                onClick={props.onClick}\n                value={props.value}\n                onChange={handleChangeInput}\n                required={props.required}\n                readOnly={props.readOnly} />\n        );\n    }\n}\n\nexport class MyFormItem {\n    static Input(props: any) {\n        return (\n            <Form.Item label={props.label}>\n                <MyInput.Input\n                    onClick={props.onClick}\n                    onChange={props.onChange}\n                    value={props.value}\n                    setValue={props.setValue}\n                    required={props.required}\n                    readOnly={props.readOnly} />\n            </Form.Item>\n        );\n    }\n\n    // *************************** Datepicker **************************\n    static DatePicker(props: any) {\n        function handleChangeOption(value: any) {\n            if (props.setValue !== undefined) {\n                props.setValue(value);\n            }\n        }\n\n        function customeFormat(value: any) {\n            return moment(value).format(\"DD/MM/YYYY\");\n        }\n\n        return (\n            <Form.Item label={props.label}>\n                <DatePicker\n                    value={props.value}\n                    onChange={handleChangeOption}\n                    format={customeFormat}\n                    inputReadOnly={props.readOnly} />\n            </Form.Item>\n        );\n    }\n\n    // *************************** Datetimepicker **************************\n    static DateTimePicker(props: any) {\n        function handleChangeOption(value: any) {\n            if (props.setValue !== undefined) {\n                props.setValue(value);\n            }\n        }\n\n        function customeFormat(value: any) {\n            return moment(value).format(\"DD/MM/YYYY HH:mm:ss\");\n        }\n\n        return (\n            <Form.Item label={props.label}>\n                <DatePicker\n                    showTime\n                    value={props.value}\n                    onChange={handleChangeOption}\n                    format={customeFormat}\n                    disabled={props.readOnly} />\n            </Form.Item>\n        );\n    }\n\n    // *************************** Number **************************\n    static Number(props: any) {\n        function handleChangeInput(value: any) {\n            if (props.setValue !== undefined) {\n                props.setValue(value);\n            }\n        }\n\n        return (\n            <InputNumber\n                min={props.min}\n                max={props.max}\n                value={props.value}\n                onChange={handleChangeInput} />\n        );\n    }\n\n    static NumberColSpan(props: any) {        \n        return (\n            <div>\n                <Row className={props.className}>\n                    <Col span={props.colSpan1}>\n                        <span>{props.label}</span>\n                    </Col>\n                    <Col span={props.colSpan2}>\n                        <MyFormItem.Number\n                            min={props.min}\n                            max={props.max}\n                            value={props.value}\n                            setValue={props.setValue} />\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n\n    // *************************** Select **************************\n    static Select(props: any) {\n        function handleChangeOption(value: any) {\n            if (props.setValue !== undefined) {\n                props.setValue(value);\n            }\n\n            if (props.onChange !== undefined) {\n                props.onChange(value);\n            }\n        }\n\n        return (\n            <Form.Item label={props.label}>\n                <Select\n                    options={props.options}\n                    value={props.value}\n                    onChange={handleChangeOption} />\n            </Form.Item>\n        );\n    }\n\n\n    // *************************** TextArea **************************\n    static TextArea(props: any) {\n        function handleChangeOption(value: any) {\n            if (props.setValue !== undefined) {\n                props.setValue(value.target.value);\n            }\n        }\n\n        const { TextArea } = Input;\n        return (\n            <Form.Item label={props.label}>\n                <TextArea\n                    value={props.value}\n                    onChange={handleChangeOption} />\n            </Form.Item>\n        );\n    }\n\n    // *************************** Password **************************\n    static Password(props: any) {\n        function handleChangeOption(value: any) {\n            if (props.onChange !== undefined) {\n                props.onChange(value.target.value);\n            }\n\n            if (props.setValue !== undefined) {\n                props.setValue(value.target.value);\n            }\n        }\n\n        const { Password } = Input;\n        return (\n            <Form.Item label={props.label}>\n                <Password\n                    value={props.value}\n                    onChange={handleChangeOption} />\n            </Form.Item>\n        );\n    }\n\n    // *************************** Search **************************\n    static Search(props: any) {\n        function handleChangeSearch(value: any) {\n            if (props.setValue !== undefined) {\n                props.setValue(value.target.value);\n            }\n        }\n\n        const { Search } = Input;\n        return (\n            <Form.Item label={props.label}>\n                <Search\n                    loading={props.loading}\n                    onSearch={props.onSearch}\n                    value={props.value}\n                    onChange={handleChangeSearch} />\n            </Form.Item>\n        );\n    }\n\n    // *************************** Swith **************************\n    static Switch(props: any) {\n        function handleChangeSearch(value: any) {\n            if (props.setValue !== undefined) {\n                props.setValue(value);\n            }\n            \n            if(props.onChange !== undefined) {\n                props.onChange(value);\n            }\n        }\n\n        return (\n            <Form.Item label={props.label}>\n                <Switch\n                    loading={props.loading}\n                    checked={props.value}\n                    onChange={handleChangeSearch} />\n            </Form.Item>\n        );\n    }\n\n     // *************************** Swith **************************\n     static File(props: any) {\n        function handleChange(value: any) {\n            if (props.setValue !== undefined) {\n                props.setValue(value.target.files[0]);\n            }\n        }\n\n        return (\n            <Form.Item label={props.label}>\n                <Input\n                    type=\"file\"\n                    // value={props.value}\n                    onChange={handleChange}/>\n            </Form.Item>\n        );\n    }\n}","import moment from \"moment\";\n\nexport function UIFormatDateVNComponent(props: any) {\n    let dateStr = \"\";\n    if (props.value !== undefined && props.value !== '' && props.value !== null) {\n        dateStr = moment(props.value).format(\"DD/MM/YYYY\");\n    } else {\n        dateStr = \"\";\n    }\n\n    return (\n        <span>{dateStr}</span>\n    );\n}\n\nexport function UIFormatDateTimeVNComponent(props: any) {\n    let dateStr = \"\";\n    if (props.value !== undefined && props.value !== '' && props.value !== null) {\n        dateStr = moment(props.value).format(\"DD/MM/YYYY HH:mm:ss\");\n    } else {\n        dateStr = \"\";\n    }\n\n    return (\n        <span>{dateStr}</span>\n    );\n}","import { Col, Row } from \"antd\";\nimport { useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Fn } from \"../../../../helper/function\";\nimport { TaskProjectManageService } from \"../../../../services/taskService\";\nimport { MyFormItem } from \"../../../core/Input\";\nimport { Box, MyBox } from \"../../../core/MyBox\";\nimport { MyButton } from \"../../../core/MyButton\";\nimport { UIFormatDateVNComponent } from \"../../../core/UI_FormatComponent\";\n\nexport default function CloneComponent() {\n    let projectKey = useParams().key;\n    \n    const navigate = useNavigate();\n    const [isLoading, setIsLoading] = useState(false);\n    const [otp, setOtp] = useState('');\n    const [projectName, setProjectName] = useState('');\n    const [projectContent, setProjectContent] = useState('');\n    const [projectTag, setProjectTag] = useState('');\n    const [projectParent, setProjectParent] = useState('');\n    const [projectStatus, setProjectStatus] = useState(0);\n    const [sprints, setSprints] = useState([]);\n\n    const [settingType1, setSettingType1] = useState([]);\n    const [settingType2, setSettingType2] = useState([]);\n    const [settingType3, setSettingType3] = useState([]);\n    const [settingType4, setSettingType4] = useState([]);\n    const [settingType5, setSettingType5] = useState([]);\n    const [settingType6, setSettingType6] = useState([]);\n    const [settingType7, setSettingType7] = useState([]);\n    const [settingType8, setSettingType8] = useState([]);\n\n    function handleClickGetClone() {\n        setIsLoading(true);\n        TaskProjectManageService.GetClone(projectKey, (data: any) => {\n            console.log(data.data.data.projectDetail);\n            let projectDetail = data.data.data.projectDetail;\n            setProjectName(projectDetail.name);\n            setProjectContent(projectDetail.content);\n            setProjectTag(projectDetail.tag.toString(\",\"));\n            setProjectParent(projectDetail.parentProject?.name);\n            setProjectStatus(projectDetail.status);\n            setSprints(data.data.data.sprints);\n\n            for (let index = 0; index < data.data.data.settings.length; index++) {\n                const element = data.data.data.settings[index];\n                if (element.type === 1) {\n                    setSettingType1(element.datas);\n                }\n\n                if (element.type === 2) {\n                    setSettingType2(element.datas);\n                }\n\n                if (element.type === 3) {\n                    setSettingType3(element.datas);\n                }\n\n                if (element.type === 4) {\n                    setSettingType4(element.datas);\n                }\n\n                if (element.type === 5) {\n                    setSettingType5(element.datas);\n                }\n\n                if (element.type === 6) {\n                    setSettingType6(element.datas);\n                }\n\n                if (element.type === 7) {\n                    setSettingType7(element.datas);\n                }\n\n                if (element.type === 8) {\n                    setSettingType8(element.datas);\n                }\n            }\n        }, undefined, () => {\n            setIsLoading(false);\n        })\n    }\n\n    function handleConfirmClone() {\n        let body = {\n            otp: otp\n        };\n        setIsLoading(true);\n        TaskProjectManageService.ProcessClone(projectKey, body, (data: any) => {\n            Fn.PrintMsgSuccess(data);\n            navigate(`/tools/tasks/projects/${data.data.data.projectKeyNew}`);\n        }, undefined, () => {\n            setIsLoading(false);\n        })\n    }\n\n    function RenderSprints() {\n        return sprints.map((data: any, index: number) => {\n            return (\n                <Box key={index}>\n                    <p>\n                        <strong>Giai đoạn {index + 1}: </strong> {data.name}\n                    </p>\n                    <p>\n                        <strong>Thời gian: </strong>\n                        <UIFormatDateVNComponent value={data.dateFrom} /> -\n                        <UIFormatDateVNComponent value={data.dateTo} />\n                    </p>\n                </Box>\n            )\n        })\n    }\n\n    function RenderList(datas: any) {\n        return datas.map((data: any, index: number) => {\n            if (data.isNew !== null) {\n                return (\n                    <li key={index}>{data.value} - Trạng thái mới: {data.isNew ? \"True\" : \"\"} - Trạng thái đóng: {data.isClosed ? \"True\" : \"\"}</li>\n                );\n            } else {\n                return (\n                    <li key={index}>{data.value}</li>\n                );\n            }\n        })\n    }\n\n    return (\n        <MyBox\n            isLoading={isLoading}\n            title=\"Clone dự án\">\n            <Box showBox={false}>\n                <MyButton\n                    type=\"primary\"\n                    isLoading={isLoading}\n                    onClick={handleClickGetClone}\n                    value=\"Get data clone\" />\n            </Box>\n            <Box showBox={false}>\n                <Row gutter={24}>\n                    <Col span={12}>\n                        <MyFormItem.Input\n                            label=\"Nhập OTP\"\n                            value={otp}\n                            setValue={setOtp} />\n                    </Col>\n                    <Col span={12}>\n                        <MyButton\n                            type=\"primary\"\n                            isLoading={isLoading}\n                            onClick={handleConfirmClone}\n                            value=\"Xác nhận clone dự án\" />\n                    </Col>\n                </Row>\n            </Box>\n            <Box>\n                <h2>Chi tiết dự án</h2>\n                <Row gutter={12}>\n                    <Col span={12}>\n                        <strong>Tên dự án: </strong>{projectName}\n                    </Col>\n\n                    <Col span={12}>\n                        <strong>Tag: </strong> {projectTag}\n                    </Col>\n\n                    <Col span={24}>\n                        <strong>Nội dung: </strong>{projectContent}\n                    </Col>\n\n                    <Col span={12}>\n                        <strong>Dự án cha: </strong> {projectParent}\n                    </Col>\n\n                    <Col span={12}>\n                        <strong>Trạng thái: </strong> {projectStatus}\n                    </Col>\n                </Row>\n            </Box>\n\n            <Box>\n                <h2>Danh sách các giai đoạn dự án</h2>\n                {RenderSprints()}\n            </Box>\n\n            <Box>\n                <h2>Danh sách cài đặt dự án</h2>\n                <Row gutter={12}>\n                    <Col span={24}>\n                        <h3>Danh sách trạng thái dự án</h3>\n                        <ul>\n                            {RenderList(settingType1)}\n                        </ul>\n                    </Col>\n\n                    <Col span={24}>\n                        <h3>Danh sách trạng thái giai đoạn</h3>\n                        <ul>\n                            {RenderList(settingType2)}\n                        </ul>\n                    </Col>\n\n                    <Col span={24}>\n                        <h3>Danh sách trạng thái công việc</h3>\n                        <ul>\n                            {RenderList(settingType3)}\n                        </ul>\n                    </Col>\n\n                    <Col span={24}>\n                        <h3>Danh sách trạng thái vấn đề</h3>\n                        <ul>\n                            {RenderList(settingType4)}\n                        </ul>\n                    </Col>\n\n                    <Col span={24}>\n                        <h3>Danh sách độ ưu tiên</h3>\n                        <ul>\n                            {RenderList(settingType5)}\n                        </ul>\n                    </Col>\n\n                    <Col span={24}>\n                        <h3>Danh sách mức độ ảnh hưởng</h3>\n                        <ul>\n                            {RenderList(settingType6)}\n                        </ul>\n                    </Col>\n\n                    <Col span={24}>\n                        <h3>Danh sách Tag</h3>\n                        <ul>\n                            {RenderList(settingType7)}\n                        </ul>\n                    </Col>\n\n                    <Col span={24}>\n                        <h3>Danh sách loại vấn đề</h3>\n                        <ul>\n                            {RenderList(settingType8)}\n                        </ul>\n                    </Col>\n                </Row>\n            </Box>\n        </MyBox >\n    )\n}","import { MyAxios } from \"../helper/myaxios\";\nimport { PaginationRequest } from \"../models/baseModel\";\n\nclass TaskProjectManageService {\n    static GetQrCode(key: string) {\n        var url = `${MyAxios.BaseURL}/user/qrCode?data=taskManage_projectManage_${key}`;\n        return url;\n    }\n\n    static GetLog(projectKey: string | undefined, paginationRequest: PaginationRequest, then?: any, exp?: any, final?: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/logs?${paginationRequest.generateQueryString()}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static GetClone(projectKey: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/duplicate`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static ProcessClone(projectKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/duplicate`;\n        return MyAxios.Post(url, body, then, exp, final);\n    }\n\n    static GetList(paginationRequest: PaginationRequest, then?: any, exp?: any, final?: any) {\n        var url = `v2/tools/taskManages/projects?${paginationRequest.generateQueryString()}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static GetDetail(key: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `v2/tools/taskManages/projects/${key}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static Search(q: string, then?: any, exp?: any, final?: any) {\n        var url = `v2/tools/taskManages/projects/query?q=${q}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static Add(body: any, then?: any, exp?: any, final?: any) {\n        var url = `v2/tools/taskManages/projects`;\n        console.log(body);\n\n        return MyAxios.Post(url, body, then, exp, final);\n    }\n\n    static Edit(key: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `v2/tools/taskManages/projects/${key}`;\n        return MyAxios.Put(url, body, then, exp, final);\n    }\n\n    static Delete(key: string | undefined, timestamp: string, then?: any, exp?: any, final?: any) {\n        var url = `v2/tools/taskManages/projects/${key}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxios.Delete(url, then, exp, final);\n    }\n}\n\nclass TaskSprintManageService {\n    static GetList(projectKey: string | undefined, paginationRequest: PaginationRequest | undefined, then?: any, exp?: any, final?: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints${paginationRequest === undefined ? \"\" : \"?\" + paginationRequest?.generateQueryString()}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static GetDetail(projectKey: string | undefined, sprintKey: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static Add(projectKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints`;\n        return MyAxios.Post(url, body, then, exp, final);\n    }\n\n    static Edit(projectKey: string | undefined, sprintKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}`;\n        return MyAxios.Put(url, body, then, exp, final);\n    }\n\n    static Delete(projectKey: string | undefined, sprintKey: string | undefined, timestamp: string, then?: any, exp?: any, final?: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/sprints/${sprintKey}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxios.Delete(url, then, exp, final);\n    }\n}\n\nclass TaskToDoListService {\n    static GetList(projectKey: string | undefined, sprintKey: string | undefined, paginationRequest: PaginationRequest | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/sprints/${sprintKey}/toDoLists?${paginationRequest?.generateQueryString()}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static GetDetail(projectKey: string | undefined, sprintKey: string | undefined, key: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/sprints/${sprintKey}/toDoLists/${key}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static Add(projectKey: string | undefined, sprintKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/sprints/${sprintKey}/toDoLists`;\n        return MyAxios.Post(url, body, then, exp, final);\n    }\n\n    static Edit(projectKey: string | undefined, sprintKey: string | undefined, key: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/sprints/${sprintKey}/toDoLists/${key}`;\n        return MyAxios.Put(url, body, then, exp, final);\n    }\n\n    static Delete(projectKey: string | undefined, sprintKey: string | undefined, key: string | undefined, timestamp: string, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/sprints/${sprintKey}/toDoLists/${key}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxios.Delete(url, then, exp, final);\n    }\n}\n\nclass SettingService {\n    static GetListSettingStatus(projectKey: string | undefined, type: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings?type=${type}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static GetDetailSettingStatus(projectKey: string | undefined, settingKey: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/${settingKey}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static AddSettingStatus(projectKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings`;\n        return MyAxios.Post(url, body, then, exp, final);\n    }\n\n    static EditSettingStatus(projectKey: string | undefined, settingKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/${settingKey}`;\n        return MyAxios.Put(url, body, then, exp, final);\n    }\n\n    static DeleteSettingStatus(projectKey: string | undefined, settingKey: string | undefined, timestamp: string, then?: any, exp?: any, final?: any) {\n        var url = `v2/tools/taskManages/projects/${projectKey}/statusSettings/${settingKey}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxios.Delete(url, then, exp, final);\n    }\n    // Other\n    // static GetListSettingOther(projectKey: string | undefined, type: number, then?: any, exp?: any, final?: any) {\n    //     var url = `tools/tasks/projects/${projectKey}/settingOther?type=${type}`;\n    //     return MyAxios.Get(url, then, exp, final);\n    // }\n\n    // static GetDetailSettingOther(projectKey: string | undefined, settingKey: string | undefined, then?: any, exp?: any, final?: any) {\n    //     var url = `tools/tasks/projects/${projectKey}/settingOther/${settingKey}`;\n    //     return MyAxios.Get(url, then, exp, final);\n    // }\n\n    // static AddSettingOther(projectKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n    //     var url = `tools/tasks/projects/${projectKey}/settingOther`;\n    //     return MyAxios.Post(url, body, then, exp, final);\n    // }\n\n    // static EditSettingOther(projectKey: string | undefined, settingKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n    //     var url = `tools/tasks/projects/${projectKey}/settingOther/${settingKey}`;\n    //     return MyAxios.Put(url, body, then, exp, final);\n    // }\n\n    // static DeleteSettingOther(projectKey: string | undefined, settingKey: string | undefined, timestamp: string, then?: any, exp?: any, final?: any) {\n    //     var url = `tools/tasks/projects/${projectKey}/settingOther/${settingKey}?timestamp=${encodeURIComponent(timestamp)}`;\n    //     return MyAxios.Delete(url, then, exp, final);\n    // }\n\n    static SearchByType(projectKey: string | undefined, type: number, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/settings/query?type=${type}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static Import(projectKey: string | undefined, formData: FormData, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/settings/import`;\n        return MyAxios.Post(url, formData, then, exp, final);\n    }\n\n    static Export(projectKey: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/settings/export`;\n        return MyAxios.GetFile(url, then, exp, final);\n    }\n}\n\nclass VariableService {\n    static GetList(projectKey: string | undefined, paginationRequest: PaginationRequest, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/workflow/variables?${paginationRequest.generateQueryString()}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static GetDetail(projectKey: string | undefined, key: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/workflow/variables/${key}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static Add(projectKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/workflow/variables`;\n        return MyAxios.Post(url, body, then, exp, final);\n    }\n\n    static Edit(projectKey: string | undefined, key: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/workflow/variables/${key}`;\n        return MyAxios.Put(url, body, then, exp, final);\n    }\n\n    static Delete(projectKey: string | undefined, key: string | undefined, timestamp: string, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/workflow/variables/${key}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxios.Delete(url, then, exp, final);\n    }\n}\n\nclass DocumentService {\n    static GetList(projectKey: string | undefined, paginationRequest: PaginationRequest, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/documents/folders?${paginationRequest.generateQueryString()}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static GetDetail(projectKey: string | undefined, key: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/documents/folders/${key}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static Add(projectKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/documents/folders`;\n        return MyAxios.Post(url, body, then, exp, final);\n    }\n\n    static Edit(projectKey: string | undefined, key: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/documents/folders/${key}`;\n        return MyAxios.Put(url, body, then, exp, final);\n    }\n\n    static Delete(projectKey: string | undefined, key: string | undefined, timestamp: string, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/documents/folders/${key}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxios.Delete(url, then, exp, final);\n    }\n}\n\nclass ApiDocService {\n    static GetList(projectKey: string | undefined, folderKey: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/documents/folders/${folderKey}/apiDocs`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static GetDetail(projectKey: string | undefined, folderKey: string | undefined, key: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/documents/folders/${folderKey}/apiDocs/${key}`;\n        return MyAxios.Get(url, then, exp, final);\n    }\n\n    static Add(projectKey: string | undefined, folderKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/documents/folders/${folderKey}/apiDocs`;\n        return MyAxios.Post(url, body, then, exp, final);\n    }\n\n    static Edit(projectKey: string | undefined, folderKey: string | undefined, key: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/documents/folders/${folderKey}/apiDocs/${key}`;\n        return MyAxios.Put(url, body, then, exp, final);\n    }\n\n    static Delete(projectKey: string | undefined, folderKey: string | undefined, key: string | undefined, timestamp: string, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/documents/folders/${folderKey}/apiDocs/${key}?timestamp=${encodeURIComponent(timestamp)}`;\n        return MyAxios.Delete(url, then, exp, final);\n    }\n\n    static RunApi(projectKey: string | undefined, folderKey: string | undefined, key: string | undefined, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/documents/folders/${folderKey}/apiDocs/${key}/runApi`;\n        return MyAxios.Post(url, {}, then, exp, final);\n    }\n\n    static SaveResponse(projectKey: string | undefined, folderKey: string | undefined, apiDocKey: string | undefined, body: any, then?: any, exp?: any, final?: any) {\n        var url = `tools/tasks/projects/${projectKey}/documents/folders/${folderKey}/apiDocs/${apiDocKey}/responses`;\n        return MyAxios.Post(url, body, then, exp, final);\n    }\n}\n\nexport {\n    TaskProjectManageService,\n    TaskSprintManageService,\n    TaskToDoListService,\n    SettingService,\n    VariableService,\n    DocumentService,\n    ApiDocService\n}"],"names":["MyInput","props","onClick","value","onChange","undefined","target","setValue","required","readOnly","MyFormItem","label","Input","format","moment","inputReadOnly","showTime","disabled","min","max","className","span","colSpan1","colSpan2","Number","options","TextArea","Password","Search","loading","onSearch","checked","type","files","UIFormatDateVNComponent","dateStr","UIFormatDateTimeVNComponent","CloneComponent","projectKey","useParams","key","navigate","useNavigate","useState","isLoading","setIsLoading","otp","setOtp","projectName","setProjectName","projectContent","setProjectContent","projectTag","setProjectTag","projectParent","setProjectParent","projectStatus","setProjectStatus","sprints","setSprints","settingType1","setSettingType1","settingType2","setSettingType2","settingType3","setSettingType3","settingType4","setSettingType4","settingType5","setSettingType5","settingType6","setSettingType6","settingType7","setSettingType7","settingType8","setSettingType8","RenderList","datas","map","data","index","isNew","isClosed","title","showBox","TaskProjectManageService","console","log","projectDetail","name","content","tag","toString","parentProject","status","settings","length","element","gutter","body","Fn","projectKeyNew","dateFrom","dateTo","MyAxios","paginationRequest","then","exp","final","url","generateQueryString","q","timestamp","encodeURIComponent","TaskSprintManageService","sprintKey","TaskToDoListService","SettingService","settingKey","formData","VariableService","DocumentService","ApiDocService","folderKey","apiDocKey"],"sourceRoot":""}